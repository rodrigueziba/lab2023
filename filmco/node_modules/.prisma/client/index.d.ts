
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model areas_desempenio
 * 
 */
export type areas_desempenio = $Result.DefaultSelection<Prisma.$areas_desempenioPayload>
/**
 * Model categoria_locaciones
 * 
 */
export type categoria_locaciones = $Result.DefaultSelection<Prisma.$categoria_locacionesPayload>
/**
 * Model imagenes_locaciones
 * 
 */
export type imagenes_locaciones = $Result.DefaultSelection<Prisma.$imagenes_locacionesPayload>
/**
 * Model imagenes_prestadores
 * 
 */
export type imagenes_prestadores = $Result.DefaultSelection<Prisma.$imagenes_prestadoresPayload>
/**
 * Model locaciones
 * 
 */
export type locaciones = $Result.DefaultSelection<Prisma.$locacionesPayload>
/**
 * Model perfil
 * 
 */
export type perfil = $Result.DefaultSelection<Prisma.$perfilPayload>
/**
 * Model permisos
 * 
 */
export type permisos = $Result.DefaultSelection<Prisma.$permisosPayload>
/**
 * Model tipo_actividad
 * 
 */
export type tipo_actividad = $Result.DefaultSelection<Prisma.$tipo_actividadPayload>
/**
 * Model tipo_productora
 * 
 */
export type tipo_productora = $Result.DefaultSelection<Prisma.$tipo_productoraPayload>
/**
 * Model tipo_servicio
 * 
 */
export type tipo_servicio = $Result.DefaultSelection<Prisma.$tipo_servicioPayload>
/**
 * Model user
 * 
 */
export type user = $Result.DefaultSelection<Prisma.$userPayload>
/**
 * Model users
 * 
 */
export type users = $Result.DefaultSelection<Prisma.$usersPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const locaciones_ciudad: {
  Ushuaia: 'Ushuaia',
  Tolhuin: 'Tolhuin',
  Rio_Grande: 'Rio_Grande'
};

export type locaciones_ciudad = (typeof locaciones_ciudad)[keyof typeof locaciones_ciudad]


export const locaciones_jurisdiccion: {
  estatal: 'estatal',
  privado: 'privado'
};

export type locaciones_jurisdiccion = (typeof locaciones_jurisdiccion)[keyof typeof locaciones_jurisdiccion]


export const perfil_perfil: {
  Profesional: 'Profesional',
  Productora_Audiovisual: 'Productora_Audiovisual',
  Comercio_o_Empresa_Audiovisual: 'Comercio_o_Empresa_Audiovisual',
  Comercio_o_empresa_af_n: 'Comercio_o_empresa_af_n'
};

export type perfil_perfil = (typeof perfil_perfil)[keyof typeof perfil_perfil]


export const perfil_area_cobertura: {
  Ushuaia: 'Ushuaia',
  Tolhuin: 'Tolhuin',
  Rio_Grande: 'Rio_Grande'
};

export type perfil_area_cobertura = (typeof perfil_area_cobertura)[keyof typeof perfil_area_cobertura]


export const perfil_idioma: {
  Ingles: 'Ingles',
  Senias: 'Senias',
  Portugues: 'Portugues',
  Aleman: 'Aleman',
  Frances: 'Frances',
  Chino: 'Chino',
  Japones: 'Japones'
};

export type perfil_idioma = (typeof perfil_idioma)[keyof typeof perfil_idioma]


export const user_rol: {
  Administrador: 'Administrador',
  Prestador: 'Prestador',
  Contratante: 'Contratante',
  Prestador_Secundario: 'Prestador_Secundario'
};

export type user_rol = (typeof user_rol)[keyof typeof user_rol]


export const users_rol: {
  Administrador: 'Administrador',
  Prestador: 'Prestador',
  Contratante: 'Contratante',
  Prestador_Secundario: 'Prestador_Secundario'
};

export type users_rol = (typeof users_rol)[keyof typeof users_rol]

}

export type locaciones_ciudad = $Enums.locaciones_ciudad

export const locaciones_ciudad: typeof $Enums.locaciones_ciudad

export type locaciones_jurisdiccion = $Enums.locaciones_jurisdiccion

export const locaciones_jurisdiccion: typeof $Enums.locaciones_jurisdiccion

export type perfil_perfil = $Enums.perfil_perfil

export const perfil_perfil: typeof $Enums.perfil_perfil

export type perfil_area_cobertura = $Enums.perfil_area_cobertura

export const perfil_area_cobertura: typeof $Enums.perfil_area_cobertura

export type perfil_idioma = $Enums.perfil_idioma

export const perfil_idioma: typeof $Enums.perfil_idioma

export type user_rol = $Enums.user_rol

export const user_rol: typeof $Enums.user_rol

export type users_rol = $Enums.users_rol

export const users_rol: typeof $Enums.users_rol

/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Areas_desempenios
 * const areas_desempenios = await prisma.areas_desempenio.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  T extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof T ? T['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<T['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Areas_desempenios
   * const areas_desempenios = await prisma.areas_desempenio.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<T, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<'extends', Prisma.TypeMapCb, ExtArgs>

      /**
   * `prisma.areas_desempenio`: Exposes CRUD operations for the **areas_desempenio** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Areas_desempenios
    * const areas_desempenios = await prisma.areas_desempenio.findMany()
    * ```
    */
  get areas_desempenio(): Prisma.areas_desempenioDelegate<ExtArgs>;

  /**
   * `prisma.categoria_locaciones`: Exposes CRUD operations for the **categoria_locaciones** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Categoria_locaciones
    * const categoria_locaciones = await prisma.categoria_locaciones.findMany()
    * ```
    */
  get categoria_locaciones(): Prisma.categoria_locacionesDelegate<ExtArgs>;

  /**
   * `prisma.imagenes_locaciones`: Exposes CRUD operations for the **imagenes_locaciones** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Imagenes_locaciones
    * const imagenes_locaciones = await prisma.imagenes_locaciones.findMany()
    * ```
    */
  get imagenes_locaciones(): Prisma.imagenes_locacionesDelegate<ExtArgs>;

  /**
   * `prisma.imagenes_prestadores`: Exposes CRUD operations for the **imagenes_prestadores** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Imagenes_prestadores
    * const imagenes_prestadores = await prisma.imagenes_prestadores.findMany()
    * ```
    */
  get imagenes_prestadores(): Prisma.imagenes_prestadoresDelegate<ExtArgs>;

  /**
   * `prisma.locaciones`: Exposes CRUD operations for the **locaciones** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Locaciones
    * const locaciones = await prisma.locaciones.findMany()
    * ```
    */
  get locaciones(): Prisma.locacionesDelegate<ExtArgs>;

  /**
   * `prisma.perfil`: Exposes CRUD operations for the **perfil** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Perfils
    * const perfils = await prisma.perfil.findMany()
    * ```
    */
  get perfil(): Prisma.perfilDelegate<ExtArgs>;

  /**
   * `prisma.permisos`: Exposes CRUD operations for the **permisos** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Permisos
    * const permisos = await prisma.permisos.findMany()
    * ```
    */
  get permisos(): Prisma.permisosDelegate<ExtArgs>;

  /**
   * `prisma.tipo_actividad`: Exposes CRUD operations for the **tipo_actividad** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tipo_actividads
    * const tipo_actividads = await prisma.tipo_actividad.findMany()
    * ```
    */
  get tipo_actividad(): Prisma.tipo_actividadDelegate<ExtArgs>;

  /**
   * `prisma.tipo_productora`: Exposes CRUD operations for the **tipo_productora** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tipo_productoras
    * const tipo_productoras = await prisma.tipo_productora.findMany()
    * ```
    */
  get tipo_productora(): Prisma.tipo_productoraDelegate<ExtArgs>;

  /**
   * `prisma.tipo_servicio`: Exposes CRUD operations for the **tipo_servicio** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tipo_servicios
    * const tipo_servicios = await prisma.tipo_servicio.findMany()
    * ```
    */
  get tipo_servicio(): Prisma.tipo_servicioDelegate<ExtArgs>;

  /**
   * `prisma.user`: Exposes CRUD operations for the **user** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.user.findMany()
    * ```
    */
  get user(): Prisma.userDelegate<ExtArgs>;

  /**
   * `prisma.users`: Exposes CRUD operations for the **users** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.users.findMany()
    * ```
    */
  get users(): Prisma.usersDelegate<ExtArgs>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError
  export import NotFoundError = runtime.NotFoundError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql

  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 5.6.0
   * Query Engine version: e95e739751f42d8ca026f6b910f5a2dc5adeaeee
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON object.
   * This type can be useful to enforce some input to be JSON-compatible or as a super-type to be extended from. 
   */
  export type JsonObject = {[Key in string]?: JsonValue}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON array.
   */
  export interface JsonArray extends Array<JsonValue> {}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches any valid JSON value.
   */
  export type JsonValue = string | number | boolean | JsonObject | JsonArray | null

  /**
   * Matches a JSON object.
   * Unlike `JsonObject`, this type allows undefined and read-only properties.
   */
  export type InputJsonObject = {readonly [Key in string]?: InputJsonValue | null}

  /**
   * Matches a JSON array.
   * Unlike `JsonArray`, readonly arrays are assignable to this type.
   */
  export interface InputJsonArray extends ReadonlyArray<InputJsonValue | null> {}

  /**
   * Matches any valid value that can be used as an input for operations like
   * create and update as the value of a JSON field. Unlike `JsonValue`, this
   * type allows read-only arrays and read-only object properties and disallows
   * `null` at the top level.
   *
   * `null` cannot be used as the value of a JSON field because its meaning
   * would be ambiguous. Use `Prisma.JsonNull` to store the JSON null value or
   * `Prisma.DbNull` to clear the JSON value and set the field to the database
   * NULL value instead.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-by-null-values
   */
  export type InputJsonValue = string | number | boolean | InputJsonObject | InputJsonArray | { toJSON(): unknown }

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    areas_desempenio: 'areas_desempenio',
    categoria_locaciones: 'categoria_locaciones',
    imagenes_locaciones: 'imagenes_locaciones',
    imagenes_prestadores: 'imagenes_prestadores',
    locaciones: 'locaciones',
    perfil: 'perfil',
    permisos: 'permisos',
    tipo_actividad: 'tipo_actividad',
    tipo_productora: 'tipo_productora',
    tipo_servicio: 'tipo_servicio',
    user: 'user',
    users: 'users'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }


  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.InternalArgs}, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs']>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    meta: {
      modelProps: 'areas_desempenio' | 'categoria_locaciones' | 'imagenes_locaciones' | 'imagenes_prestadores' | 'locaciones' | 'perfil' | 'permisos' | 'tipo_actividad' | 'tipo_productora' | 'tipo_servicio' | 'user' | 'users'
      txIsolationLevel: Prisma.TransactionIsolationLevel
    },
    model: {
      areas_desempenio: {
        payload: Prisma.$areas_desempenioPayload<ExtArgs>
        fields: Prisma.areas_desempenioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.areas_desempenioFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$areas_desempenioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.areas_desempenioFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$areas_desempenioPayload>
          }
          findFirst: {
            args: Prisma.areas_desempenioFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$areas_desempenioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.areas_desempenioFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$areas_desempenioPayload>
          }
          findMany: {
            args: Prisma.areas_desempenioFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$areas_desempenioPayload>[]
          }
          create: {
            args: Prisma.areas_desempenioCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$areas_desempenioPayload>
          }
          createMany: {
            args: Prisma.areas_desempenioCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.areas_desempenioDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$areas_desempenioPayload>
          }
          update: {
            args: Prisma.areas_desempenioUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$areas_desempenioPayload>
          }
          deleteMany: {
            args: Prisma.areas_desempenioDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.areas_desempenioUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.areas_desempenioUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$areas_desempenioPayload>
          }
          aggregate: {
            args: Prisma.Areas_desempenioAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateAreas_desempenio>
          }
          groupBy: {
            args: Prisma.areas_desempenioGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Areas_desempenioGroupByOutputType>[]
          }
          count: {
            args: Prisma.areas_desempenioCountArgs<ExtArgs>,
            result: $Utils.Optional<Areas_desempenioCountAggregateOutputType> | number
          }
        }
      }
      categoria_locaciones: {
        payload: Prisma.$categoria_locacionesPayload<ExtArgs>
        fields: Prisma.categoria_locacionesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.categoria_locacionesFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$categoria_locacionesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.categoria_locacionesFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$categoria_locacionesPayload>
          }
          findFirst: {
            args: Prisma.categoria_locacionesFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$categoria_locacionesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.categoria_locacionesFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$categoria_locacionesPayload>
          }
          findMany: {
            args: Prisma.categoria_locacionesFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$categoria_locacionesPayload>[]
          }
          create: {
            args: Prisma.categoria_locacionesCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$categoria_locacionesPayload>
          }
          createMany: {
            args: Prisma.categoria_locacionesCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.categoria_locacionesDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$categoria_locacionesPayload>
          }
          update: {
            args: Prisma.categoria_locacionesUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$categoria_locacionesPayload>
          }
          deleteMany: {
            args: Prisma.categoria_locacionesDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.categoria_locacionesUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.categoria_locacionesUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$categoria_locacionesPayload>
          }
          aggregate: {
            args: Prisma.Categoria_locacionesAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateCategoria_locaciones>
          }
          groupBy: {
            args: Prisma.categoria_locacionesGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Categoria_locacionesGroupByOutputType>[]
          }
          count: {
            args: Prisma.categoria_locacionesCountArgs<ExtArgs>,
            result: $Utils.Optional<Categoria_locacionesCountAggregateOutputType> | number
          }
        }
      }
      imagenes_locaciones: {
        payload: Prisma.$imagenes_locacionesPayload<ExtArgs>
        fields: Prisma.imagenes_locacionesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.imagenes_locacionesFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$imagenes_locacionesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.imagenes_locacionesFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$imagenes_locacionesPayload>
          }
          findFirst: {
            args: Prisma.imagenes_locacionesFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$imagenes_locacionesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.imagenes_locacionesFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$imagenes_locacionesPayload>
          }
          findMany: {
            args: Prisma.imagenes_locacionesFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$imagenes_locacionesPayload>[]
          }
          create: {
            args: Prisma.imagenes_locacionesCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$imagenes_locacionesPayload>
          }
          createMany: {
            args: Prisma.imagenes_locacionesCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.imagenes_locacionesDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$imagenes_locacionesPayload>
          }
          update: {
            args: Prisma.imagenes_locacionesUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$imagenes_locacionesPayload>
          }
          deleteMany: {
            args: Prisma.imagenes_locacionesDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.imagenes_locacionesUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.imagenes_locacionesUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$imagenes_locacionesPayload>
          }
          aggregate: {
            args: Prisma.Imagenes_locacionesAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateImagenes_locaciones>
          }
          groupBy: {
            args: Prisma.imagenes_locacionesGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Imagenes_locacionesGroupByOutputType>[]
          }
          count: {
            args: Prisma.imagenes_locacionesCountArgs<ExtArgs>,
            result: $Utils.Optional<Imagenes_locacionesCountAggregateOutputType> | number
          }
        }
      }
      imagenes_prestadores: {
        payload: Prisma.$imagenes_prestadoresPayload<ExtArgs>
        fields: Prisma.imagenes_prestadoresFieldRefs
        operations: {
          findUnique: {
            args: Prisma.imagenes_prestadoresFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$imagenes_prestadoresPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.imagenes_prestadoresFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$imagenes_prestadoresPayload>
          }
          findFirst: {
            args: Prisma.imagenes_prestadoresFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$imagenes_prestadoresPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.imagenes_prestadoresFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$imagenes_prestadoresPayload>
          }
          findMany: {
            args: Prisma.imagenes_prestadoresFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$imagenes_prestadoresPayload>[]
          }
          create: {
            args: Prisma.imagenes_prestadoresCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$imagenes_prestadoresPayload>
          }
          createMany: {
            args: Prisma.imagenes_prestadoresCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.imagenes_prestadoresDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$imagenes_prestadoresPayload>
          }
          update: {
            args: Prisma.imagenes_prestadoresUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$imagenes_prestadoresPayload>
          }
          deleteMany: {
            args: Prisma.imagenes_prestadoresDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.imagenes_prestadoresUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.imagenes_prestadoresUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$imagenes_prestadoresPayload>
          }
          aggregate: {
            args: Prisma.Imagenes_prestadoresAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateImagenes_prestadores>
          }
          groupBy: {
            args: Prisma.imagenes_prestadoresGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Imagenes_prestadoresGroupByOutputType>[]
          }
          count: {
            args: Prisma.imagenes_prestadoresCountArgs<ExtArgs>,
            result: $Utils.Optional<Imagenes_prestadoresCountAggregateOutputType> | number
          }
        }
      }
      locaciones: {
        payload: Prisma.$locacionesPayload<ExtArgs>
        fields: Prisma.locacionesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.locacionesFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$locacionesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.locacionesFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$locacionesPayload>
          }
          findFirst: {
            args: Prisma.locacionesFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$locacionesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.locacionesFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$locacionesPayload>
          }
          findMany: {
            args: Prisma.locacionesFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$locacionesPayload>[]
          }
          create: {
            args: Prisma.locacionesCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$locacionesPayload>
          }
          createMany: {
            args: Prisma.locacionesCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.locacionesDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$locacionesPayload>
          }
          update: {
            args: Prisma.locacionesUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$locacionesPayload>
          }
          deleteMany: {
            args: Prisma.locacionesDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.locacionesUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.locacionesUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$locacionesPayload>
          }
          aggregate: {
            args: Prisma.LocacionesAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateLocaciones>
          }
          groupBy: {
            args: Prisma.locacionesGroupByArgs<ExtArgs>,
            result: $Utils.Optional<LocacionesGroupByOutputType>[]
          }
          count: {
            args: Prisma.locacionesCountArgs<ExtArgs>,
            result: $Utils.Optional<LocacionesCountAggregateOutputType> | number
          }
        }
      }
      perfil: {
        payload: Prisma.$perfilPayload<ExtArgs>
        fields: Prisma.perfilFieldRefs
        operations: {
          findUnique: {
            args: Prisma.perfilFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$perfilPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.perfilFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$perfilPayload>
          }
          findFirst: {
            args: Prisma.perfilFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$perfilPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.perfilFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$perfilPayload>
          }
          findMany: {
            args: Prisma.perfilFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$perfilPayload>[]
          }
          create: {
            args: Prisma.perfilCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$perfilPayload>
          }
          createMany: {
            args: Prisma.perfilCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.perfilDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$perfilPayload>
          }
          update: {
            args: Prisma.perfilUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$perfilPayload>
          }
          deleteMany: {
            args: Prisma.perfilDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.perfilUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.perfilUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$perfilPayload>
          }
          aggregate: {
            args: Prisma.PerfilAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregatePerfil>
          }
          groupBy: {
            args: Prisma.perfilGroupByArgs<ExtArgs>,
            result: $Utils.Optional<PerfilGroupByOutputType>[]
          }
          count: {
            args: Prisma.perfilCountArgs<ExtArgs>,
            result: $Utils.Optional<PerfilCountAggregateOutputType> | number
          }
        }
      }
      permisos: {
        payload: Prisma.$permisosPayload<ExtArgs>
        fields: Prisma.permisosFieldRefs
        operations: {
          findUnique: {
            args: Prisma.permisosFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$permisosPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.permisosFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$permisosPayload>
          }
          findFirst: {
            args: Prisma.permisosFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$permisosPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.permisosFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$permisosPayload>
          }
          findMany: {
            args: Prisma.permisosFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$permisosPayload>[]
          }
          create: {
            args: Prisma.permisosCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$permisosPayload>
          }
          createMany: {
            args: Prisma.permisosCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.permisosDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$permisosPayload>
          }
          update: {
            args: Prisma.permisosUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$permisosPayload>
          }
          deleteMany: {
            args: Prisma.permisosDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.permisosUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.permisosUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$permisosPayload>
          }
          aggregate: {
            args: Prisma.PermisosAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregatePermisos>
          }
          groupBy: {
            args: Prisma.permisosGroupByArgs<ExtArgs>,
            result: $Utils.Optional<PermisosGroupByOutputType>[]
          }
          count: {
            args: Prisma.permisosCountArgs<ExtArgs>,
            result: $Utils.Optional<PermisosCountAggregateOutputType> | number
          }
        }
      }
      tipo_actividad: {
        payload: Prisma.$tipo_actividadPayload<ExtArgs>
        fields: Prisma.tipo_actividadFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tipo_actividadFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tipo_actividadPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tipo_actividadFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tipo_actividadPayload>
          }
          findFirst: {
            args: Prisma.tipo_actividadFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tipo_actividadPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tipo_actividadFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tipo_actividadPayload>
          }
          findMany: {
            args: Prisma.tipo_actividadFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tipo_actividadPayload>[]
          }
          create: {
            args: Prisma.tipo_actividadCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tipo_actividadPayload>
          }
          createMany: {
            args: Prisma.tipo_actividadCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.tipo_actividadDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tipo_actividadPayload>
          }
          update: {
            args: Prisma.tipo_actividadUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tipo_actividadPayload>
          }
          deleteMany: {
            args: Prisma.tipo_actividadDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.tipo_actividadUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.tipo_actividadUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tipo_actividadPayload>
          }
          aggregate: {
            args: Prisma.Tipo_actividadAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateTipo_actividad>
          }
          groupBy: {
            args: Prisma.tipo_actividadGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Tipo_actividadGroupByOutputType>[]
          }
          count: {
            args: Prisma.tipo_actividadCountArgs<ExtArgs>,
            result: $Utils.Optional<Tipo_actividadCountAggregateOutputType> | number
          }
        }
      }
      tipo_productora: {
        payload: Prisma.$tipo_productoraPayload<ExtArgs>
        fields: Prisma.tipo_productoraFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tipo_productoraFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tipo_productoraPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tipo_productoraFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tipo_productoraPayload>
          }
          findFirst: {
            args: Prisma.tipo_productoraFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tipo_productoraPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tipo_productoraFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tipo_productoraPayload>
          }
          findMany: {
            args: Prisma.tipo_productoraFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tipo_productoraPayload>[]
          }
          create: {
            args: Prisma.tipo_productoraCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tipo_productoraPayload>
          }
          createMany: {
            args: Prisma.tipo_productoraCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.tipo_productoraDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tipo_productoraPayload>
          }
          update: {
            args: Prisma.tipo_productoraUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tipo_productoraPayload>
          }
          deleteMany: {
            args: Prisma.tipo_productoraDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.tipo_productoraUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.tipo_productoraUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tipo_productoraPayload>
          }
          aggregate: {
            args: Prisma.Tipo_productoraAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateTipo_productora>
          }
          groupBy: {
            args: Prisma.tipo_productoraGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Tipo_productoraGroupByOutputType>[]
          }
          count: {
            args: Prisma.tipo_productoraCountArgs<ExtArgs>,
            result: $Utils.Optional<Tipo_productoraCountAggregateOutputType> | number
          }
        }
      }
      tipo_servicio: {
        payload: Prisma.$tipo_servicioPayload<ExtArgs>
        fields: Prisma.tipo_servicioFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tipo_servicioFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tipo_servicioPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tipo_servicioFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tipo_servicioPayload>
          }
          findFirst: {
            args: Prisma.tipo_servicioFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tipo_servicioPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tipo_servicioFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tipo_servicioPayload>
          }
          findMany: {
            args: Prisma.tipo_servicioFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tipo_servicioPayload>[]
          }
          create: {
            args: Prisma.tipo_servicioCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tipo_servicioPayload>
          }
          createMany: {
            args: Prisma.tipo_servicioCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.tipo_servicioDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tipo_servicioPayload>
          }
          update: {
            args: Prisma.tipo_servicioUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tipo_servicioPayload>
          }
          deleteMany: {
            args: Prisma.tipo_servicioDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.tipo_servicioUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.tipo_servicioUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$tipo_servicioPayload>
          }
          aggregate: {
            args: Prisma.Tipo_servicioAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateTipo_servicio>
          }
          groupBy: {
            args: Prisma.tipo_servicioGroupByArgs<ExtArgs>,
            result: $Utils.Optional<Tipo_servicioGroupByOutputType>[]
          }
          count: {
            args: Prisma.tipo_servicioCountArgs<ExtArgs>,
            result: $Utils.Optional<Tipo_servicioCountAggregateOutputType> | number
          }
        }
      }
      user: {
        payload: Prisma.$userPayload<ExtArgs>
        fields: Prisma.userFieldRefs
        operations: {
          findUnique: {
            args: Prisma.userFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$userPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.userFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$userPayload>
          }
          findFirst: {
            args: Prisma.userFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$userPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.userFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$userPayload>
          }
          findMany: {
            args: Prisma.userFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$userPayload>[]
          }
          create: {
            args: Prisma.userCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$userPayload>
          }
          createMany: {
            args: Prisma.userCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.userDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$userPayload>
          }
          update: {
            args: Prisma.userUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$userPayload>
          }
          deleteMany: {
            args: Prisma.userDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.userUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.userUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$userPayload>
          }
          aggregate: {
            args: Prisma.UserAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateUser>
          }
          groupBy: {
            args: Prisma.userGroupByArgs<ExtArgs>,
            result: $Utils.Optional<UserGroupByOutputType>[]
          }
          count: {
            args: Prisma.userCountArgs<ExtArgs>,
            result: $Utils.Optional<UserCountAggregateOutputType> | number
          }
        }
      }
      users: {
        payload: Prisma.$usersPayload<ExtArgs>
        fields: Prisma.usersFieldRefs
        operations: {
          findUnique: {
            args: Prisma.usersFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$usersPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.usersFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          findFirst: {
            args: Prisma.usersFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$usersPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.usersFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          findMany: {
            args: Prisma.usersFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$usersPayload>[]
          }
          create: {
            args: Prisma.usersCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          createMany: {
            args: Prisma.usersCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          delete: {
            args: Prisma.usersDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          update: {
            args: Prisma.usersUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          deleteMany: {
            args: Prisma.usersDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.usersUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.usersUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          aggregate: {
            args: Prisma.UsersAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateUsers>
          }
          groupBy: {
            args: Prisma.usersGroupByArgs<ExtArgs>,
            result: $Utils.Optional<UsersGroupByOutputType>[]
          }
          count: {
            args: Prisma.usersCountArgs<ExtArgs>,
            result: $Utils.Optional<UsersCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<'define', Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */



  /**
   * Models
   */

  /**
   * Model areas_desempenio
   */

  export type AggregateAreas_desempenio = {
    _count: Areas_desempenioCountAggregateOutputType | null
    _avg: Areas_desempenioAvgAggregateOutputType | null
    _sum: Areas_desempenioSumAggregateOutputType | null
    _min: Areas_desempenioMinAggregateOutputType | null
    _max: Areas_desempenioMaxAggregateOutputType | null
  }

  export type Areas_desempenioAvgAggregateOutputType = {
    id: number | null
    area_padre_id: number | null
    perfil_id: number | null
    creado_por: number | null
  }

  export type Areas_desempenioSumAggregateOutputType = {
    id: number | null
    area_padre_id: number | null
    perfil_id: number | null
    creado_por: number | null
  }

  export type Areas_desempenioMinAggregateOutputType = {
    id: number | null
    nombre: string | null
    area_padre_id: number | null
    perfil_id: number | null
    creado_por: number | null
    created_at: Date | null
    update_at: Date | null
  }

  export type Areas_desempenioMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
    area_padre_id: number | null
    perfil_id: number | null
    creado_por: number | null
    created_at: Date | null
    update_at: Date | null
  }

  export type Areas_desempenioCountAggregateOutputType = {
    id: number
    nombre: number
    area_padre_id: number
    perfil_id: number
    creado_por: number
    created_at: number
    update_at: number
    _all: number
  }


  export type Areas_desempenioAvgAggregateInputType = {
    id?: true
    area_padre_id?: true
    perfil_id?: true
    creado_por?: true
  }

  export type Areas_desempenioSumAggregateInputType = {
    id?: true
    area_padre_id?: true
    perfil_id?: true
    creado_por?: true
  }

  export type Areas_desempenioMinAggregateInputType = {
    id?: true
    nombre?: true
    area_padre_id?: true
    perfil_id?: true
    creado_por?: true
    created_at?: true
    update_at?: true
  }

  export type Areas_desempenioMaxAggregateInputType = {
    id?: true
    nombre?: true
    area_padre_id?: true
    perfil_id?: true
    creado_por?: true
    created_at?: true
    update_at?: true
  }

  export type Areas_desempenioCountAggregateInputType = {
    id?: true
    nombre?: true
    area_padre_id?: true
    perfil_id?: true
    creado_por?: true
    created_at?: true
    update_at?: true
    _all?: true
  }

  export type Areas_desempenioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which areas_desempenio to aggregate.
     */
    where?: areas_desempenioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of areas_desempenios to fetch.
     */
    orderBy?: areas_desempenioOrderByWithRelationInput | areas_desempenioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: areas_desempenioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` areas_desempenios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` areas_desempenios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned areas_desempenios
    **/
    _count?: true | Areas_desempenioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Areas_desempenioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Areas_desempenioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Areas_desempenioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Areas_desempenioMaxAggregateInputType
  }

  export type GetAreas_desempenioAggregateType<T extends Areas_desempenioAggregateArgs> = {
        [P in keyof T & keyof AggregateAreas_desempenio]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAreas_desempenio[P]>
      : GetScalarType<T[P], AggregateAreas_desempenio[P]>
  }




  export type areas_desempenioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: areas_desempenioWhereInput
    orderBy?: areas_desempenioOrderByWithAggregationInput | areas_desempenioOrderByWithAggregationInput[]
    by: Areas_desempenioScalarFieldEnum[] | Areas_desempenioScalarFieldEnum
    having?: areas_desempenioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Areas_desempenioCountAggregateInputType | true
    _avg?: Areas_desempenioAvgAggregateInputType
    _sum?: Areas_desempenioSumAggregateInputType
    _min?: Areas_desempenioMinAggregateInputType
    _max?: Areas_desempenioMaxAggregateInputType
  }

  export type Areas_desempenioGroupByOutputType = {
    id: number
    nombre: string
    area_padre_id: number | null
    perfil_id: number | null
    creado_por: number | null
    created_at: Date | null
    update_at: Date | null
    _count: Areas_desempenioCountAggregateOutputType | null
    _avg: Areas_desempenioAvgAggregateOutputType | null
    _sum: Areas_desempenioSumAggregateOutputType | null
    _min: Areas_desempenioMinAggregateOutputType | null
    _max: Areas_desempenioMaxAggregateOutputType | null
  }

  type GetAreas_desempenioGroupByPayload<T extends areas_desempenioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Areas_desempenioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Areas_desempenioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Areas_desempenioGroupByOutputType[P]>
            : GetScalarType<T[P], Areas_desempenioGroupByOutputType[P]>
        }
      >
    >


  export type areas_desempenioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    area_padre_id?: boolean
    perfil_id?: boolean
    creado_por?: boolean
    created_at?: boolean
    update_at?: boolean
  }, ExtArgs["result"]["areas_desempenio"]>

  export type areas_desempenioSelectScalar = {
    id?: boolean
    nombre?: boolean
    area_padre_id?: boolean
    perfil_id?: boolean
    creado_por?: boolean
    created_at?: boolean
    update_at?: boolean
  }


  export type $areas_desempenioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "areas_desempenio"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string
      area_padre_id: number | null
      perfil_id: number | null
      creado_por: number | null
      created_at: Date | null
      update_at: Date | null
    }, ExtArgs["result"]["areas_desempenio"]>
    composites: {}
  }


  type areas_desempenioGetPayload<S extends boolean | null | undefined | areas_desempenioDefaultArgs> = $Result.GetResult<Prisma.$areas_desempenioPayload, S>

  type areas_desempenioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<areas_desempenioFindManyArgs, 'select' | 'include' | 'distinct' > & {
      select?: Areas_desempenioCountAggregateInputType | true
    }

  export interface areas_desempenioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['areas_desempenio'], meta: { name: 'areas_desempenio' } }
    /**
     * Find zero or one Areas_desempenio that matches the filter.
     * @param {areas_desempenioFindUniqueArgs} args - Arguments to find a Areas_desempenio
     * @example
     * // Get one Areas_desempenio
     * const areas_desempenio = await prisma.areas_desempenio.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends areas_desempenioFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, areas_desempenioFindUniqueArgs<ExtArgs>>
    ): Prisma__areas_desempenioClient<$Result.GetResult<Prisma.$areas_desempenioPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Areas_desempenio that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {areas_desempenioFindUniqueOrThrowArgs} args - Arguments to find a Areas_desempenio
     * @example
     * // Get one Areas_desempenio
     * const areas_desempenio = await prisma.areas_desempenio.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends areas_desempenioFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, areas_desempenioFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__areas_desempenioClient<$Result.GetResult<Prisma.$areas_desempenioPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Areas_desempenio that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {areas_desempenioFindFirstArgs} args - Arguments to find a Areas_desempenio
     * @example
     * // Get one Areas_desempenio
     * const areas_desempenio = await prisma.areas_desempenio.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends areas_desempenioFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, areas_desempenioFindFirstArgs<ExtArgs>>
    ): Prisma__areas_desempenioClient<$Result.GetResult<Prisma.$areas_desempenioPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Areas_desempenio that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {areas_desempenioFindFirstOrThrowArgs} args - Arguments to find a Areas_desempenio
     * @example
     * // Get one Areas_desempenio
     * const areas_desempenio = await prisma.areas_desempenio.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends areas_desempenioFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, areas_desempenioFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__areas_desempenioClient<$Result.GetResult<Prisma.$areas_desempenioPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Areas_desempenios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {areas_desempenioFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Areas_desempenios
     * const areas_desempenios = await prisma.areas_desempenio.findMany()
     * 
     * // Get first 10 Areas_desempenios
     * const areas_desempenios = await prisma.areas_desempenio.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const areas_desempenioWithIdOnly = await prisma.areas_desempenio.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends areas_desempenioFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, areas_desempenioFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$areas_desempenioPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Areas_desempenio.
     * @param {areas_desempenioCreateArgs} args - Arguments to create a Areas_desempenio.
     * @example
     * // Create one Areas_desempenio
     * const Areas_desempenio = await prisma.areas_desempenio.create({
     *   data: {
     *     // ... data to create a Areas_desempenio
     *   }
     * })
     * 
    **/
    create<T extends areas_desempenioCreateArgs<ExtArgs>>(
      args: SelectSubset<T, areas_desempenioCreateArgs<ExtArgs>>
    ): Prisma__areas_desempenioClient<$Result.GetResult<Prisma.$areas_desempenioPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Areas_desempenios.
     *     @param {areas_desempenioCreateManyArgs} args - Arguments to create many Areas_desempenios.
     *     @example
     *     // Create many Areas_desempenios
     *     const areas_desempenio = await prisma.areas_desempenio.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends areas_desempenioCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, areas_desempenioCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Areas_desempenio.
     * @param {areas_desempenioDeleteArgs} args - Arguments to delete one Areas_desempenio.
     * @example
     * // Delete one Areas_desempenio
     * const Areas_desempenio = await prisma.areas_desempenio.delete({
     *   where: {
     *     // ... filter to delete one Areas_desempenio
     *   }
     * })
     * 
    **/
    delete<T extends areas_desempenioDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, areas_desempenioDeleteArgs<ExtArgs>>
    ): Prisma__areas_desempenioClient<$Result.GetResult<Prisma.$areas_desempenioPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Areas_desempenio.
     * @param {areas_desempenioUpdateArgs} args - Arguments to update one Areas_desempenio.
     * @example
     * // Update one Areas_desempenio
     * const areas_desempenio = await prisma.areas_desempenio.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends areas_desempenioUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, areas_desempenioUpdateArgs<ExtArgs>>
    ): Prisma__areas_desempenioClient<$Result.GetResult<Prisma.$areas_desempenioPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Areas_desempenios.
     * @param {areas_desempenioDeleteManyArgs} args - Arguments to filter Areas_desempenios to delete.
     * @example
     * // Delete a few Areas_desempenios
     * const { count } = await prisma.areas_desempenio.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends areas_desempenioDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, areas_desempenioDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Areas_desempenios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {areas_desempenioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Areas_desempenios
     * const areas_desempenio = await prisma.areas_desempenio.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends areas_desempenioUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, areas_desempenioUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Areas_desempenio.
     * @param {areas_desempenioUpsertArgs} args - Arguments to update or create a Areas_desempenio.
     * @example
     * // Update or create a Areas_desempenio
     * const areas_desempenio = await prisma.areas_desempenio.upsert({
     *   create: {
     *     // ... data to create a Areas_desempenio
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Areas_desempenio we want to update
     *   }
     * })
    **/
    upsert<T extends areas_desempenioUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, areas_desempenioUpsertArgs<ExtArgs>>
    ): Prisma__areas_desempenioClient<$Result.GetResult<Prisma.$areas_desempenioPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Areas_desempenios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {areas_desempenioCountArgs} args - Arguments to filter Areas_desempenios to count.
     * @example
     * // Count the number of Areas_desempenios
     * const count = await prisma.areas_desempenio.count({
     *   where: {
     *     // ... the filter for the Areas_desempenios we want to count
     *   }
     * })
    **/
    count<T extends areas_desempenioCountArgs>(
      args?: Subset<T, areas_desempenioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Areas_desempenioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Areas_desempenio.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Areas_desempenioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Areas_desempenioAggregateArgs>(args: Subset<T, Areas_desempenioAggregateArgs>): Prisma.PrismaPromise<GetAreas_desempenioAggregateType<T>>

    /**
     * Group by Areas_desempenio.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {areas_desempenioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends areas_desempenioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: areas_desempenioGroupByArgs['orderBy'] }
        : { orderBy?: areas_desempenioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, areas_desempenioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAreas_desempenioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the areas_desempenio model
   */
  readonly fields: areas_desempenioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for areas_desempenio.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__areas_desempenioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';


    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the areas_desempenio model
   */ 
  interface areas_desempenioFieldRefs {
    readonly id: FieldRef<"areas_desempenio", 'Int'>
    readonly nombre: FieldRef<"areas_desempenio", 'String'>
    readonly area_padre_id: FieldRef<"areas_desempenio", 'Int'>
    readonly perfil_id: FieldRef<"areas_desempenio", 'Int'>
    readonly creado_por: FieldRef<"areas_desempenio", 'Int'>
    readonly created_at: FieldRef<"areas_desempenio", 'DateTime'>
    readonly update_at: FieldRef<"areas_desempenio", 'DateTime'>
  }
    

  // Custom InputTypes

  /**
   * areas_desempenio findUnique
   */
  export type areas_desempenioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the areas_desempenio
     */
    select?: areas_desempenioSelect<ExtArgs> | null
    /**
     * Filter, which areas_desempenio to fetch.
     */
    where: areas_desempenioWhereUniqueInput
  }


  /**
   * areas_desempenio findUniqueOrThrow
   */
  export type areas_desempenioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the areas_desempenio
     */
    select?: areas_desempenioSelect<ExtArgs> | null
    /**
     * Filter, which areas_desempenio to fetch.
     */
    where: areas_desempenioWhereUniqueInput
  }


  /**
   * areas_desempenio findFirst
   */
  export type areas_desempenioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the areas_desempenio
     */
    select?: areas_desempenioSelect<ExtArgs> | null
    /**
     * Filter, which areas_desempenio to fetch.
     */
    where?: areas_desempenioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of areas_desempenios to fetch.
     */
    orderBy?: areas_desempenioOrderByWithRelationInput | areas_desempenioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for areas_desempenios.
     */
    cursor?: areas_desempenioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` areas_desempenios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` areas_desempenios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of areas_desempenios.
     */
    distinct?: Areas_desempenioScalarFieldEnum | Areas_desempenioScalarFieldEnum[]
  }


  /**
   * areas_desempenio findFirstOrThrow
   */
  export type areas_desempenioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the areas_desempenio
     */
    select?: areas_desempenioSelect<ExtArgs> | null
    /**
     * Filter, which areas_desempenio to fetch.
     */
    where?: areas_desempenioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of areas_desempenios to fetch.
     */
    orderBy?: areas_desempenioOrderByWithRelationInput | areas_desempenioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for areas_desempenios.
     */
    cursor?: areas_desempenioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` areas_desempenios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` areas_desempenios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of areas_desempenios.
     */
    distinct?: Areas_desempenioScalarFieldEnum | Areas_desempenioScalarFieldEnum[]
  }


  /**
   * areas_desempenio findMany
   */
  export type areas_desempenioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the areas_desempenio
     */
    select?: areas_desempenioSelect<ExtArgs> | null
    /**
     * Filter, which areas_desempenios to fetch.
     */
    where?: areas_desempenioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of areas_desempenios to fetch.
     */
    orderBy?: areas_desempenioOrderByWithRelationInput | areas_desempenioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing areas_desempenios.
     */
    cursor?: areas_desempenioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` areas_desempenios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` areas_desempenios.
     */
    skip?: number
    distinct?: Areas_desempenioScalarFieldEnum | Areas_desempenioScalarFieldEnum[]
  }


  /**
   * areas_desempenio create
   */
  export type areas_desempenioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the areas_desempenio
     */
    select?: areas_desempenioSelect<ExtArgs> | null
    /**
     * The data needed to create a areas_desempenio.
     */
    data: XOR<areas_desempenioCreateInput, areas_desempenioUncheckedCreateInput>
  }


  /**
   * areas_desempenio createMany
   */
  export type areas_desempenioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many areas_desempenios.
     */
    data: areas_desempenioCreateManyInput | areas_desempenioCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * areas_desempenio update
   */
  export type areas_desempenioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the areas_desempenio
     */
    select?: areas_desempenioSelect<ExtArgs> | null
    /**
     * The data needed to update a areas_desempenio.
     */
    data: XOR<areas_desempenioUpdateInput, areas_desempenioUncheckedUpdateInput>
    /**
     * Choose, which areas_desempenio to update.
     */
    where: areas_desempenioWhereUniqueInput
  }


  /**
   * areas_desempenio updateMany
   */
  export type areas_desempenioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update areas_desempenios.
     */
    data: XOR<areas_desempenioUpdateManyMutationInput, areas_desempenioUncheckedUpdateManyInput>
    /**
     * Filter which areas_desempenios to update
     */
    where?: areas_desempenioWhereInput
  }


  /**
   * areas_desempenio upsert
   */
  export type areas_desempenioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the areas_desempenio
     */
    select?: areas_desempenioSelect<ExtArgs> | null
    /**
     * The filter to search for the areas_desempenio to update in case it exists.
     */
    where: areas_desempenioWhereUniqueInput
    /**
     * In case the areas_desempenio found by the `where` argument doesn't exist, create a new areas_desempenio with this data.
     */
    create: XOR<areas_desempenioCreateInput, areas_desempenioUncheckedCreateInput>
    /**
     * In case the areas_desempenio was found with the provided `where` argument, update it with this data.
     */
    update: XOR<areas_desempenioUpdateInput, areas_desempenioUncheckedUpdateInput>
  }


  /**
   * areas_desempenio delete
   */
  export type areas_desempenioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the areas_desempenio
     */
    select?: areas_desempenioSelect<ExtArgs> | null
    /**
     * Filter which areas_desempenio to delete.
     */
    where: areas_desempenioWhereUniqueInput
  }


  /**
   * areas_desempenio deleteMany
   */
  export type areas_desempenioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which areas_desempenios to delete
     */
    where?: areas_desempenioWhereInput
  }


  /**
   * areas_desempenio without action
   */
  export type areas_desempenioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the areas_desempenio
     */
    select?: areas_desempenioSelect<ExtArgs> | null
  }



  /**
   * Model categoria_locaciones
   */

  export type AggregateCategoria_locaciones = {
    _count: Categoria_locacionesCountAggregateOutputType | null
    _avg: Categoria_locacionesAvgAggregateOutputType | null
    _sum: Categoria_locacionesSumAggregateOutputType | null
    _min: Categoria_locacionesMinAggregateOutputType | null
    _max: Categoria_locacionesMaxAggregateOutputType | null
  }

  export type Categoria_locacionesAvgAggregateOutputType = {
    id: number | null
    categoria_padre_id: number | null
    locacion_id: number | null
    creado_por: number | null
  }

  export type Categoria_locacionesSumAggregateOutputType = {
    id: number | null
    categoria_padre_id: number | null
    locacion_id: number | null
    creado_por: number | null
  }

  export type Categoria_locacionesMinAggregateOutputType = {
    id: number | null
    nombre: string | null
    categoria_padre_id: number | null
    locacion_id: number | null
    creado_por: number | null
    created_at: Date | null
    update_at: Date | null
  }

  export type Categoria_locacionesMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
    categoria_padre_id: number | null
    locacion_id: number | null
    creado_por: number | null
    created_at: Date | null
    update_at: Date | null
  }

  export type Categoria_locacionesCountAggregateOutputType = {
    id: number
    nombre: number
    categoria_padre_id: number
    locacion_id: number
    creado_por: number
    created_at: number
    update_at: number
    _all: number
  }


  export type Categoria_locacionesAvgAggregateInputType = {
    id?: true
    categoria_padre_id?: true
    locacion_id?: true
    creado_por?: true
  }

  export type Categoria_locacionesSumAggregateInputType = {
    id?: true
    categoria_padre_id?: true
    locacion_id?: true
    creado_por?: true
  }

  export type Categoria_locacionesMinAggregateInputType = {
    id?: true
    nombre?: true
    categoria_padre_id?: true
    locacion_id?: true
    creado_por?: true
    created_at?: true
    update_at?: true
  }

  export type Categoria_locacionesMaxAggregateInputType = {
    id?: true
    nombre?: true
    categoria_padre_id?: true
    locacion_id?: true
    creado_por?: true
    created_at?: true
    update_at?: true
  }

  export type Categoria_locacionesCountAggregateInputType = {
    id?: true
    nombre?: true
    categoria_padre_id?: true
    locacion_id?: true
    creado_por?: true
    created_at?: true
    update_at?: true
    _all?: true
  }

  export type Categoria_locacionesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which categoria_locaciones to aggregate.
     */
    where?: categoria_locacionesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of categoria_locaciones to fetch.
     */
    orderBy?: categoria_locacionesOrderByWithRelationInput | categoria_locacionesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: categoria_locacionesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` categoria_locaciones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` categoria_locaciones.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned categoria_locaciones
    **/
    _count?: true | Categoria_locacionesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Categoria_locacionesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Categoria_locacionesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Categoria_locacionesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Categoria_locacionesMaxAggregateInputType
  }

  export type GetCategoria_locacionesAggregateType<T extends Categoria_locacionesAggregateArgs> = {
        [P in keyof T & keyof AggregateCategoria_locaciones]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCategoria_locaciones[P]>
      : GetScalarType<T[P], AggregateCategoria_locaciones[P]>
  }




  export type categoria_locacionesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: categoria_locacionesWhereInput
    orderBy?: categoria_locacionesOrderByWithAggregationInput | categoria_locacionesOrderByWithAggregationInput[]
    by: Categoria_locacionesScalarFieldEnum[] | Categoria_locacionesScalarFieldEnum
    having?: categoria_locacionesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Categoria_locacionesCountAggregateInputType | true
    _avg?: Categoria_locacionesAvgAggregateInputType
    _sum?: Categoria_locacionesSumAggregateInputType
    _min?: Categoria_locacionesMinAggregateInputType
    _max?: Categoria_locacionesMaxAggregateInputType
  }

  export type Categoria_locacionesGroupByOutputType = {
    id: number
    nombre: string
    categoria_padre_id: number | null
    locacion_id: number | null
    creado_por: number | null
    created_at: Date | null
    update_at: Date | null
    _count: Categoria_locacionesCountAggregateOutputType | null
    _avg: Categoria_locacionesAvgAggregateOutputType | null
    _sum: Categoria_locacionesSumAggregateOutputType | null
    _min: Categoria_locacionesMinAggregateOutputType | null
    _max: Categoria_locacionesMaxAggregateOutputType | null
  }

  type GetCategoria_locacionesGroupByPayload<T extends categoria_locacionesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Categoria_locacionesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Categoria_locacionesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Categoria_locacionesGroupByOutputType[P]>
            : GetScalarType<T[P], Categoria_locacionesGroupByOutputType[P]>
        }
      >
    >


  export type categoria_locacionesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    categoria_padre_id?: boolean
    locacion_id?: boolean
    creado_por?: boolean
    created_at?: boolean
    update_at?: boolean
  }, ExtArgs["result"]["categoria_locaciones"]>

  export type categoria_locacionesSelectScalar = {
    id?: boolean
    nombre?: boolean
    categoria_padre_id?: boolean
    locacion_id?: boolean
    creado_por?: boolean
    created_at?: boolean
    update_at?: boolean
  }


  export type $categoria_locacionesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "categoria_locaciones"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string
      categoria_padre_id: number | null
      locacion_id: number | null
      creado_por: number | null
      created_at: Date | null
      update_at: Date | null
    }, ExtArgs["result"]["categoria_locaciones"]>
    composites: {}
  }


  type categoria_locacionesGetPayload<S extends boolean | null | undefined | categoria_locacionesDefaultArgs> = $Result.GetResult<Prisma.$categoria_locacionesPayload, S>

  type categoria_locacionesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<categoria_locacionesFindManyArgs, 'select' | 'include' | 'distinct' > & {
      select?: Categoria_locacionesCountAggregateInputType | true
    }

  export interface categoria_locacionesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['categoria_locaciones'], meta: { name: 'categoria_locaciones' } }
    /**
     * Find zero or one Categoria_locaciones that matches the filter.
     * @param {categoria_locacionesFindUniqueArgs} args - Arguments to find a Categoria_locaciones
     * @example
     * // Get one Categoria_locaciones
     * const categoria_locaciones = await prisma.categoria_locaciones.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends categoria_locacionesFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, categoria_locacionesFindUniqueArgs<ExtArgs>>
    ): Prisma__categoria_locacionesClient<$Result.GetResult<Prisma.$categoria_locacionesPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Categoria_locaciones that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {categoria_locacionesFindUniqueOrThrowArgs} args - Arguments to find a Categoria_locaciones
     * @example
     * // Get one Categoria_locaciones
     * const categoria_locaciones = await prisma.categoria_locaciones.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends categoria_locacionesFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, categoria_locacionesFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__categoria_locacionesClient<$Result.GetResult<Prisma.$categoria_locacionesPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Categoria_locaciones that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {categoria_locacionesFindFirstArgs} args - Arguments to find a Categoria_locaciones
     * @example
     * // Get one Categoria_locaciones
     * const categoria_locaciones = await prisma.categoria_locaciones.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends categoria_locacionesFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, categoria_locacionesFindFirstArgs<ExtArgs>>
    ): Prisma__categoria_locacionesClient<$Result.GetResult<Prisma.$categoria_locacionesPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Categoria_locaciones that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {categoria_locacionesFindFirstOrThrowArgs} args - Arguments to find a Categoria_locaciones
     * @example
     * // Get one Categoria_locaciones
     * const categoria_locaciones = await prisma.categoria_locaciones.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends categoria_locacionesFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, categoria_locacionesFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__categoria_locacionesClient<$Result.GetResult<Prisma.$categoria_locacionesPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Categoria_locaciones that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {categoria_locacionesFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Categoria_locaciones
     * const categoria_locaciones = await prisma.categoria_locaciones.findMany()
     * 
     * // Get first 10 Categoria_locaciones
     * const categoria_locaciones = await prisma.categoria_locaciones.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const categoria_locacionesWithIdOnly = await prisma.categoria_locaciones.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends categoria_locacionesFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, categoria_locacionesFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$categoria_locacionesPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Categoria_locaciones.
     * @param {categoria_locacionesCreateArgs} args - Arguments to create a Categoria_locaciones.
     * @example
     * // Create one Categoria_locaciones
     * const Categoria_locaciones = await prisma.categoria_locaciones.create({
     *   data: {
     *     // ... data to create a Categoria_locaciones
     *   }
     * })
     * 
    **/
    create<T extends categoria_locacionesCreateArgs<ExtArgs>>(
      args: SelectSubset<T, categoria_locacionesCreateArgs<ExtArgs>>
    ): Prisma__categoria_locacionesClient<$Result.GetResult<Prisma.$categoria_locacionesPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Categoria_locaciones.
     *     @param {categoria_locacionesCreateManyArgs} args - Arguments to create many Categoria_locaciones.
     *     @example
     *     // Create many Categoria_locaciones
     *     const categoria_locaciones = await prisma.categoria_locaciones.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends categoria_locacionesCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, categoria_locacionesCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Categoria_locaciones.
     * @param {categoria_locacionesDeleteArgs} args - Arguments to delete one Categoria_locaciones.
     * @example
     * // Delete one Categoria_locaciones
     * const Categoria_locaciones = await prisma.categoria_locaciones.delete({
     *   where: {
     *     // ... filter to delete one Categoria_locaciones
     *   }
     * })
     * 
    **/
    delete<T extends categoria_locacionesDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, categoria_locacionesDeleteArgs<ExtArgs>>
    ): Prisma__categoria_locacionesClient<$Result.GetResult<Prisma.$categoria_locacionesPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Categoria_locaciones.
     * @param {categoria_locacionesUpdateArgs} args - Arguments to update one Categoria_locaciones.
     * @example
     * // Update one Categoria_locaciones
     * const categoria_locaciones = await prisma.categoria_locaciones.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends categoria_locacionesUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, categoria_locacionesUpdateArgs<ExtArgs>>
    ): Prisma__categoria_locacionesClient<$Result.GetResult<Prisma.$categoria_locacionesPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Categoria_locaciones.
     * @param {categoria_locacionesDeleteManyArgs} args - Arguments to filter Categoria_locaciones to delete.
     * @example
     * // Delete a few Categoria_locaciones
     * const { count } = await prisma.categoria_locaciones.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends categoria_locacionesDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, categoria_locacionesDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Categoria_locaciones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {categoria_locacionesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Categoria_locaciones
     * const categoria_locaciones = await prisma.categoria_locaciones.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends categoria_locacionesUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, categoria_locacionesUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Categoria_locaciones.
     * @param {categoria_locacionesUpsertArgs} args - Arguments to update or create a Categoria_locaciones.
     * @example
     * // Update or create a Categoria_locaciones
     * const categoria_locaciones = await prisma.categoria_locaciones.upsert({
     *   create: {
     *     // ... data to create a Categoria_locaciones
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Categoria_locaciones we want to update
     *   }
     * })
    **/
    upsert<T extends categoria_locacionesUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, categoria_locacionesUpsertArgs<ExtArgs>>
    ): Prisma__categoria_locacionesClient<$Result.GetResult<Prisma.$categoria_locacionesPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Categoria_locaciones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {categoria_locacionesCountArgs} args - Arguments to filter Categoria_locaciones to count.
     * @example
     * // Count the number of Categoria_locaciones
     * const count = await prisma.categoria_locaciones.count({
     *   where: {
     *     // ... the filter for the Categoria_locaciones we want to count
     *   }
     * })
    **/
    count<T extends categoria_locacionesCountArgs>(
      args?: Subset<T, categoria_locacionesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Categoria_locacionesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Categoria_locaciones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Categoria_locacionesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Categoria_locacionesAggregateArgs>(args: Subset<T, Categoria_locacionesAggregateArgs>): Prisma.PrismaPromise<GetCategoria_locacionesAggregateType<T>>

    /**
     * Group by Categoria_locaciones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {categoria_locacionesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends categoria_locacionesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: categoria_locacionesGroupByArgs['orderBy'] }
        : { orderBy?: categoria_locacionesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, categoria_locacionesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCategoria_locacionesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the categoria_locaciones model
   */
  readonly fields: categoria_locacionesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for categoria_locaciones.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__categoria_locacionesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';


    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the categoria_locaciones model
   */ 
  interface categoria_locacionesFieldRefs {
    readonly id: FieldRef<"categoria_locaciones", 'Int'>
    readonly nombre: FieldRef<"categoria_locaciones", 'String'>
    readonly categoria_padre_id: FieldRef<"categoria_locaciones", 'Int'>
    readonly locacion_id: FieldRef<"categoria_locaciones", 'Int'>
    readonly creado_por: FieldRef<"categoria_locaciones", 'Int'>
    readonly created_at: FieldRef<"categoria_locaciones", 'DateTime'>
    readonly update_at: FieldRef<"categoria_locaciones", 'DateTime'>
  }
    

  // Custom InputTypes

  /**
   * categoria_locaciones findUnique
   */
  export type categoria_locacionesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categoria_locaciones
     */
    select?: categoria_locacionesSelect<ExtArgs> | null
    /**
     * Filter, which categoria_locaciones to fetch.
     */
    where: categoria_locacionesWhereUniqueInput
  }


  /**
   * categoria_locaciones findUniqueOrThrow
   */
  export type categoria_locacionesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categoria_locaciones
     */
    select?: categoria_locacionesSelect<ExtArgs> | null
    /**
     * Filter, which categoria_locaciones to fetch.
     */
    where: categoria_locacionesWhereUniqueInput
  }


  /**
   * categoria_locaciones findFirst
   */
  export type categoria_locacionesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categoria_locaciones
     */
    select?: categoria_locacionesSelect<ExtArgs> | null
    /**
     * Filter, which categoria_locaciones to fetch.
     */
    where?: categoria_locacionesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of categoria_locaciones to fetch.
     */
    orderBy?: categoria_locacionesOrderByWithRelationInput | categoria_locacionesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for categoria_locaciones.
     */
    cursor?: categoria_locacionesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` categoria_locaciones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` categoria_locaciones.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of categoria_locaciones.
     */
    distinct?: Categoria_locacionesScalarFieldEnum | Categoria_locacionesScalarFieldEnum[]
  }


  /**
   * categoria_locaciones findFirstOrThrow
   */
  export type categoria_locacionesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categoria_locaciones
     */
    select?: categoria_locacionesSelect<ExtArgs> | null
    /**
     * Filter, which categoria_locaciones to fetch.
     */
    where?: categoria_locacionesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of categoria_locaciones to fetch.
     */
    orderBy?: categoria_locacionesOrderByWithRelationInput | categoria_locacionesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for categoria_locaciones.
     */
    cursor?: categoria_locacionesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` categoria_locaciones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` categoria_locaciones.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of categoria_locaciones.
     */
    distinct?: Categoria_locacionesScalarFieldEnum | Categoria_locacionesScalarFieldEnum[]
  }


  /**
   * categoria_locaciones findMany
   */
  export type categoria_locacionesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categoria_locaciones
     */
    select?: categoria_locacionesSelect<ExtArgs> | null
    /**
     * Filter, which categoria_locaciones to fetch.
     */
    where?: categoria_locacionesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of categoria_locaciones to fetch.
     */
    orderBy?: categoria_locacionesOrderByWithRelationInput | categoria_locacionesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing categoria_locaciones.
     */
    cursor?: categoria_locacionesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` categoria_locaciones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` categoria_locaciones.
     */
    skip?: number
    distinct?: Categoria_locacionesScalarFieldEnum | Categoria_locacionesScalarFieldEnum[]
  }


  /**
   * categoria_locaciones create
   */
  export type categoria_locacionesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categoria_locaciones
     */
    select?: categoria_locacionesSelect<ExtArgs> | null
    /**
     * The data needed to create a categoria_locaciones.
     */
    data: XOR<categoria_locacionesCreateInput, categoria_locacionesUncheckedCreateInput>
  }


  /**
   * categoria_locaciones createMany
   */
  export type categoria_locacionesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many categoria_locaciones.
     */
    data: categoria_locacionesCreateManyInput | categoria_locacionesCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * categoria_locaciones update
   */
  export type categoria_locacionesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categoria_locaciones
     */
    select?: categoria_locacionesSelect<ExtArgs> | null
    /**
     * The data needed to update a categoria_locaciones.
     */
    data: XOR<categoria_locacionesUpdateInput, categoria_locacionesUncheckedUpdateInput>
    /**
     * Choose, which categoria_locaciones to update.
     */
    where: categoria_locacionesWhereUniqueInput
  }


  /**
   * categoria_locaciones updateMany
   */
  export type categoria_locacionesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update categoria_locaciones.
     */
    data: XOR<categoria_locacionesUpdateManyMutationInput, categoria_locacionesUncheckedUpdateManyInput>
    /**
     * Filter which categoria_locaciones to update
     */
    where?: categoria_locacionesWhereInput
  }


  /**
   * categoria_locaciones upsert
   */
  export type categoria_locacionesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categoria_locaciones
     */
    select?: categoria_locacionesSelect<ExtArgs> | null
    /**
     * The filter to search for the categoria_locaciones to update in case it exists.
     */
    where: categoria_locacionesWhereUniqueInput
    /**
     * In case the categoria_locaciones found by the `where` argument doesn't exist, create a new categoria_locaciones with this data.
     */
    create: XOR<categoria_locacionesCreateInput, categoria_locacionesUncheckedCreateInput>
    /**
     * In case the categoria_locaciones was found with the provided `where` argument, update it with this data.
     */
    update: XOR<categoria_locacionesUpdateInput, categoria_locacionesUncheckedUpdateInput>
  }


  /**
   * categoria_locaciones delete
   */
  export type categoria_locacionesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categoria_locaciones
     */
    select?: categoria_locacionesSelect<ExtArgs> | null
    /**
     * Filter which categoria_locaciones to delete.
     */
    where: categoria_locacionesWhereUniqueInput
  }


  /**
   * categoria_locaciones deleteMany
   */
  export type categoria_locacionesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which categoria_locaciones to delete
     */
    where?: categoria_locacionesWhereInput
  }


  /**
   * categoria_locaciones without action
   */
  export type categoria_locacionesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the categoria_locaciones
     */
    select?: categoria_locacionesSelect<ExtArgs> | null
  }



  /**
   * Model imagenes_locaciones
   */

  export type AggregateImagenes_locaciones = {
    _count: Imagenes_locacionesCountAggregateOutputType | null
    _avg: Imagenes_locacionesAvgAggregateOutputType | null
    _sum: Imagenes_locacionesSumAggregateOutputType | null
    _min: Imagenes_locacionesMinAggregateOutputType | null
    _max: Imagenes_locacionesMaxAggregateOutputType | null
  }

  export type Imagenes_locacionesAvgAggregateOutputType = {
    id: number | null
    locacion_id: number | null
    creado_por: number | null
  }

  export type Imagenes_locacionesSumAggregateOutputType = {
    id: number | null
    locacion_id: number | null
    creado_por: number | null
  }

  export type Imagenes_locacionesMinAggregateOutputType = {
    id: number | null
    nombre: string | null
    descripcion: string | null
    link: string | null
    locacion_id: number | null
    creado_por: number | null
    created_at: Date | null
    update_at: Date | null
  }

  export type Imagenes_locacionesMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
    descripcion: string | null
    link: string | null
    locacion_id: number | null
    creado_por: number | null
    created_at: Date | null
    update_at: Date | null
  }

  export type Imagenes_locacionesCountAggregateOutputType = {
    id: number
    nombre: number
    descripcion: number
    link: number
    locacion_id: number
    creado_por: number
    created_at: number
    update_at: number
    _all: number
  }


  export type Imagenes_locacionesAvgAggregateInputType = {
    id?: true
    locacion_id?: true
    creado_por?: true
  }

  export type Imagenes_locacionesSumAggregateInputType = {
    id?: true
    locacion_id?: true
    creado_por?: true
  }

  export type Imagenes_locacionesMinAggregateInputType = {
    id?: true
    nombre?: true
    descripcion?: true
    link?: true
    locacion_id?: true
    creado_por?: true
    created_at?: true
    update_at?: true
  }

  export type Imagenes_locacionesMaxAggregateInputType = {
    id?: true
    nombre?: true
    descripcion?: true
    link?: true
    locacion_id?: true
    creado_por?: true
    created_at?: true
    update_at?: true
  }

  export type Imagenes_locacionesCountAggregateInputType = {
    id?: true
    nombre?: true
    descripcion?: true
    link?: true
    locacion_id?: true
    creado_por?: true
    created_at?: true
    update_at?: true
    _all?: true
  }

  export type Imagenes_locacionesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which imagenes_locaciones to aggregate.
     */
    where?: imagenes_locacionesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of imagenes_locaciones to fetch.
     */
    orderBy?: imagenes_locacionesOrderByWithRelationInput | imagenes_locacionesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: imagenes_locacionesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` imagenes_locaciones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` imagenes_locaciones.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned imagenes_locaciones
    **/
    _count?: true | Imagenes_locacionesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Imagenes_locacionesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Imagenes_locacionesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Imagenes_locacionesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Imagenes_locacionesMaxAggregateInputType
  }

  export type GetImagenes_locacionesAggregateType<T extends Imagenes_locacionesAggregateArgs> = {
        [P in keyof T & keyof AggregateImagenes_locaciones]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateImagenes_locaciones[P]>
      : GetScalarType<T[P], AggregateImagenes_locaciones[P]>
  }




  export type imagenes_locacionesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: imagenes_locacionesWhereInput
    orderBy?: imagenes_locacionesOrderByWithAggregationInput | imagenes_locacionesOrderByWithAggregationInput[]
    by: Imagenes_locacionesScalarFieldEnum[] | Imagenes_locacionesScalarFieldEnum
    having?: imagenes_locacionesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Imagenes_locacionesCountAggregateInputType | true
    _avg?: Imagenes_locacionesAvgAggregateInputType
    _sum?: Imagenes_locacionesSumAggregateInputType
    _min?: Imagenes_locacionesMinAggregateInputType
    _max?: Imagenes_locacionesMaxAggregateInputType
  }

  export type Imagenes_locacionesGroupByOutputType = {
    id: number
    nombre: string | null
    descripcion: string | null
    link: string | null
    locacion_id: number | null
    creado_por: number | null
    created_at: Date | null
    update_at: Date | null
    _count: Imagenes_locacionesCountAggregateOutputType | null
    _avg: Imagenes_locacionesAvgAggregateOutputType | null
    _sum: Imagenes_locacionesSumAggregateOutputType | null
    _min: Imagenes_locacionesMinAggregateOutputType | null
    _max: Imagenes_locacionesMaxAggregateOutputType | null
  }

  type GetImagenes_locacionesGroupByPayload<T extends imagenes_locacionesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Imagenes_locacionesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Imagenes_locacionesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Imagenes_locacionesGroupByOutputType[P]>
            : GetScalarType<T[P], Imagenes_locacionesGroupByOutputType[P]>
        }
      >
    >


  export type imagenes_locacionesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    descripcion?: boolean
    link?: boolean
    locacion_id?: boolean
    creado_por?: boolean
    created_at?: boolean
    update_at?: boolean
  }, ExtArgs["result"]["imagenes_locaciones"]>

  export type imagenes_locacionesSelectScalar = {
    id?: boolean
    nombre?: boolean
    descripcion?: boolean
    link?: boolean
    locacion_id?: boolean
    creado_por?: boolean
    created_at?: boolean
    update_at?: boolean
  }


  export type $imagenes_locacionesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "imagenes_locaciones"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string | null
      descripcion: string | null
      link: string | null
      locacion_id: number | null
      creado_por: number | null
      created_at: Date | null
      update_at: Date | null
    }, ExtArgs["result"]["imagenes_locaciones"]>
    composites: {}
  }


  type imagenes_locacionesGetPayload<S extends boolean | null | undefined | imagenes_locacionesDefaultArgs> = $Result.GetResult<Prisma.$imagenes_locacionesPayload, S>

  type imagenes_locacionesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<imagenes_locacionesFindManyArgs, 'select' | 'include' | 'distinct' > & {
      select?: Imagenes_locacionesCountAggregateInputType | true
    }

  export interface imagenes_locacionesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['imagenes_locaciones'], meta: { name: 'imagenes_locaciones' } }
    /**
     * Find zero or one Imagenes_locaciones that matches the filter.
     * @param {imagenes_locacionesFindUniqueArgs} args - Arguments to find a Imagenes_locaciones
     * @example
     * // Get one Imagenes_locaciones
     * const imagenes_locaciones = await prisma.imagenes_locaciones.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends imagenes_locacionesFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, imagenes_locacionesFindUniqueArgs<ExtArgs>>
    ): Prisma__imagenes_locacionesClient<$Result.GetResult<Prisma.$imagenes_locacionesPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Imagenes_locaciones that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {imagenes_locacionesFindUniqueOrThrowArgs} args - Arguments to find a Imagenes_locaciones
     * @example
     * // Get one Imagenes_locaciones
     * const imagenes_locaciones = await prisma.imagenes_locaciones.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends imagenes_locacionesFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, imagenes_locacionesFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__imagenes_locacionesClient<$Result.GetResult<Prisma.$imagenes_locacionesPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Imagenes_locaciones that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {imagenes_locacionesFindFirstArgs} args - Arguments to find a Imagenes_locaciones
     * @example
     * // Get one Imagenes_locaciones
     * const imagenes_locaciones = await prisma.imagenes_locaciones.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends imagenes_locacionesFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, imagenes_locacionesFindFirstArgs<ExtArgs>>
    ): Prisma__imagenes_locacionesClient<$Result.GetResult<Prisma.$imagenes_locacionesPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Imagenes_locaciones that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {imagenes_locacionesFindFirstOrThrowArgs} args - Arguments to find a Imagenes_locaciones
     * @example
     * // Get one Imagenes_locaciones
     * const imagenes_locaciones = await prisma.imagenes_locaciones.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends imagenes_locacionesFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, imagenes_locacionesFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__imagenes_locacionesClient<$Result.GetResult<Prisma.$imagenes_locacionesPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Imagenes_locaciones that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {imagenes_locacionesFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Imagenes_locaciones
     * const imagenes_locaciones = await prisma.imagenes_locaciones.findMany()
     * 
     * // Get first 10 Imagenes_locaciones
     * const imagenes_locaciones = await prisma.imagenes_locaciones.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const imagenes_locacionesWithIdOnly = await prisma.imagenes_locaciones.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends imagenes_locacionesFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, imagenes_locacionesFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$imagenes_locacionesPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Imagenes_locaciones.
     * @param {imagenes_locacionesCreateArgs} args - Arguments to create a Imagenes_locaciones.
     * @example
     * // Create one Imagenes_locaciones
     * const Imagenes_locaciones = await prisma.imagenes_locaciones.create({
     *   data: {
     *     // ... data to create a Imagenes_locaciones
     *   }
     * })
     * 
    **/
    create<T extends imagenes_locacionesCreateArgs<ExtArgs>>(
      args: SelectSubset<T, imagenes_locacionesCreateArgs<ExtArgs>>
    ): Prisma__imagenes_locacionesClient<$Result.GetResult<Prisma.$imagenes_locacionesPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Imagenes_locaciones.
     *     @param {imagenes_locacionesCreateManyArgs} args - Arguments to create many Imagenes_locaciones.
     *     @example
     *     // Create many Imagenes_locaciones
     *     const imagenes_locaciones = await prisma.imagenes_locaciones.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends imagenes_locacionesCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, imagenes_locacionesCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Imagenes_locaciones.
     * @param {imagenes_locacionesDeleteArgs} args - Arguments to delete one Imagenes_locaciones.
     * @example
     * // Delete one Imagenes_locaciones
     * const Imagenes_locaciones = await prisma.imagenes_locaciones.delete({
     *   where: {
     *     // ... filter to delete one Imagenes_locaciones
     *   }
     * })
     * 
    **/
    delete<T extends imagenes_locacionesDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, imagenes_locacionesDeleteArgs<ExtArgs>>
    ): Prisma__imagenes_locacionesClient<$Result.GetResult<Prisma.$imagenes_locacionesPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Imagenes_locaciones.
     * @param {imagenes_locacionesUpdateArgs} args - Arguments to update one Imagenes_locaciones.
     * @example
     * // Update one Imagenes_locaciones
     * const imagenes_locaciones = await prisma.imagenes_locaciones.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends imagenes_locacionesUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, imagenes_locacionesUpdateArgs<ExtArgs>>
    ): Prisma__imagenes_locacionesClient<$Result.GetResult<Prisma.$imagenes_locacionesPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Imagenes_locaciones.
     * @param {imagenes_locacionesDeleteManyArgs} args - Arguments to filter Imagenes_locaciones to delete.
     * @example
     * // Delete a few Imagenes_locaciones
     * const { count } = await prisma.imagenes_locaciones.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends imagenes_locacionesDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, imagenes_locacionesDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Imagenes_locaciones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {imagenes_locacionesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Imagenes_locaciones
     * const imagenes_locaciones = await prisma.imagenes_locaciones.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends imagenes_locacionesUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, imagenes_locacionesUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Imagenes_locaciones.
     * @param {imagenes_locacionesUpsertArgs} args - Arguments to update or create a Imagenes_locaciones.
     * @example
     * // Update or create a Imagenes_locaciones
     * const imagenes_locaciones = await prisma.imagenes_locaciones.upsert({
     *   create: {
     *     // ... data to create a Imagenes_locaciones
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Imagenes_locaciones we want to update
     *   }
     * })
    **/
    upsert<T extends imagenes_locacionesUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, imagenes_locacionesUpsertArgs<ExtArgs>>
    ): Prisma__imagenes_locacionesClient<$Result.GetResult<Prisma.$imagenes_locacionesPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Imagenes_locaciones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {imagenes_locacionesCountArgs} args - Arguments to filter Imagenes_locaciones to count.
     * @example
     * // Count the number of Imagenes_locaciones
     * const count = await prisma.imagenes_locaciones.count({
     *   where: {
     *     // ... the filter for the Imagenes_locaciones we want to count
     *   }
     * })
    **/
    count<T extends imagenes_locacionesCountArgs>(
      args?: Subset<T, imagenes_locacionesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Imagenes_locacionesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Imagenes_locaciones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Imagenes_locacionesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Imagenes_locacionesAggregateArgs>(args: Subset<T, Imagenes_locacionesAggregateArgs>): Prisma.PrismaPromise<GetImagenes_locacionesAggregateType<T>>

    /**
     * Group by Imagenes_locaciones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {imagenes_locacionesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends imagenes_locacionesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: imagenes_locacionesGroupByArgs['orderBy'] }
        : { orderBy?: imagenes_locacionesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, imagenes_locacionesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetImagenes_locacionesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the imagenes_locaciones model
   */
  readonly fields: imagenes_locacionesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for imagenes_locaciones.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__imagenes_locacionesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';


    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the imagenes_locaciones model
   */ 
  interface imagenes_locacionesFieldRefs {
    readonly id: FieldRef<"imagenes_locaciones", 'Int'>
    readonly nombre: FieldRef<"imagenes_locaciones", 'String'>
    readonly descripcion: FieldRef<"imagenes_locaciones", 'String'>
    readonly link: FieldRef<"imagenes_locaciones", 'String'>
    readonly locacion_id: FieldRef<"imagenes_locaciones", 'Int'>
    readonly creado_por: FieldRef<"imagenes_locaciones", 'Int'>
    readonly created_at: FieldRef<"imagenes_locaciones", 'DateTime'>
    readonly update_at: FieldRef<"imagenes_locaciones", 'DateTime'>
  }
    

  // Custom InputTypes

  /**
   * imagenes_locaciones findUnique
   */
  export type imagenes_locacionesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the imagenes_locaciones
     */
    select?: imagenes_locacionesSelect<ExtArgs> | null
    /**
     * Filter, which imagenes_locaciones to fetch.
     */
    where: imagenes_locacionesWhereUniqueInput
  }


  /**
   * imagenes_locaciones findUniqueOrThrow
   */
  export type imagenes_locacionesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the imagenes_locaciones
     */
    select?: imagenes_locacionesSelect<ExtArgs> | null
    /**
     * Filter, which imagenes_locaciones to fetch.
     */
    where: imagenes_locacionesWhereUniqueInput
  }


  /**
   * imagenes_locaciones findFirst
   */
  export type imagenes_locacionesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the imagenes_locaciones
     */
    select?: imagenes_locacionesSelect<ExtArgs> | null
    /**
     * Filter, which imagenes_locaciones to fetch.
     */
    where?: imagenes_locacionesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of imagenes_locaciones to fetch.
     */
    orderBy?: imagenes_locacionesOrderByWithRelationInput | imagenes_locacionesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for imagenes_locaciones.
     */
    cursor?: imagenes_locacionesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` imagenes_locaciones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` imagenes_locaciones.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of imagenes_locaciones.
     */
    distinct?: Imagenes_locacionesScalarFieldEnum | Imagenes_locacionesScalarFieldEnum[]
  }


  /**
   * imagenes_locaciones findFirstOrThrow
   */
  export type imagenes_locacionesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the imagenes_locaciones
     */
    select?: imagenes_locacionesSelect<ExtArgs> | null
    /**
     * Filter, which imagenes_locaciones to fetch.
     */
    where?: imagenes_locacionesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of imagenes_locaciones to fetch.
     */
    orderBy?: imagenes_locacionesOrderByWithRelationInput | imagenes_locacionesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for imagenes_locaciones.
     */
    cursor?: imagenes_locacionesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` imagenes_locaciones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` imagenes_locaciones.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of imagenes_locaciones.
     */
    distinct?: Imagenes_locacionesScalarFieldEnum | Imagenes_locacionesScalarFieldEnum[]
  }


  /**
   * imagenes_locaciones findMany
   */
  export type imagenes_locacionesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the imagenes_locaciones
     */
    select?: imagenes_locacionesSelect<ExtArgs> | null
    /**
     * Filter, which imagenes_locaciones to fetch.
     */
    where?: imagenes_locacionesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of imagenes_locaciones to fetch.
     */
    orderBy?: imagenes_locacionesOrderByWithRelationInput | imagenes_locacionesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing imagenes_locaciones.
     */
    cursor?: imagenes_locacionesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` imagenes_locaciones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` imagenes_locaciones.
     */
    skip?: number
    distinct?: Imagenes_locacionesScalarFieldEnum | Imagenes_locacionesScalarFieldEnum[]
  }


  /**
   * imagenes_locaciones create
   */
  export type imagenes_locacionesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the imagenes_locaciones
     */
    select?: imagenes_locacionesSelect<ExtArgs> | null
    /**
     * The data needed to create a imagenes_locaciones.
     */
    data?: XOR<imagenes_locacionesCreateInput, imagenes_locacionesUncheckedCreateInput>
  }


  /**
   * imagenes_locaciones createMany
   */
  export type imagenes_locacionesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many imagenes_locaciones.
     */
    data: imagenes_locacionesCreateManyInput | imagenes_locacionesCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * imagenes_locaciones update
   */
  export type imagenes_locacionesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the imagenes_locaciones
     */
    select?: imagenes_locacionesSelect<ExtArgs> | null
    /**
     * The data needed to update a imagenes_locaciones.
     */
    data: XOR<imagenes_locacionesUpdateInput, imagenes_locacionesUncheckedUpdateInput>
    /**
     * Choose, which imagenes_locaciones to update.
     */
    where: imagenes_locacionesWhereUniqueInput
  }


  /**
   * imagenes_locaciones updateMany
   */
  export type imagenes_locacionesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update imagenes_locaciones.
     */
    data: XOR<imagenes_locacionesUpdateManyMutationInput, imagenes_locacionesUncheckedUpdateManyInput>
    /**
     * Filter which imagenes_locaciones to update
     */
    where?: imagenes_locacionesWhereInput
  }


  /**
   * imagenes_locaciones upsert
   */
  export type imagenes_locacionesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the imagenes_locaciones
     */
    select?: imagenes_locacionesSelect<ExtArgs> | null
    /**
     * The filter to search for the imagenes_locaciones to update in case it exists.
     */
    where: imagenes_locacionesWhereUniqueInput
    /**
     * In case the imagenes_locaciones found by the `where` argument doesn't exist, create a new imagenes_locaciones with this data.
     */
    create: XOR<imagenes_locacionesCreateInput, imagenes_locacionesUncheckedCreateInput>
    /**
     * In case the imagenes_locaciones was found with the provided `where` argument, update it with this data.
     */
    update: XOR<imagenes_locacionesUpdateInput, imagenes_locacionesUncheckedUpdateInput>
  }


  /**
   * imagenes_locaciones delete
   */
  export type imagenes_locacionesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the imagenes_locaciones
     */
    select?: imagenes_locacionesSelect<ExtArgs> | null
    /**
     * Filter which imagenes_locaciones to delete.
     */
    where: imagenes_locacionesWhereUniqueInput
  }


  /**
   * imagenes_locaciones deleteMany
   */
  export type imagenes_locacionesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which imagenes_locaciones to delete
     */
    where?: imagenes_locacionesWhereInput
  }


  /**
   * imagenes_locaciones without action
   */
  export type imagenes_locacionesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the imagenes_locaciones
     */
    select?: imagenes_locacionesSelect<ExtArgs> | null
  }



  /**
   * Model imagenes_prestadores
   */

  export type AggregateImagenes_prestadores = {
    _count: Imagenes_prestadoresCountAggregateOutputType | null
    _avg: Imagenes_prestadoresAvgAggregateOutputType | null
    _sum: Imagenes_prestadoresSumAggregateOutputType | null
    _min: Imagenes_prestadoresMinAggregateOutputType | null
    _max: Imagenes_prestadoresMaxAggregateOutputType | null
  }

  export type Imagenes_prestadoresAvgAggregateOutputType = {
    id: number | null
    perfil_id: number | null
    creado_por: number | null
  }

  export type Imagenes_prestadoresSumAggregateOutputType = {
    id: number | null
    perfil_id: number | null
    creado_por: number | null
  }

  export type Imagenes_prestadoresMinAggregateOutputType = {
    id: number | null
    nombre: string | null
    descripcion: string | null
    link: string | null
    perfil_id: number | null
    creado_por: number | null
    created_at: Date | null
    update_at: Date | null
  }

  export type Imagenes_prestadoresMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
    descripcion: string | null
    link: string | null
    perfil_id: number | null
    creado_por: number | null
    created_at: Date | null
    update_at: Date | null
  }

  export type Imagenes_prestadoresCountAggregateOutputType = {
    id: number
    nombre: number
    descripcion: number
    link: number
    perfil_id: number
    creado_por: number
    created_at: number
    update_at: number
    _all: number
  }


  export type Imagenes_prestadoresAvgAggregateInputType = {
    id?: true
    perfil_id?: true
    creado_por?: true
  }

  export type Imagenes_prestadoresSumAggregateInputType = {
    id?: true
    perfil_id?: true
    creado_por?: true
  }

  export type Imagenes_prestadoresMinAggregateInputType = {
    id?: true
    nombre?: true
    descripcion?: true
    link?: true
    perfil_id?: true
    creado_por?: true
    created_at?: true
    update_at?: true
  }

  export type Imagenes_prestadoresMaxAggregateInputType = {
    id?: true
    nombre?: true
    descripcion?: true
    link?: true
    perfil_id?: true
    creado_por?: true
    created_at?: true
    update_at?: true
  }

  export type Imagenes_prestadoresCountAggregateInputType = {
    id?: true
    nombre?: true
    descripcion?: true
    link?: true
    perfil_id?: true
    creado_por?: true
    created_at?: true
    update_at?: true
    _all?: true
  }

  export type Imagenes_prestadoresAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which imagenes_prestadores to aggregate.
     */
    where?: imagenes_prestadoresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of imagenes_prestadores to fetch.
     */
    orderBy?: imagenes_prestadoresOrderByWithRelationInput | imagenes_prestadoresOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: imagenes_prestadoresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` imagenes_prestadores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` imagenes_prestadores.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned imagenes_prestadores
    **/
    _count?: true | Imagenes_prestadoresCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Imagenes_prestadoresAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Imagenes_prestadoresSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Imagenes_prestadoresMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Imagenes_prestadoresMaxAggregateInputType
  }

  export type GetImagenes_prestadoresAggregateType<T extends Imagenes_prestadoresAggregateArgs> = {
        [P in keyof T & keyof AggregateImagenes_prestadores]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateImagenes_prestadores[P]>
      : GetScalarType<T[P], AggregateImagenes_prestadores[P]>
  }




  export type imagenes_prestadoresGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: imagenes_prestadoresWhereInput
    orderBy?: imagenes_prestadoresOrderByWithAggregationInput | imagenes_prestadoresOrderByWithAggregationInput[]
    by: Imagenes_prestadoresScalarFieldEnum[] | Imagenes_prestadoresScalarFieldEnum
    having?: imagenes_prestadoresScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Imagenes_prestadoresCountAggregateInputType | true
    _avg?: Imagenes_prestadoresAvgAggregateInputType
    _sum?: Imagenes_prestadoresSumAggregateInputType
    _min?: Imagenes_prestadoresMinAggregateInputType
    _max?: Imagenes_prestadoresMaxAggregateInputType
  }

  export type Imagenes_prestadoresGroupByOutputType = {
    id: number
    nombre: string | null
    descripcion: string | null
    link: string | null
    perfil_id: number | null
    creado_por: number | null
    created_at: Date | null
    update_at: Date | null
    _count: Imagenes_prestadoresCountAggregateOutputType | null
    _avg: Imagenes_prestadoresAvgAggregateOutputType | null
    _sum: Imagenes_prestadoresSumAggregateOutputType | null
    _min: Imagenes_prestadoresMinAggregateOutputType | null
    _max: Imagenes_prestadoresMaxAggregateOutputType | null
  }

  type GetImagenes_prestadoresGroupByPayload<T extends imagenes_prestadoresGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Imagenes_prestadoresGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Imagenes_prestadoresGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Imagenes_prestadoresGroupByOutputType[P]>
            : GetScalarType<T[P], Imagenes_prestadoresGroupByOutputType[P]>
        }
      >
    >


  export type imagenes_prestadoresSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    descripcion?: boolean
    link?: boolean
    perfil_id?: boolean
    creado_por?: boolean
    created_at?: boolean
    update_at?: boolean
  }, ExtArgs["result"]["imagenes_prestadores"]>

  export type imagenes_prestadoresSelectScalar = {
    id?: boolean
    nombre?: boolean
    descripcion?: boolean
    link?: boolean
    perfil_id?: boolean
    creado_por?: boolean
    created_at?: boolean
    update_at?: boolean
  }


  export type $imagenes_prestadoresPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "imagenes_prestadores"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string | null
      descripcion: string | null
      link: string | null
      perfil_id: number | null
      creado_por: number | null
      created_at: Date | null
      update_at: Date | null
    }, ExtArgs["result"]["imagenes_prestadores"]>
    composites: {}
  }


  type imagenes_prestadoresGetPayload<S extends boolean | null | undefined | imagenes_prestadoresDefaultArgs> = $Result.GetResult<Prisma.$imagenes_prestadoresPayload, S>

  type imagenes_prestadoresCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<imagenes_prestadoresFindManyArgs, 'select' | 'include' | 'distinct' > & {
      select?: Imagenes_prestadoresCountAggregateInputType | true
    }

  export interface imagenes_prestadoresDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['imagenes_prestadores'], meta: { name: 'imagenes_prestadores' } }
    /**
     * Find zero or one Imagenes_prestadores that matches the filter.
     * @param {imagenes_prestadoresFindUniqueArgs} args - Arguments to find a Imagenes_prestadores
     * @example
     * // Get one Imagenes_prestadores
     * const imagenes_prestadores = await prisma.imagenes_prestadores.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends imagenes_prestadoresFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, imagenes_prestadoresFindUniqueArgs<ExtArgs>>
    ): Prisma__imagenes_prestadoresClient<$Result.GetResult<Prisma.$imagenes_prestadoresPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Imagenes_prestadores that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {imagenes_prestadoresFindUniqueOrThrowArgs} args - Arguments to find a Imagenes_prestadores
     * @example
     * // Get one Imagenes_prestadores
     * const imagenes_prestadores = await prisma.imagenes_prestadores.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends imagenes_prestadoresFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, imagenes_prestadoresFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__imagenes_prestadoresClient<$Result.GetResult<Prisma.$imagenes_prestadoresPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Imagenes_prestadores that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {imagenes_prestadoresFindFirstArgs} args - Arguments to find a Imagenes_prestadores
     * @example
     * // Get one Imagenes_prestadores
     * const imagenes_prestadores = await prisma.imagenes_prestadores.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends imagenes_prestadoresFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, imagenes_prestadoresFindFirstArgs<ExtArgs>>
    ): Prisma__imagenes_prestadoresClient<$Result.GetResult<Prisma.$imagenes_prestadoresPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Imagenes_prestadores that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {imagenes_prestadoresFindFirstOrThrowArgs} args - Arguments to find a Imagenes_prestadores
     * @example
     * // Get one Imagenes_prestadores
     * const imagenes_prestadores = await prisma.imagenes_prestadores.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends imagenes_prestadoresFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, imagenes_prestadoresFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__imagenes_prestadoresClient<$Result.GetResult<Prisma.$imagenes_prestadoresPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Imagenes_prestadores that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {imagenes_prestadoresFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Imagenes_prestadores
     * const imagenes_prestadores = await prisma.imagenes_prestadores.findMany()
     * 
     * // Get first 10 Imagenes_prestadores
     * const imagenes_prestadores = await prisma.imagenes_prestadores.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const imagenes_prestadoresWithIdOnly = await prisma.imagenes_prestadores.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends imagenes_prestadoresFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, imagenes_prestadoresFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$imagenes_prestadoresPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Imagenes_prestadores.
     * @param {imagenes_prestadoresCreateArgs} args - Arguments to create a Imagenes_prestadores.
     * @example
     * // Create one Imagenes_prestadores
     * const Imagenes_prestadores = await prisma.imagenes_prestadores.create({
     *   data: {
     *     // ... data to create a Imagenes_prestadores
     *   }
     * })
     * 
    **/
    create<T extends imagenes_prestadoresCreateArgs<ExtArgs>>(
      args: SelectSubset<T, imagenes_prestadoresCreateArgs<ExtArgs>>
    ): Prisma__imagenes_prestadoresClient<$Result.GetResult<Prisma.$imagenes_prestadoresPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Imagenes_prestadores.
     *     @param {imagenes_prestadoresCreateManyArgs} args - Arguments to create many Imagenes_prestadores.
     *     @example
     *     // Create many Imagenes_prestadores
     *     const imagenes_prestadores = await prisma.imagenes_prestadores.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends imagenes_prestadoresCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, imagenes_prestadoresCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Imagenes_prestadores.
     * @param {imagenes_prestadoresDeleteArgs} args - Arguments to delete one Imagenes_prestadores.
     * @example
     * // Delete one Imagenes_prestadores
     * const Imagenes_prestadores = await prisma.imagenes_prestadores.delete({
     *   where: {
     *     // ... filter to delete one Imagenes_prestadores
     *   }
     * })
     * 
    **/
    delete<T extends imagenes_prestadoresDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, imagenes_prestadoresDeleteArgs<ExtArgs>>
    ): Prisma__imagenes_prestadoresClient<$Result.GetResult<Prisma.$imagenes_prestadoresPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Imagenes_prestadores.
     * @param {imagenes_prestadoresUpdateArgs} args - Arguments to update one Imagenes_prestadores.
     * @example
     * // Update one Imagenes_prestadores
     * const imagenes_prestadores = await prisma.imagenes_prestadores.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends imagenes_prestadoresUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, imagenes_prestadoresUpdateArgs<ExtArgs>>
    ): Prisma__imagenes_prestadoresClient<$Result.GetResult<Prisma.$imagenes_prestadoresPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Imagenes_prestadores.
     * @param {imagenes_prestadoresDeleteManyArgs} args - Arguments to filter Imagenes_prestadores to delete.
     * @example
     * // Delete a few Imagenes_prestadores
     * const { count } = await prisma.imagenes_prestadores.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends imagenes_prestadoresDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, imagenes_prestadoresDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Imagenes_prestadores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {imagenes_prestadoresUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Imagenes_prestadores
     * const imagenes_prestadores = await prisma.imagenes_prestadores.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends imagenes_prestadoresUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, imagenes_prestadoresUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Imagenes_prestadores.
     * @param {imagenes_prestadoresUpsertArgs} args - Arguments to update or create a Imagenes_prestadores.
     * @example
     * // Update or create a Imagenes_prestadores
     * const imagenes_prestadores = await prisma.imagenes_prestadores.upsert({
     *   create: {
     *     // ... data to create a Imagenes_prestadores
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Imagenes_prestadores we want to update
     *   }
     * })
    **/
    upsert<T extends imagenes_prestadoresUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, imagenes_prestadoresUpsertArgs<ExtArgs>>
    ): Prisma__imagenes_prestadoresClient<$Result.GetResult<Prisma.$imagenes_prestadoresPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Imagenes_prestadores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {imagenes_prestadoresCountArgs} args - Arguments to filter Imagenes_prestadores to count.
     * @example
     * // Count the number of Imagenes_prestadores
     * const count = await prisma.imagenes_prestadores.count({
     *   where: {
     *     // ... the filter for the Imagenes_prestadores we want to count
     *   }
     * })
    **/
    count<T extends imagenes_prestadoresCountArgs>(
      args?: Subset<T, imagenes_prestadoresCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Imagenes_prestadoresCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Imagenes_prestadores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Imagenes_prestadoresAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Imagenes_prestadoresAggregateArgs>(args: Subset<T, Imagenes_prestadoresAggregateArgs>): Prisma.PrismaPromise<GetImagenes_prestadoresAggregateType<T>>

    /**
     * Group by Imagenes_prestadores.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {imagenes_prestadoresGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends imagenes_prestadoresGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: imagenes_prestadoresGroupByArgs['orderBy'] }
        : { orderBy?: imagenes_prestadoresGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, imagenes_prestadoresGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetImagenes_prestadoresGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the imagenes_prestadores model
   */
  readonly fields: imagenes_prestadoresFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for imagenes_prestadores.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__imagenes_prestadoresClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';


    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the imagenes_prestadores model
   */ 
  interface imagenes_prestadoresFieldRefs {
    readonly id: FieldRef<"imagenes_prestadores", 'Int'>
    readonly nombre: FieldRef<"imagenes_prestadores", 'String'>
    readonly descripcion: FieldRef<"imagenes_prestadores", 'String'>
    readonly link: FieldRef<"imagenes_prestadores", 'String'>
    readonly perfil_id: FieldRef<"imagenes_prestadores", 'Int'>
    readonly creado_por: FieldRef<"imagenes_prestadores", 'Int'>
    readonly created_at: FieldRef<"imagenes_prestadores", 'DateTime'>
    readonly update_at: FieldRef<"imagenes_prestadores", 'DateTime'>
  }
    

  // Custom InputTypes

  /**
   * imagenes_prestadores findUnique
   */
  export type imagenes_prestadoresFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the imagenes_prestadores
     */
    select?: imagenes_prestadoresSelect<ExtArgs> | null
    /**
     * Filter, which imagenes_prestadores to fetch.
     */
    where: imagenes_prestadoresWhereUniqueInput
  }


  /**
   * imagenes_prestadores findUniqueOrThrow
   */
  export type imagenes_prestadoresFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the imagenes_prestadores
     */
    select?: imagenes_prestadoresSelect<ExtArgs> | null
    /**
     * Filter, which imagenes_prestadores to fetch.
     */
    where: imagenes_prestadoresWhereUniqueInput
  }


  /**
   * imagenes_prestadores findFirst
   */
  export type imagenes_prestadoresFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the imagenes_prestadores
     */
    select?: imagenes_prestadoresSelect<ExtArgs> | null
    /**
     * Filter, which imagenes_prestadores to fetch.
     */
    where?: imagenes_prestadoresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of imagenes_prestadores to fetch.
     */
    orderBy?: imagenes_prestadoresOrderByWithRelationInput | imagenes_prestadoresOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for imagenes_prestadores.
     */
    cursor?: imagenes_prestadoresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` imagenes_prestadores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` imagenes_prestadores.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of imagenes_prestadores.
     */
    distinct?: Imagenes_prestadoresScalarFieldEnum | Imagenes_prestadoresScalarFieldEnum[]
  }


  /**
   * imagenes_prestadores findFirstOrThrow
   */
  export type imagenes_prestadoresFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the imagenes_prestadores
     */
    select?: imagenes_prestadoresSelect<ExtArgs> | null
    /**
     * Filter, which imagenes_prestadores to fetch.
     */
    where?: imagenes_prestadoresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of imagenes_prestadores to fetch.
     */
    orderBy?: imagenes_prestadoresOrderByWithRelationInput | imagenes_prestadoresOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for imagenes_prestadores.
     */
    cursor?: imagenes_prestadoresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` imagenes_prestadores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` imagenes_prestadores.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of imagenes_prestadores.
     */
    distinct?: Imagenes_prestadoresScalarFieldEnum | Imagenes_prestadoresScalarFieldEnum[]
  }


  /**
   * imagenes_prestadores findMany
   */
  export type imagenes_prestadoresFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the imagenes_prestadores
     */
    select?: imagenes_prestadoresSelect<ExtArgs> | null
    /**
     * Filter, which imagenes_prestadores to fetch.
     */
    where?: imagenes_prestadoresWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of imagenes_prestadores to fetch.
     */
    orderBy?: imagenes_prestadoresOrderByWithRelationInput | imagenes_prestadoresOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing imagenes_prestadores.
     */
    cursor?: imagenes_prestadoresWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` imagenes_prestadores from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` imagenes_prestadores.
     */
    skip?: number
    distinct?: Imagenes_prestadoresScalarFieldEnum | Imagenes_prestadoresScalarFieldEnum[]
  }


  /**
   * imagenes_prestadores create
   */
  export type imagenes_prestadoresCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the imagenes_prestadores
     */
    select?: imagenes_prestadoresSelect<ExtArgs> | null
    /**
     * The data needed to create a imagenes_prestadores.
     */
    data?: XOR<imagenes_prestadoresCreateInput, imagenes_prestadoresUncheckedCreateInput>
  }


  /**
   * imagenes_prestadores createMany
   */
  export type imagenes_prestadoresCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many imagenes_prestadores.
     */
    data: imagenes_prestadoresCreateManyInput | imagenes_prestadoresCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * imagenes_prestadores update
   */
  export type imagenes_prestadoresUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the imagenes_prestadores
     */
    select?: imagenes_prestadoresSelect<ExtArgs> | null
    /**
     * The data needed to update a imagenes_prestadores.
     */
    data: XOR<imagenes_prestadoresUpdateInput, imagenes_prestadoresUncheckedUpdateInput>
    /**
     * Choose, which imagenes_prestadores to update.
     */
    where: imagenes_prestadoresWhereUniqueInput
  }


  /**
   * imagenes_prestadores updateMany
   */
  export type imagenes_prestadoresUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update imagenes_prestadores.
     */
    data: XOR<imagenes_prestadoresUpdateManyMutationInput, imagenes_prestadoresUncheckedUpdateManyInput>
    /**
     * Filter which imagenes_prestadores to update
     */
    where?: imagenes_prestadoresWhereInput
  }


  /**
   * imagenes_prestadores upsert
   */
  export type imagenes_prestadoresUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the imagenes_prestadores
     */
    select?: imagenes_prestadoresSelect<ExtArgs> | null
    /**
     * The filter to search for the imagenes_prestadores to update in case it exists.
     */
    where: imagenes_prestadoresWhereUniqueInput
    /**
     * In case the imagenes_prestadores found by the `where` argument doesn't exist, create a new imagenes_prestadores with this data.
     */
    create: XOR<imagenes_prestadoresCreateInput, imagenes_prestadoresUncheckedCreateInput>
    /**
     * In case the imagenes_prestadores was found with the provided `where` argument, update it with this data.
     */
    update: XOR<imagenes_prestadoresUpdateInput, imagenes_prestadoresUncheckedUpdateInput>
  }


  /**
   * imagenes_prestadores delete
   */
  export type imagenes_prestadoresDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the imagenes_prestadores
     */
    select?: imagenes_prestadoresSelect<ExtArgs> | null
    /**
     * Filter which imagenes_prestadores to delete.
     */
    where: imagenes_prestadoresWhereUniqueInput
  }


  /**
   * imagenes_prestadores deleteMany
   */
  export type imagenes_prestadoresDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which imagenes_prestadores to delete
     */
    where?: imagenes_prestadoresWhereInput
  }


  /**
   * imagenes_prestadores without action
   */
  export type imagenes_prestadoresDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the imagenes_prestadores
     */
    select?: imagenes_prestadoresSelect<ExtArgs> | null
  }



  /**
   * Model locaciones
   */

  export type AggregateLocaciones = {
    _count: LocacionesCountAggregateOutputType | null
    _avg: LocacionesAvgAggregateOutputType | null
    _sum: LocacionesSumAggregateOutputType | null
    _min: LocacionesMinAggregateOutputType | null
    _max: LocacionesMaxAggregateOutputType | null
  }

  export type LocacionesAvgAggregateOutputType = {
    id: number | null
    telefono: number | null
    imagen_perfil: number | null
    direccion_latitud: number | null
    direccion_longitud: number | null
    categoria_id: number | null
    creado_por: number | null
  }

  export type LocacionesSumAggregateOutputType = {
    id: number | null
    telefono: number | null
    imagen_perfil: number | null
    direccion_latitud: number | null
    direccion_longitud: number | null
    categoria_id: number | null
    creado_por: number | null
  }

  export type LocacionesMinAggregateOutputType = {
    id: number | null
    nombre: string | null
    descripcion: string | null
    ciudad: $Enums.locaciones_ciudad | null
    jurisdiccion: $Enums.locaciones_jurisdiccion | null
    direccion: string | null
    instagram: string | null
    facebook: string | null
    sitio_web: string | null
    telefono: number | null
    email: string | null
    imagen_perfil: number | null
    direccion_latitud: number | null
    direccion_longitud: number | null
    categoria_id: number | null
    creado_por: number | null
    created_at: Date | null
    update_at: Date | null
  }

  export type LocacionesMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
    descripcion: string | null
    ciudad: $Enums.locaciones_ciudad | null
    jurisdiccion: $Enums.locaciones_jurisdiccion | null
    direccion: string | null
    instagram: string | null
    facebook: string | null
    sitio_web: string | null
    telefono: number | null
    email: string | null
    imagen_perfil: number | null
    direccion_latitud: number | null
    direccion_longitud: number | null
    categoria_id: number | null
    creado_por: number | null
    created_at: Date | null
    update_at: Date | null
  }

  export type LocacionesCountAggregateOutputType = {
    id: number
    nombre: number
    descripcion: number
    ciudad: number
    jurisdiccion: number
    direccion: number
    instagram: number
    facebook: number
    sitio_web: number
    telefono: number
    email: number
    imagen_perfil: number
    direccion_latitud: number
    direccion_longitud: number
    categoria_id: number
    creado_por: number
    created_at: number
    update_at: number
    _all: number
  }


  export type LocacionesAvgAggregateInputType = {
    id?: true
    telefono?: true
    imagen_perfil?: true
    direccion_latitud?: true
    direccion_longitud?: true
    categoria_id?: true
    creado_por?: true
  }

  export type LocacionesSumAggregateInputType = {
    id?: true
    telefono?: true
    imagen_perfil?: true
    direccion_latitud?: true
    direccion_longitud?: true
    categoria_id?: true
    creado_por?: true
  }

  export type LocacionesMinAggregateInputType = {
    id?: true
    nombre?: true
    descripcion?: true
    ciudad?: true
    jurisdiccion?: true
    direccion?: true
    instagram?: true
    facebook?: true
    sitio_web?: true
    telefono?: true
    email?: true
    imagen_perfil?: true
    direccion_latitud?: true
    direccion_longitud?: true
    categoria_id?: true
    creado_por?: true
    created_at?: true
    update_at?: true
  }

  export type LocacionesMaxAggregateInputType = {
    id?: true
    nombre?: true
    descripcion?: true
    ciudad?: true
    jurisdiccion?: true
    direccion?: true
    instagram?: true
    facebook?: true
    sitio_web?: true
    telefono?: true
    email?: true
    imagen_perfil?: true
    direccion_latitud?: true
    direccion_longitud?: true
    categoria_id?: true
    creado_por?: true
    created_at?: true
    update_at?: true
  }

  export type LocacionesCountAggregateInputType = {
    id?: true
    nombre?: true
    descripcion?: true
    ciudad?: true
    jurisdiccion?: true
    direccion?: true
    instagram?: true
    facebook?: true
    sitio_web?: true
    telefono?: true
    email?: true
    imagen_perfil?: true
    direccion_latitud?: true
    direccion_longitud?: true
    categoria_id?: true
    creado_por?: true
    created_at?: true
    update_at?: true
    _all?: true
  }

  export type LocacionesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which locaciones to aggregate.
     */
    where?: locacionesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of locaciones to fetch.
     */
    orderBy?: locacionesOrderByWithRelationInput | locacionesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: locacionesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` locaciones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` locaciones.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned locaciones
    **/
    _count?: true | LocacionesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: LocacionesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: LocacionesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: LocacionesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: LocacionesMaxAggregateInputType
  }

  export type GetLocacionesAggregateType<T extends LocacionesAggregateArgs> = {
        [P in keyof T & keyof AggregateLocaciones]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateLocaciones[P]>
      : GetScalarType<T[P], AggregateLocaciones[P]>
  }




  export type locacionesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: locacionesWhereInput
    orderBy?: locacionesOrderByWithAggregationInput | locacionesOrderByWithAggregationInput[]
    by: LocacionesScalarFieldEnum[] | LocacionesScalarFieldEnum
    having?: locacionesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: LocacionesCountAggregateInputType | true
    _avg?: LocacionesAvgAggregateInputType
    _sum?: LocacionesSumAggregateInputType
    _min?: LocacionesMinAggregateInputType
    _max?: LocacionesMaxAggregateInputType
  }

  export type LocacionesGroupByOutputType = {
    id: number
    nombre: string
    descripcion: string | null
    ciudad: $Enums.locaciones_ciudad | null
    jurisdiccion: $Enums.locaciones_jurisdiccion | null
    direccion: string | null
    instagram: string | null
    facebook: string | null
    sitio_web: string | null
    telefono: number | null
    email: string | null
    imagen_perfil: number | null
    direccion_latitud: number | null
    direccion_longitud: number | null
    categoria_id: number | null
    creado_por: number | null
    created_at: Date | null
    update_at: Date | null
    _count: LocacionesCountAggregateOutputType | null
    _avg: LocacionesAvgAggregateOutputType | null
    _sum: LocacionesSumAggregateOutputType | null
    _min: LocacionesMinAggregateOutputType | null
    _max: LocacionesMaxAggregateOutputType | null
  }

  type GetLocacionesGroupByPayload<T extends locacionesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<LocacionesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof LocacionesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], LocacionesGroupByOutputType[P]>
            : GetScalarType<T[P], LocacionesGroupByOutputType[P]>
        }
      >
    >


  export type locacionesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    descripcion?: boolean
    ciudad?: boolean
    jurisdiccion?: boolean
    direccion?: boolean
    instagram?: boolean
    facebook?: boolean
    sitio_web?: boolean
    telefono?: boolean
    email?: boolean
    imagen_perfil?: boolean
    direccion_latitud?: boolean
    direccion_longitud?: boolean
    categoria_id?: boolean
    creado_por?: boolean
    created_at?: boolean
    update_at?: boolean
  }, ExtArgs["result"]["locaciones"]>

  export type locacionesSelectScalar = {
    id?: boolean
    nombre?: boolean
    descripcion?: boolean
    ciudad?: boolean
    jurisdiccion?: boolean
    direccion?: boolean
    instagram?: boolean
    facebook?: boolean
    sitio_web?: boolean
    telefono?: boolean
    email?: boolean
    imagen_perfil?: boolean
    direccion_latitud?: boolean
    direccion_longitud?: boolean
    categoria_id?: boolean
    creado_por?: boolean
    created_at?: boolean
    update_at?: boolean
  }


  export type $locacionesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "locaciones"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string
      descripcion: string | null
      ciudad: $Enums.locaciones_ciudad | null
      jurisdiccion: $Enums.locaciones_jurisdiccion | null
      direccion: string | null
      instagram: string | null
      facebook: string | null
      sitio_web: string | null
      telefono: number | null
      email: string | null
      imagen_perfil: number | null
      direccion_latitud: number | null
      direccion_longitud: number | null
      categoria_id: number | null
      creado_por: number | null
      created_at: Date | null
      update_at: Date | null
    }, ExtArgs["result"]["locaciones"]>
    composites: {}
  }


  type locacionesGetPayload<S extends boolean | null | undefined | locacionesDefaultArgs> = $Result.GetResult<Prisma.$locacionesPayload, S>

  type locacionesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<locacionesFindManyArgs, 'select' | 'include' | 'distinct' > & {
      select?: LocacionesCountAggregateInputType | true
    }

  export interface locacionesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['locaciones'], meta: { name: 'locaciones' } }
    /**
     * Find zero or one Locaciones that matches the filter.
     * @param {locacionesFindUniqueArgs} args - Arguments to find a Locaciones
     * @example
     * // Get one Locaciones
     * const locaciones = await prisma.locaciones.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends locacionesFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, locacionesFindUniqueArgs<ExtArgs>>
    ): Prisma__locacionesClient<$Result.GetResult<Prisma.$locacionesPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Locaciones that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {locacionesFindUniqueOrThrowArgs} args - Arguments to find a Locaciones
     * @example
     * // Get one Locaciones
     * const locaciones = await prisma.locaciones.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends locacionesFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, locacionesFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__locacionesClient<$Result.GetResult<Prisma.$locacionesPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Locaciones that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {locacionesFindFirstArgs} args - Arguments to find a Locaciones
     * @example
     * // Get one Locaciones
     * const locaciones = await prisma.locaciones.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends locacionesFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, locacionesFindFirstArgs<ExtArgs>>
    ): Prisma__locacionesClient<$Result.GetResult<Prisma.$locacionesPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Locaciones that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {locacionesFindFirstOrThrowArgs} args - Arguments to find a Locaciones
     * @example
     * // Get one Locaciones
     * const locaciones = await prisma.locaciones.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends locacionesFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, locacionesFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__locacionesClient<$Result.GetResult<Prisma.$locacionesPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Locaciones that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {locacionesFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Locaciones
     * const locaciones = await prisma.locaciones.findMany()
     * 
     * // Get first 10 Locaciones
     * const locaciones = await prisma.locaciones.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const locacionesWithIdOnly = await prisma.locaciones.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends locacionesFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, locacionesFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$locacionesPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Locaciones.
     * @param {locacionesCreateArgs} args - Arguments to create a Locaciones.
     * @example
     * // Create one Locaciones
     * const Locaciones = await prisma.locaciones.create({
     *   data: {
     *     // ... data to create a Locaciones
     *   }
     * })
     * 
    **/
    create<T extends locacionesCreateArgs<ExtArgs>>(
      args: SelectSubset<T, locacionesCreateArgs<ExtArgs>>
    ): Prisma__locacionesClient<$Result.GetResult<Prisma.$locacionesPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Locaciones.
     *     @param {locacionesCreateManyArgs} args - Arguments to create many Locaciones.
     *     @example
     *     // Create many Locaciones
     *     const locaciones = await prisma.locaciones.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends locacionesCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, locacionesCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Locaciones.
     * @param {locacionesDeleteArgs} args - Arguments to delete one Locaciones.
     * @example
     * // Delete one Locaciones
     * const Locaciones = await prisma.locaciones.delete({
     *   where: {
     *     // ... filter to delete one Locaciones
     *   }
     * })
     * 
    **/
    delete<T extends locacionesDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, locacionesDeleteArgs<ExtArgs>>
    ): Prisma__locacionesClient<$Result.GetResult<Prisma.$locacionesPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Locaciones.
     * @param {locacionesUpdateArgs} args - Arguments to update one Locaciones.
     * @example
     * // Update one Locaciones
     * const locaciones = await prisma.locaciones.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends locacionesUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, locacionesUpdateArgs<ExtArgs>>
    ): Prisma__locacionesClient<$Result.GetResult<Prisma.$locacionesPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Locaciones.
     * @param {locacionesDeleteManyArgs} args - Arguments to filter Locaciones to delete.
     * @example
     * // Delete a few Locaciones
     * const { count } = await prisma.locaciones.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends locacionesDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, locacionesDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Locaciones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {locacionesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Locaciones
     * const locaciones = await prisma.locaciones.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends locacionesUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, locacionesUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Locaciones.
     * @param {locacionesUpsertArgs} args - Arguments to update or create a Locaciones.
     * @example
     * // Update or create a Locaciones
     * const locaciones = await prisma.locaciones.upsert({
     *   create: {
     *     // ... data to create a Locaciones
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Locaciones we want to update
     *   }
     * })
    **/
    upsert<T extends locacionesUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, locacionesUpsertArgs<ExtArgs>>
    ): Prisma__locacionesClient<$Result.GetResult<Prisma.$locacionesPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Locaciones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {locacionesCountArgs} args - Arguments to filter Locaciones to count.
     * @example
     * // Count the number of Locaciones
     * const count = await prisma.locaciones.count({
     *   where: {
     *     // ... the filter for the Locaciones we want to count
     *   }
     * })
    **/
    count<T extends locacionesCountArgs>(
      args?: Subset<T, locacionesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], LocacionesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Locaciones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LocacionesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends LocacionesAggregateArgs>(args: Subset<T, LocacionesAggregateArgs>): Prisma.PrismaPromise<GetLocacionesAggregateType<T>>

    /**
     * Group by Locaciones.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {locacionesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends locacionesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: locacionesGroupByArgs['orderBy'] }
        : { orderBy?: locacionesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, locacionesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetLocacionesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the locaciones model
   */
  readonly fields: locacionesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for locaciones.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__locacionesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';


    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the locaciones model
   */ 
  interface locacionesFieldRefs {
    readonly id: FieldRef<"locaciones", 'Int'>
    readonly nombre: FieldRef<"locaciones", 'String'>
    readonly descripcion: FieldRef<"locaciones", 'String'>
    readonly ciudad: FieldRef<"locaciones", 'locaciones_ciudad'>
    readonly jurisdiccion: FieldRef<"locaciones", 'locaciones_jurisdiccion'>
    readonly direccion: FieldRef<"locaciones", 'String'>
    readonly instagram: FieldRef<"locaciones", 'String'>
    readonly facebook: FieldRef<"locaciones", 'String'>
    readonly sitio_web: FieldRef<"locaciones", 'String'>
    readonly telefono: FieldRef<"locaciones", 'Int'>
    readonly email: FieldRef<"locaciones", 'String'>
    readonly imagen_perfil: FieldRef<"locaciones", 'Int'>
    readonly direccion_latitud: FieldRef<"locaciones", 'Float'>
    readonly direccion_longitud: FieldRef<"locaciones", 'Float'>
    readonly categoria_id: FieldRef<"locaciones", 'Int'>
    readonly creado_por: FieldRef<"locaciones", 'Int'>
    readonly created_at: FieldRef<"locaciones", 'DateTime'>
    readonly update_at: FieldRef<"locaciones", 'DateTime'>
  }
    

  // Custom InputTypes

  /**
   * locaciones findUnique
   */
  export type locacionesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the locaciones
     */
    select?: locacionesSelect<ExtArgs> | null
    /**
     * Filter, which locaciones to fetch.
     */
    where: locacionesWhereUniqueInput
  }


  /**
   * locaciones findUniqueOrThrow
   */
  export type locacionesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the locaciones
     */
    select?: locacionesSelect<ExtArgs> | null
    /**
     * Filter, which locaciones to fetch.
     */
    where: locacionesWhereUniqueInput
  }


  /**
   * locaciones findFirst
   */
  export type locacionesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the locaciones
     */
    select?: locacionesSelect<ExtArgs> | null
    /**
     * Filter, which locaciones to fetch.
     */
    where?: locacionesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of locaciones to fetch.
     */
    orderBy?: locacionesOrderByWithRelationInput | locacionesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for locaciones.
     */
    cursor?: locacionesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` locaciones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` locaciones.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of locaciones.
     */
    distinct?: LocacionesScalarFieldEnum | LocacionesScalarFieldEnum[]
  }


  /**
   * locaciones findFirstOrThrow
   */
  export type locacionesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the locaciones
     */
    select?: locacionesSelect<ExtArgs> | null
    /**
     * Filter, which locaciones to fetch.
     */
    where?: locacionesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of locaciones to fetch.
     */
    orderBy?: locacionesOrderByWithRelationInput | locacionesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for locaciones.
     */
    cursor?: locacionesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` locaciones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` locaciones.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of locaciones.
     */
    distinct?: LocacionesScalarFieldEnum | LocacionesScalarFieldEnum[]
  }


  /**
   * locaciones findMany
   */
  export type locacionesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the locaciones
     */
    select?: locacionesSelect<ExtArgs> | null
    /**
     * Filter, which locaciones to fetch.
     */
    where?: locacionesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of locaciones to fetch.
     */
    orderBy?: locacionesOrderByWithRelationInput | locacionesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing locaciones.
     */
    cursor?: locacionesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` locaciones from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` locaciones.
     */
    skip?: number
    distinct?: LocacionesScalarFieldEnum | LocacionesScalarFieldEnum[]
  }


  /**
   * locaciones create
   */
  export type locacionesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the locaciones
     */
    select?: locacionesSelect<ExtArgs> | null
    /**
     * The data needed to create a locaciones.
     */
    data: XOR<locacionesCreateInput, locacionesUncheckedCreateInput>
  }


  /**
   * locaciones createMany
   */
  export type locacionesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many locaciones.
     */
    data: locacionesCreateManyInput | locacionesCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * locaciones update
   */
  export type locacionesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the locaciones
     */
    select?: locacionesSelect<ExtArgs> | null
    /**
     * The data needed to update a locaciones.
     */
    data: XOR<locacionesUpdateInput, locacionesUncheckedUpdateInput>
    /**
     * Choose, which locaciones to update.
     */
    where: locacionesWhereUniqueInput
  }


  /**
   * locaciones updateMany
   */
  export type locacionesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update locaciones.
     */
    data: XOR<locacionesUpdateManyMutationInput, locacionesUncheckedUpdateManyInput>
    /**
     * Filter which locaciones to update
     */
    where?: locacionesWhereInput
  }


  /**
   * locaciones upsert
   */
  export type locacionesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the locaciones
     */
    select?: locacionesSelect<ExtArgs> | null
    /**
     * The filter to search for the locaciones to update in case it exists.
     */
    where: locacionesWhereUniqueInput
    /**
     * In case the locaciones found by the `where` argument doesn't exist, create a new locaciones with this data.
     */
    create: XOR<locacionesCreateInput, locacionesUncheckedCreateInput>
    /**
     * In case the locaciones was found with the provided `where` argument, update it with this data.
     */
    update: XOR<locacionesUpdateInput, locacionesUncheckedUpdateInput>
  }


  /**
   * locaciones delete
   */
  export type locacionesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the locaciones
     */
    select?: locacionesSelect<ExtArgs> | null
    /**
     * Filter which locaciones to delete.
     */
    where: locacionesWhereUniqueInput
  }


  /**
   * locaciones deleteMany
   */
  export type locacionesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which locaciones to delete
     */
    where?: locacionesWhereInput
  }


  /**
   * locaciones without action
   */
  export type locacionesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the locaciones
     */
    select?: locacionesSelect<ExtArgs> | null
  }



  /**
   * Model perfil
   */

  export type AggregatePerfil = {
    _count: PerfilCountAggregateOutputType | null
    _avg: PerfilAvgAggregateOutputType | null
    _sum: PerfilSumAggregateOutputType | null
    _min: PerfilMinAggregateOutputType | null
    _max: PerfilMaxAggregateOutputType | null
  }

  export type PerfilAvgAggregateOutputType = {
    id: number | null
    user_id: number | null
    imagen_perfil: number | null
    telefono: number | null
    tipo_productora_id: number | null
    areas_desempenio_id: number | null
    tipo_servicio_id: number | null
    tipo_actividad_id: number | null
  }

  export type PerfilSumAggregateOutputType = {
    id: number | null
    user_id: number | null
    imagen_perfil: number | null
    telefono: number | null
    tipo_productora_id: number | null
    areas_desempenio_id: number | null
    tipo_servicio_id: number | null
    tipo_actividad_id: number | null
  }

  export type PerfilMinAggregateOutputType = {
    id: number | null
    perfil: $Enums.perfil_perfil | null
    descripcion: string | null
    user_id: number | null
    nombre_entidad: string | null
    imagen_perfil: number | null
    experiencia_laboral: string | null
    area_cobertura: $Enums.perfil_area_cobertura | null
    email: string | null
    telefono: number | null
    instagram: string | null
    facebook: string | null
    sitio_web: string | null
    tipo_productora_id: number | null
    areas_desempenio_id: number | null
    tipo_servicio_id: number | null
    tipo_actividad_id: number | null
    idioma: $Enums.perfil_idioma | null
    created_at: Date | null
    update_at: Date | null
  }

  export type PerfilMaxAggregateOutputType = {
    id: number | null
    perfil: $Enums.perfil_perfil | null
    descripcion: string | null
    user_id: number | null
    nombre_entidad: string | null
    imagen_perfil: number | null
    experiencia_laboral: string | null
    area_cobertura: $Enums.perfil_area_cobertura | null
    email: string | null
    telefono: number | null
    instagram: string | null
    facebook: string | null
    sitio_web: string | null
    tipo_productora_id: number | null
    areas_desempenio_id: number | null
    tipo_servicio_id: number | null
    tipo_actividad_id: number | null
    idioma: $Enums.perfil_idioma | null
    created_at: Date | null
    update_at: Date | null
  }

  export type PerfilCountAggregateOutputType = {
    id: number
    perfil: number
    descripcion: number
    user_id: number
    nombre_entidad: number
    imagen_perfil: number
    experiencia_laboral: number
    area_cobertura: number
    email: number
    telefono: number
    instagram: number
    facebook: number
    sitio_web: number
    tipo_productora_id: number
    areas_desempenio_id: number
    tipo_servicio_id: number
    tipo_actividad_id: number
    idioma: number
    created_at: number
    update_at: number
    _all: number
  }


  export type PerfilAvgAggregateInputType = {
    id?: true
    user_id?: true
    imagen_perfil?: true
    telefono?: true
    tipo_productora_id?: true
    areas_desempenio_id?: true
    tipo_servicio_id?: true
    tipo_actividad_id?: true
  }

  export type PerfilSumAggregateInputType = {
    id?: true
    user_id?: true
    imagen_perfil?: true
    telefono?: true
    tipo_productora_id?: true
    areas_desempenio_id?: true
    tipo_servicio_id?: true
    tipo_actividad_id?: true
  }

  export type PerfilMinAggregateInputType = {
    id?: true
    perfil?: true
    descripcion?: true
    user_id?: true
    nombre_entidad?: true
    imagen_perfil?: true
    experiencia_laboral?: true
    area_cobertura?: true
    email?: true
    telefono?: true
    instagram?: true
    facebook?: true
    sitio_web?: true
    tipo_productora_id?: true
    areas_desempenio_id?: true
    tipo_servicio_id?: true
    tipo_actividad_id?: true
    idioma?: true
    created_at?: true
    update_at?: true
  }

  export type PerfilMaxAggregateInputType = {
    id?: true
    perfil?: true
    descripcion?: true
    user_id?: true
    nombre_entidad?: true
    imagen_perfil?: true
    experiencia_laboral?: true
    area_cobertura?: true
    email?: true
    telefono?: true
    instagram?: true
    facebook?: true
    sitio_web?: true
    tipo_productora_id?: true
    areas_desempenio_id?: true
    tipo_servicio_id?: true
    tipo_actividad_id?: true
    idioma?: true
    created_at?: true
    update_at?: true
  }

  export type PerfilCountAggregateInputType = {
    id?: true
    perfil?: true
    descripcion?: true
    user_id?: true
    nombre_entidad?: true
    imagen_perfil?: true
    experiencia_laboral?: true
    area_cobertura?: true
    email?: true
    telefono?: true
    instagram?: true
    facebook?: true
    sitio_web?: true
    tipo_productora_id?: true
    areas_desempenio_id?: true
    tipo_servicio_id?: true
    tipo_actividad_id?: true
    idioma?: true
    created_at?: true
    update_at?: true
    _all?: true
  }

  export type PerfilAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which perfil to aggregate.
     */
    where?: perfilWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of perfils to fetch.
     */
    orderBy?: perfilOrderByWithRelationInput | perfilOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: perfilWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` perfils from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` perfils.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned perfils
    **/
    _count?: true | PerfilCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PerfilAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PerfilSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PerfilMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PerfilMaxAggregateInputType
  }

  export type GetPerfilAggregateType<T extends PerfilAggregateArgs> = {
        [P in keyof T & keyof AggregatePerfil]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePerfil[P]>
      : GetScalarType<T[P], AggregatePerfil[P]>
  }




  export type perfilGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: perfilWhereInput
    orderBy?: perfilOrderByWithAggregationInput | perfilOrderByWithAggregationInput[]
    by: PerfilScalarFieldEnum[] | PerfilScalarFieldEnum
    having?: perfilScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PerfilCountAggregateInputType | true
    _avg?: PerfilAvgAggregateInputType
    _sum?: PerfilSumAggregateInputType
    _min?: PerfilMinAggregateInputType
    _max?: PerfilMaxAggregateInputType
  }

  export type PerfilGroupByOutputType = {
    id: number
    perfil: $Enums.perfil_perfil | null
    descripcion: string | null
    user_id: number | null
    nombre_entidad: string
    imagen_perfil: number | null
    experiencia_laboral: string | null
    area_cobertura: $Enums.perfil_area_cobertura | null
    email: string | null
    telefono: number | null
    instagram: string | null
    facebook: string | null
    sitio_web: string | null
    tipo_productora_id: number | null
    areas_desempenio_id: number | null
    tipo_servicio_id: number | null
    tipo_actividad_id: number | null
    idioma: $Enums.perfil_idioma | null
    created_at: Date | null
    update_at: Date | null
    _count: PerfilCountAggregateOutputType | null
    _avg: PerfilAvgAggregateOutputType | null
    _sum: PerfilSumAggregateOutputType | null
    _min: PerfilMinAggregateOutputType | null
    _max: PerfilMaxAggregateOutputType | null
  }

  type GetPerfilGroupByPayload<T extends perfilGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PerfilGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PerfilGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PerfilGroupByOutputType[P]>
            : GetScalarType<T[P], PerfilGroupByOutputType[P]>
        }
      >
    >


  export type perfilSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    perfil?: boolean
    descripcion?: boolean
    user_id?: boolean
    nombre_entidad?: boolean
    imagen_perfil?: boolean
    experiencia_laboral?: boolean
    area_cobertura?: boolean
    email?: boolean
    telefono?: boolean
    instagram?: boolean
    facebook?: boolean
    sitio_web?: boolean
    tipo_productora_id?: boolean
    areas_desempenio_id?: boolean
    tipo_servicio_id?: boolean
    tipo_actividad_id?: boolean
    idioma?: boolean
    created_at?: boolean
    update_at?: boolean
  }, ExtArgs["result"]["perfil"]>

  export type perfilSelectScalar = {
    id?: boolean
    perfil?: boolean
    descripcion?: boolean
    user_id?: boolean
    nombre_entidad?: boolean
    imagen_perfil?: boolean
    experiencia_laboral?: boolean
    area_cobertura?: boolean
    email?: boolean
    telefono?: boolean
    instagram?: boolean
    facebook?: boolean
    sitio_web?: boolean
    tipo_productora_id?: boolean
    areas_desempenio_id?: boolean
    tipo_servicio_id?: boolean
    tipo_actividad_id?: boolean
    idioma?: boolean
    created_at?: boolean
    update_at?: boolean
  }


  export type $perfilPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "perfil"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      perfil: $Enums.perfil_perfil | null
      descripcion: string | null
      user_id: number | null
      nombre_entidad: string
      imagen_perfil: number | null
      experiencia_laboral: string | null
      area_cobertura: $Enums.perfil_area_cobertura | null
      email: string | null
      telefono: number | null
      instagram: string | null
      facebook: string | null
      sitio_web: string | null
      tipo_productora_id: number | null
      areas_desempenio_id: number | null
      tipo_servicio_id: number | null
      tipo_actividad_id: number | null
      idioma: $Enums.perfil_idioma | null
      created_at: Date | null
      update_at: Date | null
    }, ExtArgs["result"]["perfil"]>
    composites: {}
  }


  type perfilGetPayload<S extends boolean | null | undefined | perfilDefaultArgs> = $Result.GetResult<Prisma.$perfilPayload, S>

  type perfilCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<perfilFindManyArgs, 'select' | 'include' | 'distinct' > & {
      select?: PerfilCountAggregateInputType | true
    }

  export interface perfilDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['perfil'], meta: { name: 'perfil' } }
    /**
     * Find zero or one Perfil that matches the filter.
     * @param {perfilFindUniqueArgs} args - Arguments to find a Perfil
     * @example
     * // Get one Perfil
     * const perfil = await prisma.perfil.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends perfilFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, perfilFindUniqueArgs<ExtArgs>>
    ): Prisma__perfilClient<$Result.GetResult<Prisma.$perfilPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Perfil that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {perfilFindUniqueOrThrowArgs} args - Arguments to find a Perfil
     * @example
     * // Get one Perfil
     * const perfil = await prisma.perfil.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends perfilFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, perfilFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__perfilClient<$Result.GetResult<Prisma.$perfilPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Perfil that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {perfilFindFirstArgs} args - Arguments to find a Perfil
     * @example
     * // Get one Perfil
     * const perfil = await prisma.perfil.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends perfilFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, perfilFindFirstArgs<ExtArgs>>
    ): Prisma__perfilClient<$Result.GetResult<Prisma.$perfilPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Perfil that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {perfilFindFirstOrThrowArgs} args - Arguments to find a Perfil
     * @example
     * // Get one Perfil
     * const perfil = await prisma.perfil.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends perfilFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, perfilFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__perfilClient<$Result.GetResult<Prisma.$perfilPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Perfils that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {perfilFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Perfils
     * const perfils = await prisma.perfil.findMany()
     * 
     * // Get first 10 Perfils
     * const perfils = await prisma.perfil.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const perfilWithIdOnly = await prisma.perfil.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends perfilFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, perfilFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$perfilPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Perfil.
     * @param {perfilCreateArgs} args - Arguments to create a Perfil.
     * @example
     * // Create one Perfil
     * const Perfil = await prisma.perfil.create({
     *   data: {
     *     // ... data to create a Perfil
     *   }
     * })
     * 
    **/
    create<T extends perfilCreateArgs<ExtArgs>>(
      args: SelectSubset<T, perfilCreateArgs<ExtArgs>>
    ): Prisma__perfilClient<$Result.GetResult<Prisma.$perfilPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Perfils.
     *     @param {perfilCreateManyArgs} args - Arguments to create many Perfils.
     *     @example
     *     // Create many Perfils
     *     const perfil = await prisma.perfil.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends perfilCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, perfilCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Perfil.
     * @param {perfilDeleteArgs} args - Arguments to delete one Perfil.
     * @example
     * // Delete one Perfil
     * const Perfil = await prisma.perfil.delete({
     *   where: {
     *     // ... filter to delete one Perfil
     *   }
     * })
     * 
    **/
    delete<T extends perfilDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, perfilDeleteArgs<ExtArgs>>
    ): Prisma__perfilClient<$Result.GetResult<Prisma.$perfilPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Perfil.
     * @param {perfilUpdateArgs} args - Arguments to update one Perfil.
     * @example
     * // Update one Perfil
     * const perfil = await prisma.perfil.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends perfilUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, perfilUpdateArgs<ExtArgs>>
    ): Prisma__perfilClient<$Result.GetResult<Prisma.$perfilPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Perfils.
     * @param {perfilDeleteManyArgs} args - Arguments to filter Perfils to delete.
     * @example
     * // Delete a few Perfils
     * const { count } = await prisma.perfil.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends perfilDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, perfilDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Perfils.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {perfilUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Perfils
     * const perfil = await prisma.perfil.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends perfilUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, perfilUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Perfil.
     * @param {perfilUpsertArgs} args - Arguments to update or create a Perfil.
     * @example
     * // Update or create a Perfil
     * const perfil = await prisma.perfil.upsert({
     *   create: {
     *     // ... data to create a Perfil
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Perfil we want to update
     *   }
     * })
    **/
    upsert<T extends perfilUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, perfilUpsertArgs<ExtArgs>>
    ): Prisma__perfilClient<$Result.GetResult<Prisma.$perfilPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Perfils.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {perfilCountArgs} args - Arguments to filter Perfils to count.
     * @example
     * // Count the number of Perfils
     * const count = await prisma.perfil.count({
     *   where: {
     *     // ... the filter for the Perfils we want to count
     *   }
     * })
    **/
    count<T extends perfilCountArgs>(
      args?: Subset<T, perfilCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PerfilCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Perfil.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PerfilAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PerfilAggregateArgs>(args: Subset<T, PerfilAggregateArgs>): Prisma.PrismaPromise<GetPerfilAggregateType<T>>

    /**
     * Group by Perfil.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {perfilGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends perfilGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: perfilGroupByArgs['orderBy'] }
        : { orderBy?: perfilGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, perfilGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPerfilGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the perfil model
   */
  readonly fields: perfilFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for perfil.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__perfilClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';


    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the perfil model
   */ 
  interface perfilFieldRefs {
    readonly id: FieldRef<"perfil", 'Int'>
    readonly perfil: FieldRef<"perfil", 'perfil_perfil'>
    readonly descripcion: FieldRef<"perfil", 'String'>
    readonly user_id: FieldRef<"perfil", 'Int'>
    readonly nombre_entidad: FieldRef<"perfil", 'String'>
    readonly imagen_perfil: FieldRef<"perfil", 'Int'>
    readonly experiencia_laboral: FieldRef<"perfil", 'String'>
    readonly area_cobertura: FieldRef<"perfil", 'perfil_area_cobertura'>
    readonly email: FieldRef<"perfil", 'String'>
    readonly telefono: FieldRef<"perfil", 'Int'>
    readonly instagram: FieldRef<"perfil", 'String'>
    readonly facebook: FieldRef<"perfil", 'String'>
    readonly sitio_web: FieldRef<"perfil", 'String'>
    readonly tipo_productora_id: FieldRef<"perfil", 'Int'>
    readonly areas_desempenio_id: FieldRef<"perfil", 'Int'>
    readonly tipo_servicio_id: FieldRef<"perfil", 'Int'>
    readonly tipo_actividad_id: FieldRef<"perfil", 'Int'>
    readonly idioma: FieldRef<"perfil", 'perfil_idioma'>
    readonly created_at: FieldRef<"perfil", 'DateTime'>
    readonly update_at: FieldRef<"perfil", 'DateTime'>
  }
    

  // Custom InputTypes

  /**
   * perfil findUnique
   */
  export type perfilFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the perfil
     */
    select?: perfilSelect<ExtArgs> | null
    /**
     * Filter, which perfil to fetch.
     */
    where: perfilWhereUniqueInput
  }


  /**
   * perfil findUniqueOrThrow
   */
  export type perfilFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the perfil
     */
    select?: perfilSelect<ExtArgs> | null
    /**
     * Filter, which perfil to fetch.
     */
    where: perfilWhereUniqueInput
  }


  /**
   * perfil findFirst
   */
  export type perfilFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the perfil
     */
    select?: perfilSelect<ExtArgs> | null
    /**
     * Filter, which perfil to fetch.
     */
    where?: perfilWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of perfils to fetch.
     */
    orderBy?: perfilOrderByWithRelationInput | perfilOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for perfils.
     */
    cursor?: perfilWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` perfils from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` perfils.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of perfils.
     */
    distinct?: PerfilScalarFieldEnum | PerfilScalarFieldEnum[]
  }


  /**
   * perfil findFirstOrThrow
   */
  export type perfilFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the perfil
     */
    select?: perfilSelect<ExtArgs> | null
    /**
     * Filter, which perfil to fetch.
     */
    where?: perfilWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of perfils to fetch.
     */
    orderBy?: perfilOrderByWithRelationInput | perfilOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for perfils.
     */
    cursor?: perfilWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` perfils from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` perfils.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of perfils.
     */
    distinct?: PerfilScalarFieldEnum | PerfilScalarFieldEnum[]
  }


  /**
   * perfil findMany
   */
  export type perfilFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the perfil
     */
    select?: perfilSelect<ExtArgs> | null
    /**
     * Filter, which perfils to fetch.
     */
    where?: perfilWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of perfils to fetch.
     */
    orderBy?: perfilOrderByWithRelationInput | perfilOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing perfils.
     */
    cursor?: perfilWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` perfils from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` perfils.
     */
    skip?: number
    distinct?: PerfilScalarFieldEnum | PerfilScalarFieldEnum[]
  }


  /**
   * perfil create
   */
  export type perfilCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the perfil
     */
    select?: perfilSelect<ExtArgs> | null
    /**
     * The data needed to create a perfil.
     */
    data: XOR<perfilCreateInput, perfilUncheckedCreateInput>
  }


  /**
   * perfil createMany
   */
  export type perfilCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many perfils.
     */
    data: perfilCreateManyInput | perfilCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * perfil update
   */
  export type perfilUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the perfil
     */
    select?: perfilSelect<ExtArgs> | null
    /**
     * The data needed to update a perfil.
     */
    data: XOR<perfilUpdateInput, perfilUncheckedUpdateInput>
    /**
     * Choose, which perfil to update.
     */
    where: perfilWhereUniqueInput
  }


  /**
   * perfil updateMany
   */
  export type perfilUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update perfils.
     */
    data: XOR<perfilUpdateManyMutationInput, perfilUncheckedUpdateManyInput>
    /**
     * Filter which perfils to update
     */
    where?: perfilWhereInput
  }


  /**
   * perfil upsert
   */
  export type perfilUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the perfil
     */
    select?: perfilSelect<ExtArgs> | null
    /**
     * The filter to search for the perfil to update in case it exists.
     */
    where: perfilWhereUniqueInput
    /**
     * In case the perfil found by the `where` argument doesn't exist, create a new perfil with this data.
     */
    create: XOR<perfilCreateInput, perfilUncheckedCreateInput>
    /**
     * In case the perfil was found with the provided `where` argument, update it with this data.
     */
    update: XOR<perfilUpdateInput, perfilUncheckedUpdateInput>
  }


  /**
   * perfil delete
   */
  export type perfilDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the perfil
     */
    select?: perfilSelect<ExtArgs> | null
    /**
     * Filter which perfil to delete.
     */
    where: perfilWhereUniqueInput
  }


  /**
   * perfil deleteMany
   */
  export type perfilDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which perfils to delete
     */
    where?: perfilWhereInput
  }


  /**
   * perfil without action
   */
  export type perfilDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the perfil
     */
    select?: perfilSelect<ExtArgs> | null
  }



  /**
   * Model permisos
   */

  export type AggregatePermisos = {
    _count: PermisosCountAggregateOutputType | null
    _avg: PermisosAvgAggregateOutputType | null
    _sum: PermisosSumAggregateOutputType | null
    _min: PermisosMinAggregateOutputType | null
    _max: PermisosMaxAggregateOutputType | null
  }

  export type PermisosAvgAggregateOutputType = {
    id: number | null
    creado_por: number | null
  }

  export type PermisosSumAggregateOutputType = {
    id: number | null
    creado_por: number | null
  }

  export type PermisosMinAggregateOutputType = {
    id: number | null
    nombre: string | null
    descripcion: string | null
    link: string | null
    creado_por: number | null
    created_at: Date | null
    update_at: Date | null
  }

  export type PermisosMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
    descripcion: string | null
    link: string | null
    creado_por: number | null
    created_at: Date | null
    update_at: Date | null
  }

  export type PermisosCountAggregateOutputType = {
    id: number
    nombre: number
    descripcion: number
    link: number
    creado_por: number
    created_at: number
    update_at: number
    _all: number
  }


  export type PermisosAvgAggregateInputType = {
    id?: true
    creado_por?: true
  }

  export type PermisosSumAggregateInputType = {
    id?: true
    creado_por?: true
  }

  export type PermisosMinAggregateInputType = {
    id?: true
    nombre?: true
    descripcion?: true
    link?: true
    creado_por?: true
    created_at?: true
    update_at?: true
  }

  export type PermisosMaxAggregateInputType = {
    id?: true
    nombre?: true
    descripcion?: true
    link?: true
    creado_por?: true
    created_at?: true
    update_at?: true
  }

  export type PermisosCountAggregateInputType = {
    id?: true
    nombre?: true
    descripcion?: true
    link?: true
    creado_por?: true
    created_at?: true
    update_at?: true
    _all?: true
  }

  export type PermisosAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which permisos to aggregate.
     */
    where?: permisosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of permisos to fetch.
     */
    orderBy?: permisosOrderByWithRelationInput | permisosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: permisosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` permisos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` permisos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned permisos
    **/
    _count?: true | PermisosCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PermisosAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PermisosSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PermisosMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PermisosMaxAggregateInputType
  }

  export type GetPermisosAggregateType<T extends PermisosAggregateArgs> = {
        [P in keyof T & keyof AggregatePermisos]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePermisos[P]>
      : GetScalarType<T[P], AggregatePermisos[P]>
  }




  export type permisosGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: permisosWhereInput
    orderBy?: permisosOrderByWithAggregationInput | permisosOrderByWithAggregationInput[]
    by: PermisosScalarFieldEnum[] | PermisosScalarFieldEnum
    having?: permisosScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PermisosCountAggregateInputType | true
    _avg?: PermisosAvgAggregateInputType
    _sum?: PermisosSumAggregateInputType
    _min?: PermisosMinAggregateInputType
    _max?: PermisosMaxAggregateInputType
  }

  export type PermisosGroupByOutputType = {
    id: number
    nombre: string
    descripcion: string | null
    link: string | null
    creado_por: number | null
    created_at: Date | null
    update_at: Date | null
    _count: PermisosCountAggregateOutputType | null
    _avg: PermisosAvgAggregateOutputType | null
    _sum: PermisosSumAggregateOutputType | null
    _min: PermisosMinAggregateOutputType | null
    _max: PermisosMaxAggregateOutputType | null
  }

  type GetPermisosGroupByPayload<T extends permisosGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PermisosGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PermisosGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PermisosGroupByOutputType[P]>
            : GetScalarType<T[P], PermisosGroupByOutputType[P]>
        }
      >
    >


  export type permisosSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    descripcion?: boolean
    link?: boolean
    creado_por?: boolean
    created_at?: boolean
    update_at?: boolean
  }, ExtArgs["result"]["permisos"]>

  export type permisosSelectScalar = {
    id?: boolean
    nombre?: boolean
    descripcion?: boolean
    link?: boolean
    creado_por?: boolean
    created_at?: boolean
    update_at?: boolean
  }


  export type $permisosPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "permisos"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string
      descripcion: string | null
      link: string | null
      creado_por: number | null
      created_at: Date | null
      update_at: Date | null
    }, ExtArgs["result"]["permisos"]>
    composites: {}
  }


  type permisosGetPayload<S extends boolean | null | undefined | permisosDefaultArgs> = $Result.GetResult<Prisma.$permisosPayload, S>

  type permisosCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<permisosFindManyArgs, 'select' | 'include' | 'distinct' > & {
      select?: PermisosCountAggregateInputType | true
    }

  export interface permisosDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['permisos'], meta: { name: 'permisos' } }
    /**
     * Find zero or one Permisos that matches the filter.
     * @param {permisosFindUniqueArgs} args - Arguments to find a Permisos
     * @example
     * // Get one Permisos
     * const permisos = await prisma.permisos.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends permisosFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, permisosFindUniqueArgs<ExtArgs>>
    ): Prisma__permisosClient<$Result.GetResult<Prisma.$permisosPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Permisos that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {permisosFindUniqueOrThrowArgs} args - Arguments to find a Permisos
     * @example
     * // Get one Permisos
     * const permisos = await prisma.permisos.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends permisosFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, permisosFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__permisosClient<$Result.GetResult<Prisma.$permisosPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Permisos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {permisosFindFirstArgs} args - Arguments to find a Permisos
     * @example
     * // Get one Permisos
     * const permisos = await prisma.permisos.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends permisosFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, permisosFindFirstArgs<ExtArgs>>
    ): Prisma__permisosClient<$Result.GetResult<Prisma.$permisosPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Permisos that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {permisosFindFirstOrThrowArgs} args - Arguments to find a Permisos
     * @example
     * // Get one Permisos
     * const permisos = await prisma.permisos.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends permisosFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, permisosFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__permisosClient<$Result.GetResult<Prisma.$permisosPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Permisos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {permisosFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Permisos
     * const permisos = await prisma.permisos.findMany()
     * 
     * // Get first 10 Permisos
     * const permisos = await prisma.permisos.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const permisosWithIdOnly = await prisma.permisos.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends permisosFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, permisosFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$permisosPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Permisos.
     * @param {permisosCreateArgs} args - Arguments to create a Permisos.
     * @example
     * // Create one Permisos
     * const Permisos = await prisma.permisos.create({
     *   data: {
     *     // ... data to create a Permisos
     *   }
     * })
     * 
    **/
    create<T extends permisosCreateArgs<ExtArgs>>(
      args: SelectSubset<T, permisosCreateArgs<ExtArgs>>
    ): Prisma__permisosClient<$Result.GetResult<Prisma.$permisosPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Permisos.
     *     @param {permisosCreateManyArgs} args - Arguments to create many Permisos.
     *     @example
     *     // Create many Permisos
     *     const permisos = await prisma.permisos.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends permisosCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, permisosCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Permisos.
     * @param {permisosDeleteArgs} args - Arguments to delete one Permisos.
     * @example
     * // Delete one Permisos
     * const Permisos = await prisma.permisos.delete({
     *   where: {
     *     // ... filter to delete one Permisos
     *   }
     * })
     * 
    **/
    delete<T extends permisosDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, permisosDeleteArgs<ExtArgs>>
    ): Prisma__permisosClient<$Result.GetResult<Prisma.$permisosPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Permisos.
     * @param {permisosUpdateArgs} args - Arguments to update one Permisos.
     * @example
     * // Update one Permisos
     * const permisos = await prisma.permisos.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends permisosUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, permisosUpdateArgs<ExtArgs>>
    ): Prisma__permisosClient<$Result.GetResult<Prisma.$permisosPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Permisos.
     * @param {permisosDeleteManyArgs} args - Arguments to filter Permisos to delete.
     * @example
     * // Delete a few Permisos
     * const { count } = await prisma.permisos.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends permisosDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, permisosDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Permisos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {permisosUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Permisos
     * const permisos = await prisma.permisos.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends permisosUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, permisosUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Permisos.
     * @param {permisosUpsertArgs} args - Arguments to update or create a Permisos.
     * @example
     * // Update or create a Permisos
     * const permisos = await prisma.permisos.upsert({
     *   create: {
     *     // ... data to create a Permisos
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Permisos we want to update
     *   }
     * })
    **/
    upsert<T extends permisosUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, permisosUpsertArgs<ExtArgs>>
    ): Prisma__permisosClient<$Result.GetResult<Prisma.$permisosPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Permisos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {permisosCountArgs} args - Arguments to filter Permisos to count.
     * @example
     * // Count the number of Permisos
     * const count = await prisma.permisos.count({
     *   where: {
     *     // ... the filter for the Permisos we want to count
     *   }
     * })
    **/
    count<T extends permisosCountArgs>(
      args?: Subset<T, permisosCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PermisosCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Permisos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PermisosAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PermisosAggregateArgs>(args: Subset<T, PermisosAggregateArgs>): Prisma.PrismaPromise<GetPermisosAggregateType<T>>

    /**
     * Group by Permisos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {permisosGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends permisosGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: permisosGroupByArgs['orderBy'] }
        : { orderBy?: permisosGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, permisosGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPermisosGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the permisos model
   */
  readonly fields: permisosFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for permisos.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__permisosClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';


    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the permisos model
   */ 
  interface permisosFieldRefs {
    readonly id: FieldRef<"permisos", 'Int'>
    readonly nombre: FieldRef<"permisos", 'String'>
    readonly descripcion: FieldRef<"permisos", 'String'>
    readonly link: FieldRef<"permisos", 'String'>
    readonly creado_por: FieldRef<"permisos", 'Int'>
    readonly created_at: FieldRef<"permisos", 'DateTime'>
    readonly update_at: FieldRef<"permisos", 'DateTime'>
  }
    

  // Custom InputTypes

  /**
   * permisos findUnique
   */
  export type permisosFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the permisos
     */
    select?: permisosSelect<ExtArgs> | null
    /**
     * Filter, which permisos to fetch.
     */
    where: permisosWhereUniqueInput
  }


  /**
   * permisos findUniqueOrThrow
   */
  export type permisosFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the permisos
     */
    select?: permisosSelect<ExtArgs> | null
    /**
     * Filter, which permisos to fetch.
     */
    where: permisosWhereUniqueInput
  }


  /**
   * permisos findFirst
   */
  export type permisosFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the permisos
     */
    select?: permisosSelect<ExtArgs> | null
    /**
     * Filter, which permisos to fetch.
     */
    where?: permisosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of permisos to fetch.
     */
    orderBy?: permisosOrderByWithRelationInput | permisosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for permisos.
     */
    cursor?: permisosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` permisos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` permisos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of permisos.
     */
    distinct?: PermisosScalarFieldEnum | PermisosScalarFieldEnum[]
  }


  /**
   * permisos findFirstOrThrow
   */
  export type permisosFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the permisos
     */
    select?: permisosSelect<ExtArgs> | null
    /**
     * Filter, which permisos to fetch.
     */
    where?: permisosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of permisos to fetch.
     */
    orderBy?: permisosOrderByWithRelationInput | permisosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for permisos.
     */
    cursor?: permisosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` permisos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` permisos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of permisos.
     */
    distinct?: PermisosScalarFieldEnum | PermisosScalarFieldEnum[]
  }


  /**
   * permisos findMany
   */
  export type permisosFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the permisos
     */
    select?: permisosSelect<ExtArgs> | null
    /**
     * Filter, which permisos to fetch.
     */
    where?: permisosWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of permisos to fetch.
     */
    orderBy?: permisosOrderByWithRelationInput | permisosOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing permisos.
     */
    cursor?: permisosWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` permisos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` permisos.
     */
    skip?: number
    distinct?: PermisosScalarFieldEnum | PermisosScalarFieldEnum[]
  }


  /**
   * permisos create
   */
  export type permisosCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the permisos
     */
    select?: permisosSelect<ExtArgs> | null
    /**
     * The data needed to create a permisos.
     */
    data: XOR<permisosCreateInput, permisosUncheckedCreateInput>
  }


  /**
   * permisos createMany
   */
  export type permisosCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many permisos.
     */
    data: permisosCreateManyInput | permisosCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * permisos update
   */
  export type permisosUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the permisos
     */
    select?: permisosSelect<ExtArgs> | null
    /**
     * The data needed to update a permisos.
     */
    data: XOR<permisosUpdateInput, permisosUncheckedUpdateInput>
    /**
     * Choose, which permisos to update.
     */
    where: permisosWhereUniqueInput
  }


  /**
   * permisos updateMany
   */
  export type permisosUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update permisos.
     */
    data: XOR<permisosUpdateManyMutationInput, permisosUncheckedUpdateManyInput>
    /**
     * Filter which permisos to update
     */
    where?: permisosWhereInput
  }


  /**
   * permisos upsert
   */
  export type permisosUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the permisos
     */
    select?: permisosSelect<ExtArgs> | null
    /**
     * The filter to search for the permisos to update in case it exists.
     */
    where: permisosWhereUniqueInput
    /**
     * In case the permisos found by the `where` argument doesn't exist, create a new permisos with this data.
     */
    create: XOR<permisosCreateInput, permisosUncheckedCreateInput>
    /**
     * In case the permisos was found with the provided `where` argument, update it with this data.
     */
    update: XOR<permisosUpdateInput, permisosUncheckedUpdateInput>
  }


  /**
   * permisos delete
   */
  export type permisosDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the permisos
     */
    select?: permisosSelect<ExtArgs> | null
    /**
     * Filter which permisos to delete.
     */
    where: permisosWhereUniqueInput
  }


  /**
   * permisos deleteMany
   */
  export type permisosDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which permisos to delete
     */
    where?: permisosWhereInput
  }


  /**
   * permisos without action
   */
  export type permisosDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the permisos
     */
    select?: permisosSelect<ExtArgs> | null
  }



  /**
   * Model tipo_actividad
   */

  export type AggregateTipo_actividad = {
    _count: Tipo_actividadCountAggregateOutputType | null
    _avg: Tipo_actividadAvgAggregateOutputType | null
    _sum: Tipo_actividadSumAggregateOutputType | null
    _min: Tipo_actividadMinAggregateOutputType | null
    _max: Tipo_actividadMaxAggregateOutputType | null
  }

  export type Tipo_actividadAvgAggregateOutputType = {
    id: number | null
    tipo_padre_id: number | null
    perfil_id: number | null
    creado_por: number | null
  }

  export type Tipo_actividadSumAggregateOutputType = {
    id: number | null
    tipo_padre_id: number | null
    perfil_id: number | null
    creado_por: number | null
  }

  export type Tipo_actividadMinAggregateOutputType = {
    id: number | null
    nombre: string | null
    tipo_padre_id: number | null
    perfil_id: number | null
    creado_por: number | null
    created_at: Date | null
    update_at: Date | null
  }

  export type Tipo_actividadMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
    tipo_padre_id: number | null
    perfil_id: number | null
    creado_por: number | null
    created_at: Date | null
    update_at: Date | null
  }

  export type Tipo_actividadCountAggregateOutputType = {
    id: number
    nombre: number
    tipo_padre_id: number
    perfil_id: number
    creado_por: number
    created_at: number
    update_at: number
    _all: number
  }


  export type Tipo_actividadAvgAggregateInputType = {
    id?: true
    tipo_padre_id?: true
    perfil_id?: true
    creado_por?: true
  }

  export type Tipo_actividadSumAggregateInputType = {
    id?: true
    tipo_padre_id?: true
    perfil_id?: true
    creado_por?: true
  }

  export type Tipo_actividadMinAggregateInputType = {
    id?: true
    nombre?: true
    tipo_padre_id?: true
    perfil_id?: true
    creado_por?: true
    created_at?: true
    update_at?: true
  }

  export type Tipo_actividadMaxAggregateInputType = {
    id?: true
    nombre?: true
    tipo_padre_id?: true
    perfil_id?: true
    creado_por?: true
    created_at?: true
    update_at?: true
  }

  export type Tipo_actividadCountAggregateInputType = {
    id?: true
    nombre?: true
    tipo_padre_id?: true
    perfil_id?: true
    creado_por?: true
    created_at?: true
    update_at?: true
    _all?: true
  }

  export type Tipo_actividadAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tipo_actividad to aggregate.
     */
    where?: tipo_actividadWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tipo_actividads to fetch.
     */
    orderBy?: tipo_actividadOrderByWithRelationInput | tipo_actividadOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tipo_actividadWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tipo_actividads from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tipo_actividads.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tipo_actividads
    **/
    _count?: true | Tipo_actividadCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Tipo_actividadAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Tipo_actividadSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Tipo_actividadMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Tipo_actividadMaxAggregateInputType
  }

  export type GetTipo_actividadAggregateType<T extends Tipo_actividadAggregateArgs> = {
        [P in keyof T & keyof AggregateTipo_actividad]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTipo_actividad[P]>
      : GetScalarType<T[P], AggregateTipo_actividad[P]>
  }




  export type tipo_actividadGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tipo_actividadWhereInput
    orderBy?: tipo_actividadOrderByWithAggregationInput | tipo_actividadOrderByWithAggregationInput[]
    by: Tipo_actividadScalarFieldEnum[] | Tipo_actividadScalarFieldEnum
    having?: tipo_actividadScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Tipo_actividadCountAggregateInputType | true
    _avg?: Tipo_actividadAvgAggregateInputType
    _sum?: Tipo_actividadSumAggregateInputType
    _min?: Tipo_actividadMinAggregateInputType
    _max?: Tipo_actividadMaxAggregateInputType
  }

  export type Tipo_actividadGroupByOutputType = {
    id: number
    nombre: string
    tipo_padre_id: number | null
    perfil_id: number | null
    creado_por: number | null
    created_at: Date | null
    update_at: Date | null
    _count: Tipo_actividadCountAggregateOutputType | null
    _avg: Tipo_actividadAvgAggregateOutputType | null
    _sum: Tipo_actividadSumAggregateOutputType | null
    _min: Tipo_actividadMinAggregateOutputType | null
    _max: Tipo_actividadMaxAggregateOutputType | null
  }

  type GetTipo_actividadGroupByPayload<T extends tipo_actividadGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Tipo_actividadGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Tipo_actividadGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Tipo_actividadGroupByOutputType[P]>
            : GetScalarType<T[P], Tipo_actividadGroupByOutputType[P]>
        }
      >
    >


  export type tipo_actividadSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    tipo_padre_id?: boolean
    perfil_id?: boolean
    creado_por?: boolean
    created_at?: boolean
    update_at?: boolean
  }, ExtArgs["result"]["tipo_actividad"]>

  export type tipo_actividadSelectScalar = {
    id?: boolean
    nombre?: boolean
    tipo_padre_id?: boolean
    perfil_id?: boolean
    creado_por?: boolean
    created_at?: boolean
    update_at?: boolean
  }


  export type $tipo_actividadPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tipo_actividad"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string
      tipo_padre_id: number | null
      perfil_id: number | null
      creado_por: number | null
      created_at: Date | null
      update_at: Date | null
    }, ExtArgs["result"]["tipo_actividad"]>
    composites: {}
  }


  type tipo_actividadGetPayload<S extends boolean | null | undefined | tipo_actividadDefaultArgs> = $Result.GetResult<Prisma.$tipo_actividadPayload, S>

  type tipo_actividadCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<tipo_actividadFindManyArgs, 'select' | 'include' | 'distinct' > & {
      select?: Tipo_actividadCountAggregateInputType | true
    }

  export interface tipo_actividadDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tipo_actividad'], meta: { name: 'tipo_actividad' } }
    /**
     * Find zero or one Tipo_actividad that matches the filter.
     * @param {tipo_actividadFindUniqueArgs} args - Arguments to find a Tipo_actividad
     * @example
     * // Get one Tipo_actividad
     * const tipo_actividad = await prisma.tipo_actividad.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends tipo_actividadFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, tipo_actividadFindUniqueArgs<ExtArgs>>
    ): Prisma__tipo_actividadClient<$Result.GetResult<Prisma.$tipo_actividadPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Tipo_actividad that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {tipo_actividadFindUniqueOrThrowArgs} args - Arguments to find a Tipo_actividad
     * @example
     * // Get one Tipo_actividad
     * const tipo_actividad = await prisma.tipo_actividad.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends tipo_actividadFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tipo_actividadFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__tipo_actividadClient<$Result.GetResult<Prisma.$tipo_actividadPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Tipo_actividad that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipo_actividadFindFirstArgs} args - Arguments to find a Tipo_actividad
     * @example
     * // Get one Tipo_actividad
     * const tipo_actividad = await prisma.tipo_actividad.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends tipo_actividadFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, tipo_actividadFindFirstArgs<ExtArgs>>
    ): Prisma__tipo_actividadClient<$Result.GetResult<Prisma.$tipo_actividadPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Tipo_actividad that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipo_actividadFindFirstOrThrowArgs} args - Arguments to find a Tipo_actividad
     * @example
     * // Get one Tipo_actividad
     * const tipo_actividad = await prisma.tipo_actividad.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends tipo_actividadFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tipo_actividadFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__tipo_actividadClient<$Result.GetResult<Prisma.$tipo_actividadPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Tipo_actividads that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipo_actividadFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tipo_actividads
     * const tipo_actividads = await prisma.tipo_actividad.findMany()
     * 
     * // Get first 10 Tipo_actividads
     * const tipo_actividads = await prisma.tipo_actividad.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tipo_actividadWithIdOnly = await prisma.tipo_actividad.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends tipo_actividadFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tipo_actividadFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tipo_actividadPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Tipo_actividad.
     * @param {tipo_actividadCreateArgs} args - Arguments to create a Tipo_actividad.
     * @example
     * // Create one Tipo_actividad
     * const Tipo_actividad = await prisma.tipo_actividad.create({
     *   data: {
     *     // ... data to create a Tipo_actividad
     *   }
     * })
     * 
    **/
    create<T extends tipo_actividadCreateArgs<ExtArgs>>(
      args: SelectSubset<T, tipo_actividadCreateArgs<ExtArgs>>
    ): Prisma__tipo_actividadClient<$Result.GetResult<Prisma.$tipo_actividadPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Tipo_actividads.
     *     @param {tipo_actividadCreateManyArgs} args - Arguments to create many Tipo_actividads.
     *     @example
     *     // Create many Tipo_actividads
     *     const tipo_actividad = await prisma.tipo_actividad.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends tipo_actividadCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tipo_actividadCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tipo_actividad.
     * @param {tipo_actividadDeleteArgs} args - Arguments to delete one Tipo_actividad.
     * @example
     * // Delete one Tipo_actividad
     * const Tipo_actividad = await prisma.tipo_actividad.delete({
     *   where: {
     *     // ... filter to delete one Tipo_actividad
     *   }
     * })
     * 
    **/
    delete<T extends tipo_actividadDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, tipo_actividadDeleteArgs<ExtArgs>>
    ): Prisma__tipo_actividadClient<$Result.GetResult<Prisma.$tipo_actividadPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Tipo_actividad.
     * @param {tipo_actividadUpdateArgs} args - Arguments to update one Tipo_actividad.
     * @example
     * // Update one Tipo_actividad
     * const tipo_actividad = await prisma.tipo_actividad.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends tipo_actividadUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, tipo_actividadUpdateArgs<ExtArgs>>
    ): Prisma__tipo_actividadClient<$Result.GetResult<Prisma.$tipo_actividadPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Tipo_actividads.
     * @param {tipo_actividadDeleteManyArgs} args - Arguments to filter Tipo_actividads to delete.
     * @example
     * // Delete a few Tipo_actividads
     * const { count } = await prisma.tipo_actividad.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends tipo_actividadDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tipo_actividadDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tipo_actividads.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipo_actividadUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tipo_actividads
     * const tipo_actividad = await prisma.tipo_actividad.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends tipo_actividadUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, tipo_actividadUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tipo_actividad.
     * @param {tipo_actividadUpsertArgs} args - Arguments to update or create a Tipo_actividad.
     * @example
     * // Update or create a Tipo_actividad
     * const tipo_actividad = await prisma.tipo_actividad.upsert({
     *   create: {
     *     // ... data to create a Tipo_actividad
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tipo_actividad we want to update
     *   }
     * })
    **/
    upsert<T extends tipo_actividadUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, tipo_actividadUpsertArgs<ExtArgs>>
    ): Prisma__tipo_actividadClient<$Result.GetResult<Prisma.$tipo_actividadPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Tipo_actividads.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipo_actividadCountArgs} args - Arguments to filter Tipo_actividads to count.
     * @example
     * // Count the number of Tipo_actividads
     * const count = await prisma.tipo_actividad.count({
     *   where: {
     *     // ... the filter for the Tipo_actividads we want to count
     *   }
     * })
    **/
    count<T extends tipo_actividadCountArgs>(
      args?: Subset<T, tipo_actividadCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Tipo_actividadCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tipo_actividad.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tipo_actividadAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Tipo_actividadAggregateArgs>(args: Subset<T, Tipo_actividadAggregateArgs>): Prisma.PrismaPromise<GetTipo_actividadAggregateType<T>>

    /**
     * Group by Tipo_actividad.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipo_actividadGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tipo_actividadGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tipo_actividadGroupByArgs['orderBy'] }
        : { orderBy?: tipo_actividadGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tipo_actividadGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTipo_actividadGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tipo_actividad model
   */
  readonly fields: tipo_actividadFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tipo_actividad.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tipo_actividadClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';


    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the tipo_actividad model
   */ 
  interface tipo_actividadFieldRefs {
    readonly id: FieldRef<"tipo_actividad", 'Int'>
    readonly nombre: FieldRef<"tipo_actividad", 'String'>
    readonly tipo_padre_id: FieldRef<"tipo_actividad", 'Int'>
    readonly perfil_id: FieldRef<"tipo_actividad", 'Int'>
    readonly creado_por: FieldRef<"tipo_actividad", 'Int'>
    readonly created_at: FieldRef<"tipo_actividad", 'DateTime'>
    readonly update_at: FieldRef<"tipo_actividad", 'DateTime'>
  }
    

  // Custom InputTypes

  /**
   * tipo_actividad findUnique
   */
  export type tipo_actividadFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipo_actividad
     */
    select?: tipo_actividadSelect<ExtArgs> | null
    /**
     * Filter, which tipo_actividad to fetch.
     */
    where: tipo_actividadWhereUniqueInput
  }


  /**
   * tipo_actividad findUniqueOrThrow
   */
  export type tipo_actividadFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipo_actividad
     */
    select?: tipo_actividadSelect<ExtArgs> | null
    /**
     * Filter, which tipo_actividad to fetch.
     */
    where: tipo_actividadWhereUniqueInput
  }


  /**
   * tipo_actividad findFirst
   */
  export type tipo_actividadFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipo_actividad
     */
    select?: tipo_actividadSelect<ExtArgs> | null
    /**
     * Filter, which tipo_actividad to fetch.
     */
    where?: tipo_actividadWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tipo_actividads to fetch.
     */
    orderBy?: tipo_actividadOrderByWithRelationInput | tipo_actividadOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tipo_actividads.
     */
    cursor?: tipo_actividadWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tipo_actividads from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tipo_actividads.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tipo_actividads.
     */
    distinct?: Tipo_actividadScalarFieldEnum | Tipo_actividadScalarFieldEnum[]
  }


  /**
   * tipo_actividad findFirstOrThrow
   */
  export type tipo_actividadFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipo_actividad
     */
    select?: tipo_actividadSelect<ExtArgs> | null
    /**
     * Filter, which tipo_actividad to fetch.
     */
    where?: tipo_actividadWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tipo_actividads to fetch.
     */
    orderBy?: tipo_actividadOrderByWithRelationInput | tipo_actividadOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tipo_actividads.
     */
    cursor?: tipo_actividadWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tipo_actividads from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tipo_actividads.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tipo_actividads.
     */
    distinct?: Tipo_actividadScalarFieldEnum | Tipo_actividadScalarFieldEnum[]
  }


  /**
   * tipo_actividad findMany
   */
  export type tipo_actividadFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipo_actividad
     */
    select?: tipo_actividadSelect<ExtArgs> | null
    /**
     * Filter, which tipo_actividads to fetch.
     */
    where?: tipo_actividadWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tipo_actividads to fetch.
     */
    orderBy?: tipo_actividadOrderByWithRelationInput | tipo_actividadOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tipo_actividads.
     */
    cursor?: tipo_actividadWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tipo_actividads from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tipo_actividads.
     */
    skip?: number
    distinct?: Tipo_actividadScalarFieldEnum | Tipo_actividadScalarFieldEnum[]
  }


  /**
   * tipo_actividad create
   */
  export type tipo_actividadCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipo_actividad
     */
    select?: tipo_actividadSelect<ExtArgs> | null
    /**
     * The data needed to create a tipo_actividad.
     */
    data: XOR<tipo_actividadCreateInput, tipo_actividadUncheckedCreateInput>
  }


  /**
   * tipo_actividad createMany
   */
  export type tipo_actividadCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tipo_actividads.
     */
    data: tipo_actividadCreateManyInput | tipo_actividadCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * tipo_actividad update
   */
  export type tipo_actividadUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipo_actividad
     */
    select?: tipo_actividadSelect<ExtArgs> | null
    /**
     * The data needed to update a tipo_actividad.
     */
    data: XOR<tipo_actividadUpdateInput, tipo_actividadUncheckedUpdateInput>
    /**
     * Choose, which tipo_actividad to update.
     */
    where: tipo_actividadWhereUniqueInput
  }


  /**
   * tipo_actividad updateMany
   */
  export type tipo_actividadUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tipo_actividads.
     */
    data: XOR<tipo_actividadUpdateManyMutationInput, tipo_actividadUncheckedUpdateManyInput>
    /**
     * Filter which tipo_actividads to update
     */
    where?: tipo_actividadWhereInput
  }


  /**
   * tipo_actividad upsert
   */
  export type tipo_actividadUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipo_actividad
     */
    select?: tipo_actividadSelect<ExtArgs> | null
    /**
     * The filter to search for the tipo_actividad to update in case it exists.
     */
    where: tipo_actividadWhereUniqueInput
    /**
     * In case the tipo_actividad found by the `where` argument doesn't exist, create a new tipo_actividad with this data.
     */
    create: XOR<tipo_actividadCreateInput, tipo_actividadUncheckedCreateInput>
    /**
     * In case the tipo_actividad was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tipo_actividadUpdateInput, tipo_actividadUncheckedUpdateInput>
  }


  /**
   * tipo_actividad delete
   */
  export type tipo_actividadDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipo_actividad
     */
    select?: tipo_actividadSelect<ExtArgs> | null
    /**
     * Filter which tipo_actividad to delete.
     */
    where: tipo_actividadWhereUniqueInput
  }


  /**
   * tipo_actividad deleteMany
   */
  export type tipo_actividadDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tipo_actividads to delete
     */
    where?: tipo_actividadWhereInput
  }


  /**
   * tipo_actividad without action
   */
  export type tipo_actividadDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipo_actividad
     */
    select?: tipo_actividadSelect<ExtArgs> | null
  }



  /**
   * Model tipo_productora
   */

  export type AggregateTipo_productora = {
    _count: Tipo_productoraCountAggregateOutputType | null
    _avg: Tipo_productoraAvgAggregateOutputType | null
    _sum: Tipo_productoraSumAggregateOutputType | null
    _min: Tipo_productoraMinAggregateOutputType | null
    _max: Tipo_productoraMaxAggregateOutputType | null
  }

  export type Tipo_productoraAvgAggregateOutputType = {
    id: number | null
    tipo_padre_id: number | null
    perfil_id: number | null
    creado_por: number | null
  }

  export type Tipo_productoraSumAggregateOutputType = {
    id: number | null
    tipo_padre_id: number | null
    perfil_id: number | null
    creado_por: number | null
  }

  export type Tipo_productoraMinAggregateOutputType = {
    id: number | null
    nombre: string | null
    tipo_padre_id: number | null
    perfil_id: number | null
    creado_por: number | null
    created_at: Date | null
    update_at: Date | null
  }

  export type Tipo_productoraMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
    tipo_padre_id: number | null
    perfil_id: number | null
    creado_por: number | null
    created_at: Date | null
    update_at: Date | null
  }

  export type Tipo_productoraCountAggregateOutputType = {
    id: number
    nombre: number
    tipo_padre_id: number
    perfil_id: number
    creado_por: number
    created_at: number
    update_at: number
    _all: number
  }


  export type Tipo_productoraAvgAggregateInputType = {
    id?: true
    tipo_padre_id?: true
    perfil_id?: true
    creado_por?: true
  }

  export type Tipo_productoraSumAggregateInputType = {
    id?: true
    tipo_padre_id?: true
    perfil_id?: true
    creado_por?: true
  }

  export type Tipo_productoraMinAggregateInputType = {
    id?: true
    nombre?: true
    tipo_padre_id?: true
    perfil_id?: true
    creado_por?: true
    created_at?: true
    update_at?: true
  }

  export type Tipo_productoraMaxAggregateInputType = {
    id?: true
    nombre?: true
    tipo_padre_id?: true
    perfil_id?: true
    creado_por?: true
    created_at?: true
    update_at?: true
  }

  export type Tipo_productoraCountAggregateInputType = {
    id?: true
    nombre?: true
    tipo_padre_id?: true
    perfil_id?: true
    creado_por?: true
    created_at?: true
    update_at?: true
    _all?: true
  }

  export type Tipo_productoraAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tipo_productora to aggregate.
     */
    where?: tipo_productoraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tipo_productoras to fetch.
     */
    orderBy?: tipo_productoraOrderByWithRelationInput | tipo_productoraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tipo_productoraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tipo_productoras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tipo_productoras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tipo_productoras
    **/
    _count?: true | Tipo_productoraCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Tipo_productoraAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Tipo_productoraSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Tipo_productoraMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Tipo_productoraMaxAggregateInputType
  }

  export type GetTipo_productoraAggregateType<T extends Tipo_productoraAggregateArgs> = {
        [P in keyof T & keyof AggregateTipo_productora]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTipo_productora[P]>
      : GetScalarType<T[P], AggregateTipo_productora[P]>
  }




  export type tipo_productoraGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tipo_productoraWhereInput
    orderBy?: tipo_productoraOrderByWithAggregationInput | tipo_productoraOrderByWithAggregationInput[]
    by: Tipo_productoraScalarFieldEnum[] | Tipo_productoraScalarFieldEnum
    having?: tipo_productoraScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Tipo_productoraCountAggregateInputType | true
    _avg?: Tipo_productoraAvgAggregateInputType
    _sum?: Tipo_productoraSumAggregateInputType
    _min?: Tipo_productoraMinAggregateInputType
    _max?: Tipo_productoraMaxAggregateInputType
  }

  export type Tipo_productoraGroupByOutputType = {
    id: number
    nombre: string
    tipo_padre_id: number | null
    perfil_id: number | null
    creado_por: number | null
    created_at: Date | null
    update_at: Date | null
    _count: Tipo_productoraCountAggregateOutputType | null
    _avg: Tipo_productoraAvgAggregateOutputType | null
    _sum: Tipo_productoraSumAggregateOutputType | null
    _min: Tipo_productoraMinAggregateOutputType | null
    _max: Tipo_productoraMaxAggregateOutputType | null
  }

  type GetTipo_productoraGroupByPayload<T extends tipo_productoraGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Tipo_productoraGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Tipo_productoraGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Tipo_productoraGroupByOutputType[P]>
            : GetScalarType<T[P], Tipo_productoraGroupByOutputType[P]>
        }
      >
    >


  export type tipo_productoraSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    tipo_padre_id?: boolean
    perfil_id?: boolean
    creado_por?: boolean
    created_at?: boolean
    update_at?: boolean
  }, ExtArgs["result"]["tipo_productora"]>

  export type tipo_productoraSelectScalar = {
    id?: boolean
    nombre?: boolean
    tipo_padre_id?: boolean
    perfil_id?: boolean
    creado_por?: boolean
    created_at?: boolean
    update_at?: boolean
  }


  export type $tipo_productoraPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tipo_productora"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string
      tipo_padre_id: number | null
      perfil_id: number | null
      creado_por: number | null
      created_at: Date | null
      update_at: Date | null
    }, ExtArgs["result"]["tipo_productora"]>
    composites: {}
  }


  type tipo_productoraGetPayload<S extends boolean | null | undefined | tipo_productoraDefaultArgs> = $Result.GetResult<Prisma.$tipo_productoraPayload, S>

  type tipo_productoraCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<tipo_productoraFindManyArgs, 'select' | 'include' | 'distinct' > & {
      select?: Tipo_productoraCountAggregateInputType | true
    }

  export interface tipo_productoraDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tipo_productora'], meta: { name: 'tipo_productora' } }
    /**
     * Find zero or one Tipo_productora that matches the filter.
     * @param {tipo_productoraFindUniqueArgs} args - Arguments to find a Tipo_productora
     * @example
     * // Get one Tipo_productora
     * const tipo_productora = await prisma.tipo_productora.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends tipo_productoraFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, tipo_productoraFindUniqueArgs<ExtArgs>>
    ): Prisma__tipo_productoraClient<$Result.GetResult<Prisma.$tipo_productoraPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Tipo_productora that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {tipo_productoraFindUniqueOrThrowArgs} args - Arguments to find a Tipo_productora
     * @example
     * // Get one Tipo_productora
     * const tipo_productora = await prisma.tipo_productora.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends tipo_productoraFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tipo_productoraFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__tipo_productoraClient<$Result.GetResult<Prisma.$tipo_productoraPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Tipo_productora that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipo_productoraFindFirstArgs} args - Arguments to find a Tipo_productora
     * @example
     * // Get one Tipo_productora
     * const tipo_productora = await prisma.tipo_productora.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends tipo_productoraFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, tipo_productoraFindFirstArgs<ExtArgs>>
    ): Prisma__tipo_productoraClient<$Result.GetResult<Prisma.$tipo_productoraPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Tipo_productora that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipo_productoraFindFirstOrThrowArgs} args - Arguments to find a Tipo_productora
     * @example
     * // Get one Tipo_productora
     * const tipo_productora = await prisma.tipo_productora.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends tipo_productoraFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tipo_productoraFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__tipo_productoraClient<$Result.GetResult<Prisma.$tipo_productoraPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Tipo_productoras that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipo_productoraFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tipo_productoras
     * const tipo_productoras = await prisma.tipo_productora.findMany()
     * 
     * // Get first 10 Tipo_productoras
     * const tipo_productoras = await prisma.tipo_productora.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tipo_productoraWithIdOnly = await prisma.tipo_productora.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends tipo_productoraFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tipo_productoraFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tipo_productoraPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Tipo_productora.
     * @param {tipo_productoraCreateArgs} args - Arguments to create a Tipo_productora.
     * @example
     * // Create one Tipo_productora
     * const Tipo_productora = await prisma.tipo_productora.create({
     *   data: {
     *     // ... data to create a Tipo_productora
     *   }
     * })
     * 
    **/
    create<T extends tipo_productoraCreateArgs<ExtArgs>>(
      args: SelectSubset<T, tipo_productoraCreateArgs<ExtArgs>>
    ): Prisma__tipo_productoraClient<$Result.GetResult<Prisma.$tipo_productoraPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Tipo_productoras.
     *     @param {tipo_productoraCreateManyArgs} args - Arguments to create many Tipo_productoras.
     *     @example
     *     // Create many Tipo_productoras
     *     const tipo_productora = await prisma.tipo_productora.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends tipo_productoraCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tipo_productoraCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tipo_productora.
     * @param {tipo_productoraDeleteArgs} args - Arguments to delete one Tipo_productora.
     * @example
     * // Delete one Tipo_productora
     * const Tipo_productora = await prisma.tipo_productora.delete({
     *   where: {
     *     // ... filter to delete one Tipo_productora
     *   }
     * })
     * 
    **/
    delete<T extends tipo_productoraDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, tipo_productoraDeleteArgs<ExtArgs>>
    ): Prisma__tipo_productoraClient<$Result.GetResult<Prisma.$tipo_productoraPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Tipo_productora.
     * @param {tipo_productoraUpdateArgs} args - Arguments to update one Tipo_productora.
     * @example
     * // Update one Tipo_productora
     * const tipo_productora = await prisma.tipo_productora.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends tipo_productoraUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, tipo_productoraUpdateArgs<ExtArgs>>
    ): Prisma__tipo_productoraClient<$Result.GetResult<Prisma.$tipo_productoraPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Tipo_productoras.
     * @param {tipo_productoraDeleteManyArgs} args - Arguments to filter Tipo_productoras to delete.
     * @example
     * // Delete a few Tipo_productoras
     * const { count } = await prisma.tipo_productora.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends tipo_productoraDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tipo_productoraDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tipo_productoras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipo_productoraUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tipo_productoras
     * const tipo_productora = await prisma.tipo_productora.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends tipo_productoraUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, tipo_productoraUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tipo_productora.
     * @param {tipo_productoraUpsertArgs} args - Arguments to update or create a Tipo_productora.
     * @example
     * // Update or create a Tipo_productora
     * const tipo_productora = await prisma.tipo_productora.upsert({
     *   create: {
     *     // ... data to create a Tipo_productora
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tipo_productora we want to update
     *   }
     * })
    **/
    upsert<T extends tipo_productoraUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, tipo_productoraUpsertArgs<ExtArgs>>
    ): Prisma__tipo_productoraClient<$Result.GetResult<Prisma.$tipo_productoraPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Tipo_productoras.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipo_productoraCountArgs} args - Arguments to filter Tipo_productoras to count.
     * @example
     * // Count the number of Tipo_productoras
     * const count = await prisma.tipo_productora.count({
     *   where: {
     *     // ... the filter for the Tipo_productoras we want to count
     *   }
     * })
    **/
    count<T extends tipo_productoraCountArgs>(
      args?: Subset<T, tipo_productoraCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Tipo_productoraCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tipo_productora.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tipo_productoraAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Tipo_productoraAggregateArgs>(args: Subset<T, Tipo_productoraAggregateArgs>): Prisma.PrismaPromise<GetTipo_productoraAggregateType<T>>

    /**
     * Group by Tipo_productora.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipo_productoraGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tipo_productoraGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tipo_productoraGroupByArgs['orderBy'] }
        : { orderBy?: tipo_productoraGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tipo_productoraGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTipo_productoraGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tipo_productora model
   */
  readonly fields: tipo_productoraFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tipo_productora.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tipo_productoraClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';


    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the tipo_productora model
   */ 
  interface tipo_productoraFieldRefs {
    readonly id: FieldRef<"tipo_productora", 'Int'>
    readonly nombre: FieldRef<"tipo_productora", 'String'>
    readonly tipo_padre_id: FieldRef<"tipo_productora", 'Int'>
    readonly perfil_id: FieldRef<"tipo_productora", 'Int'>
    readonly creado_por: FieldRef<"tipo_productora", 'Int'>
    readonly created_at: FieldRef<"tipo_productora", 'DateTime'>
    readonly update_at: FieldRef<"tipo_productora", 'DateTime'>
  }
    

  // Custom InputTypes

  /**
   * tipo_productora findUnique
   */
  export type tipo_productoraFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipo_productora
     */
    select?: tipo_productoraSelect<ExtArgs> | null
    /**
     * Filter, which tipo_productora to fetch.
     */
    where: tipo_productoraWhereUniqueInput
  }


  /**
   * tipo_productora findUniqueOrThrow
   */
  export type tipo_productoraFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipo_productora
     */
    select?: tipo_productoraSelect<ExtArgs> | null
    /**
     * Filter, which tipo_productora to fetch.
     */
    where: tipo_productoraWhereUniqueInput
  }


  /**
   * tipo_productora findFirst
   */
  export type tipo_productoraFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipo_productora
     */
    select?: tipo_productoraSelect<ExtArgs> | null
    /**
     * Filter, which tipo_productora to fetch.
     */
    where?: tipo_productoraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tipo_productoras to fetch.
     */
    orderBy?: tipo_productoraOrderByWithRelationInput | tipo_productoraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tipo_productoras.
     */
    cursor?: tipo_productoraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tipo_productoras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tipo_productoras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tipo_productoras.
     */
    distinct?: Tipo_productoraScalarFieldEnum | Tipo_productoraScalarFieldEnum[]
  }


  /**
   * tipo_productora findFirstOrThrow
   */
  export type tipo_productoraFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipo_productora
     */
    select?: tipo_productoraSelect<ExtArgs> | null
    /**
     * Filter, which tipo_productora to fetch.
     */
    where?: tipo_productoraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tipo_productoras to fetch.
     */
    orderBy?: tipo_productoraOrderByWithRelationInput | tipo_productoraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tipo_productoras.
     */
    cursor?: tipo_productoraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tipo_productoras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tipo_productoras.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tipo_productoras.
     */
    distinct?: Tipo_productoraScalarFieldEnum | Tipo_productoraScalarFieldEnum[]
  }


  /**
   * tipo_productora findMany
   */
  export type tipo_productoraFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipo_productora
     */
    select?: tipo_productoraSelect<ExtArgs> | null
    /**
     * Filter, which tipo_productoras to fetch.
     */
    where?: tipo_productoraWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tipo_productoras to fetch.
     */
    orderBy?: tipo_productoraOrderByWithRelationInput | tipo_productoraOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tipo_productoras.
     */
    cursor?: tipo_productoraWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tipo_productoras from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tipo_productoras.
     */
    skip?: number
    distinct?: Tipo_productoraScalarFieldEnum | Tipo_productoraScalarFieldEnum[]
  }


  /**
   * tipo_productora create
   */
  export type tipo_productoraCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipo_productora
     */
    select?: tipo_productoraSelect<ExtArgs> | null
    /**
     * The data needed to create a tipo_productora.
     */
    data: XOR<tipo_productoraCreateInput, tipo_productoraUncheckedCreateInput>
  }


  /**
   * tipo_productora createMany
   */
  export type tipo_productoraCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tipo_productoras.
     */
    data: tipo_productoraCreateManyInput | tipo_productoraCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * tipo_productora update
   */
  export type tipo_productoraUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipo_productora
     */
    select?: tipo_productoraSelect<ExtArgs> | null
    /**
     * The data needed to update a tipo_productora.
     */
    data: XOR<tipo_productoraUpdateInput, tipo_productoraUncheckedUpdateInput>
    /**
     * Choose, which tipo_productora to update.
     */
    where: tipo_productoraWhereUniqueInput
  }


  /**
   * tipo_productora updateMany
   */
  export type tipo_productoraUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tipo_productoras.
     */
    data: XOR<tipo_productoraUpdateManyMutationInput, tipo_productoraUncheckedUpdateManyInput>
    /**
     * Filter which tipo_productoras to update
     */
    where?: tipo_productoraWhereInput
  }


  /**
   * tipo_productora upsert
   */
  export type tipo_productoraUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipo_productora
     */
    select?: tipo_productoraSelect<ExtArgs> | null
    /**
     * The filter to search for the tipo_productora to update in case it exists.
     */
    where: tipo_productoraWhereUniqueInput
    /**
     * In case the tipo_productora found by the `where` argument doesn't exist, create a new tipo_productora with this data.
     */
    create: XOR<tipo_productoraCreateInput, tipo_productoraUncheckedCreateInput>
    /**
     * In case the tipo_productora was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tipo_productoraUpdateInput, tipo_productoraUncheckedUpdateInput>
  }


  /**
   * tipo_productora delete
   */
  export type tipo_productoraDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipo_productora
     */
    select?: tipo_productoraSelect<ExtArgs> | null
    /**
     * Filter which tipo_productora to delete.
     */
    where: tipo_productoraWhereUniqueInput
  }


  /**
   * tipo_productora deleteMany
   */
  export type tipo_productoraDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tipo_productoras to delete
     */
    where?: tipo_productoraWhereInput
  }


  /**
   * tipo_productora without action
   */
  export type tipo_productoraDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipo_productora
     */
    select?: tipo_productoraSelect<ExtArgs> | null
  }



  /**
   * Model tipo_servicio
   */

  export type AggregateTipo_servicio = {
    _count: Tipo_servicioCountAggregateOutputType | null
    _avg: Tipo_servicioAvgAggregateOutputType | null
    _sum: Tipo_servicioSumAggregateOutputType | null
    _min: Tipo_servicioMinAggregateOutputType | null
    _max: Tipo_servicioMaxAggregateOutputType | null
  }

  export type Tipo_servicioAvgAggregateOutputType = {
    id: number | null
    tipo_padre_id: number | null
    perfil_id: number | null
    creado_por: number | null
  }

  export type Tipo_servicioSumAggregateOutputType = {
    id: number | null
    tipo_padre_id: number | null
    perfil_id: number | null
    creado_por: number | null
  }

  export type Tipo_servicioMinAggregateOutputType = {
    id: number | null
    nombre: string | null
    tipo_padre_id: number | null
    perfil_id: number | null
    creado_por: number | null
    created_at: Date | null
    update_at: Date | null
  }

  export type Tipo_servicioMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
    tipo_padre_id: number | null
    perfil_id: number | null
    creado_por: number | null
    created_at: Date | null
    update_at: Date | null
  }

  export type Tipo_servicioCountAggregateOutputType = {
    id: number
    nombre: number
    tipo_padre_id: number
    perfil_id: number
    creado_por: number
    created_at: number
    update_at: number
    _all: number
  }


  export type Tipo_servicioAvgAggregateInputType = {
    id?: true
    tipo_padre_id?: true
    perfil_id?: true
    creado_por?: true
  }

  export type Tipo_servicioSumAggregateInputType = {
    id?: true
    tipo_padre_id?: true
    perfil_id?: true
    creado_por?: true
  }

  export type Tipo_servicioMinAggregateInputType = {
    id?: true
    nombre?: true
    tipo_padre_id?: true
    perfil_id?: true
    creado_por?: true
    created_at?: true
    update_at?: true
  }

  export type Tipo_servicioMaxAggregateInputType = {
    id?: true
    nombre?: true
    tipo_padre_id?: true
    perfil_id?: true
    creado_por?: true
    created_at?: true
    update_at?: true
  }

  export type Tipo_servicioCountAggregateInputType = {
    id?: true
    nombre?: true
    tipo_padre_id?: true
    perfil_id?: true
    creado_por?: true
    created_at?: true
    update_at?: true
    _all?: true
  }

  export type Tipo_servicioAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tipo_servicio to aggregate.
     */
    where?: tipo_servicioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tipo_servicios to fetch.
     */
    orderBy?: tipo_servicioOrderByWithRelationInput | tipo_servicioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tipo_servicioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tipo_servicios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tipo_servicios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tipo_servicios
    **/
    _count?: true | Tipo_servicioCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Tipo_servicioAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Tipo_servicioSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Tipo_servicioMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Tipo_servicioMaxAggregateInputType
  }

  export type GetTipo_servicioAggregateType<T extends Tipo_servicioAggregateArgs> = {
        [P in keyof T & keyof AggregateTipo_servicio]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTipo_servicio[P]>
      : GetScalarType<T[P], AggregateTipo_servicio[P]>
  }




  export type tipo_servicioGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tipo_servicioWhereInput
    orderBy?: tipo_servicioOrderByWithAggregationInput | tipo_servicioOrderByWithAggregationInput[]
    by: Tipo_servicioScalarFieldEnum[] | Tipo_servicioScalarFieldEnum
    having?: tipo_servicioScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Tipo_servicioCountAggregateInputType | true
    _avg?: Tipo_servicioAvgAggregateInputType
    _sum?: Tipo_servicioSumAggregateInputType
    _min?: Tipo_servicioMinAggregateInputType
    _max?: Tipo_servicioMaxAggregateInputType
  }

  export type Tipo_servicioGroupByOutputType = {
    id: number
    nombre: string
    tipo_padre_id: number | null
    perfil_id: number | null
    creado_por: number | null
    created_at: Date | null
    update_at: Date | null
    _count: Tipo_servicioCountAggregateOutputType | null
    _avg: Tipo_servicioAvgAggregateOutputType | null
    _sum: Tipo_servicioSumAggregateOutputType | null
    _min: Tipo_servicioMinAggregateOutputType | null
    _max: Tipo_servicioMaxAggregateOutputType | null
  }

  type GetTipo_servicioGroupByPayload<T extends tipo_servicioGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Tipo_servicioGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Tipo_servicioGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Tipo_servicioGroupByOutputType[P]>
            : GetScalarType<T[P], Tipo_servicioGroupByOutputType[P]>
        }
      >
    >


  export type tipo_servicioSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    tipo_padre_id?: boolean
    perfil_id?: boolean
    creado_por?: boolean
    created_at?: boolean
    update_at?: boolean
  }, ExtArgs["result"]["tipo_servicio"]>

  export type tipo_servicioSelectScalar = {
    id?: boolean
    nombre?: boolean
    tipo_padre_id?: boolean
    perfil_id?: boolean
    creado_por?: boolean
    created_at?: boolean
    update_at?: boolean
  }


  export type $tipo_servicioPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tipo_servicio"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string
      tipo_padre_id: number | null
      perfil_id: number | null
      creado_por: number | null
      created_at: Date | null
      update_at: Date | null
    }, ExtArgs["result"]["tipo_servicio"]>
    composites: {}
  }


  type tipo_servicioGetPayload<S extends boolean | null | undefined | tipo_servicioDefaultArgs> = $Result.GetResult<Prisma.$tipo_servicioPayload, S>

  type tipo_servicioCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<tipo_servicioFindManyArgs, 'select' | 'include' | 'distinct' > & {
      select?: Tipo_servicioCountAggregateInputType | true
    }

  export interface tipo_servicioDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tipo_servicio'], meta: { name: 'tipo_servicio' } }
    /**
     * Find zero or one Tipo_servicio that matches the filter.
     * @param {tipo_servicioFindUniqueArgs} args - Arguments to find a Tipo_servicio
     * @example
     * // Get one Tipo_servicio
     * const tipo_servicio = await prisma.tipo_servicio.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends tipo_servicioFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, tipo_servicioFindUniqueArgs<ExtArgs>>
    ): Prisma__tipo_servicioClient<$Result.GetResult<Prisma.$tipo_servicioPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Tipo_servicio that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {tipo_servicioFindUniqueOrThrowArgs} args - Arguments to find a Tipo_servicio
     * @example
     * // Get one Tipo_servicio
     * const tipo_servicio = await prisma.tipo_servicio.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends tipo_servicioFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tipo_servicioFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__tipo_servicioClient<$Result.GetResult<Prisma.$tipo_servicioPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Tipo_servicio that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipo_servicioFindFirstArgs} args - Arguments to find a Tipo_servicio
     * @example
     * // Get one Tipo_servicio
     * const tipo_servicio = await prisma.tipo_servicio.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends tipo_servicioFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, tipo_servicioFindFirstArgs<ExtArgs>>
    ): Prisma__tipo_servicioClient<$Result.GetResult<Prisma.$tipo_servicioPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Tipo_servicio that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipo_servicioFindFirstOrThrowArgs} args - Arguments to find a Tipo_servicio
     * @example
     * // Get one Tipo_servicio
     * const tipo_servicio = await prisma.tipo_servicio.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends tipo_servicioFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, tipo_servicioFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__tipo_servicioClient<$Result.GetResult<Prisma.$tipo_servicioPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Tipo_servicios that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipo_servicioFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tipo_servicios
     * const tipo_servicios = await prisma.tipo_servicio.findMany()
     * 
     * // Get first 10 Tipo_servicios
     * const tipo_servicios = await prisma.tipo_servicio.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tipo_servicioWithIdOnly = await prisma.tipo_servicio.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends tipo_servicioFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tipo_servicioFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tipo_servicioPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Tipo_servicio.
     * @param {tipo_servicioCreateArgs} args - Arguments to create a Tipo_servicio.
     * @example
     * // Create one Tipo_servicio
     * const Tipo_servicio = await prisma.tipo_servicio.create({
     *   data: {
     *     // ... data to create a Tipo_servicio
     *   }
     * })
     * 
    **/
    create<T extends tipo_servicioCreateArgs<ExtArgs>>(
      args: SelectSubset<T, tipo_servicioCreateArgs<ExtArgs>>
    ): Prisma__tipo_servicioClient<$Result.GetResult<Prisma.$tipo_servicioPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Tipo_servicios.
     *     @param {tipo_servicioCreateManyArgs} args - Arguments to create many Tipo_servicios.
     *     @example
     *     // Create many Tipo_servicios
     *     const tipo_servicio = await prisma.tipo_servicio.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends tipo_servicioCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tipo_servicioCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Tipo_servicio.
     * @param {tipo_servicioDeleteArgs} args - Arguments to delete one Tipo_servicio.
     * @example
     * // Delete one Tipo_servicio
     * const Tipo_servicio = await prisma.tipo_servicio.delete({
     *   where: {
     *     // ... filter to delete one Tipo_servicio
     *   }
     * })
     * 
    **/
    delete<T extends tipo_servicioDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, tipo_servicioDeleteArgs<ExtArgs>>
    ): Prisma__tipo_servicioClient<$Result.GetResult<Prisma.$tipo_servicioPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Tipo_servicio.
     * @param {tipo_servicioUpdateArgs} args - Arguments to update one Tipo_servicio.
     * @example
     * // Update one Tipo_servicio
     * const tipo_servicio = await prisma.tipo_servicio.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends tipo_servicioUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, tipo_servicioUpdateArgs<ExtArgs>>
    ): Prisma__tipo_servicioClient<$Result.GetResult<Prisma.$tipo_servicioPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Tipo_servicios.
     * @param {tipo_servicioDeleteManyArgs} args - Arguments to filter Tipo_servicios to delete.
     * @example
     * // Delete a few Tipo_servicios
     * const { count } = await prisma.tipo_servicio.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends tipo_servicioDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, tipo_servicioDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tipo_servicios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipo_servicioUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tipo_servicios
     * const tipo_servicio = await prisma.tipo_servicio.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends tipo_servicioUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, tipo_servicioUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Tipo_servicio.
     * @param {tipo_servicioUpsertArgs} args - Arguments to update or create a Tipo_servicio.
     * @example
     * // Update or create a Tipo_servicio
     * const tipo_servicio = await prisma.tipo_servicio.upsert({
     *   create: {
     *     // ... data to create a Tipo_servicio
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tipo_servicio we want to update
     *   }
     * })
    **/
    upsert<T extends tipo_servicioUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, tipo_servicioUpsertArgs<ExtArgs>>
    ): Prisma__tipo_servicioClient<$Result.GetResult<Prisma.$tipo_servicioPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Tipo_servicios.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipo_servicioCountArgs} args - Arguments to filter Tipo_servicios to count.
     * @example
     * // Count the number of Tipo_servicios
     * const count = await prisma.tipo_servicio.count({
     *   where: {
     *     // ... the filter for the Tipo_servicios we want to count
     *   }
     * })
    **/
    count<T extends tipo_servicioCountArgs>(
      args?: Subset<T, tipo_servicioCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Tipo_servicioCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tipo_servicio.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Tipo_servicioAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Tipo_servicioAggregateArgs>(args: Subset<T, Tipo_servicioAggregateArgs>): Prisma.PrismaPromise<GetTipo_servicioAggregateType<T>>

    /**
     * Group by Tipo_servicio.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tipo_servicioGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tipo_servicioGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tipo_servicioGroupByArgs['orderBy'] }
        : { orderBy?: tipo_servicioGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tipo_servicioGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTipo_servicioGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tipo_servicio model
   */
  readonly fields: tipo_servicioFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tipo_servicio.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tipo_servicioClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';


    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the tipo_servicio model
   */ 
  interface tipo_servicioFieldRefs {
    readonly id: FieldRef<"tipo_servicio", 'Int'>
    readonly nombre: FieldRef<"tipo_servicio", 'String'>
    readonly tipo_padre_id: FieldRef<"tipo_servicio", 'Int'>
    readonly perfil_id: FieldRef<"tipo_servicio", 'Int'>
    readonly creado_por: FieldRef<"tipo_servicio", 'Int'>
    readonly created_at: FieldRef<"tipo_servicio", 'DateTime'>
    readonly update_at: FieldRef<"tipo_servicio", 'DateTime'>
  }
    

  // Custom InputTypes

  /**
   * tipo_servicio findUnique
   */
  export type tipo_servicioFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipo_servicio
     */
    select?: tipo_servicioSelect<ExtArgs> | null
    /**
     * Filter, which tipo_servicio to fetch.
     */
    where: tipo_servicioWhereUniqueInput
  }


  /**
   * tipo_servicio findUniqueOrThrow
   */
  export type tipo_servicioFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipo_servicio
     */
    select?: tipo_servicioSelect<ExtArgs> | null
    /**
     * Filter, which tipo_servicio to fetch.
     */
    where: tipo_servicioWhereUniqueInput
  }


  /**
   * tipo_servicio findFirst
   */
  export type tipo_servicioFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipo_servicio
     */
    select?: tipo_servicioSelect<ExtArgs> | null
    /**
     * Filter, which tipo_servicio to fetch.
     */
    where?: tipo_servicioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tipo_servicios to fetch.
     */
    orderBy?: tipo_servicioOrderByWithRelationInput | tipo_servicioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tipo_servicios.
     */
    cursor?: tipo_servicioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tipo_servicios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tipo_servicios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tipo_servicios.
     */
    distinct?: Tipo_servicioScalarFieldEnum | Tipo_servicioScalarFieldEnum[]
  }


  /**
   * tipo_servicio findFirstOrThrow
   */
  export type tipo_servicioFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipo_servicio
     */
    select?: tipo_servicioSelect<ExtArgs> | null
    /**
     * Filter, which tipo_servicio to fetch.
     */
    where?: tipo_servicioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tipo_servicios to fetch.
     */
    orderBy?: tipo_servicioOrderByWithRelationInput | tipo_servicioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tipo_servicios.
     */
    cursor?: tipo_servicioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tipo_servicios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tipo_servicios.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tipo_servicios.
     */
    distinct?: Tipo_servicioScalarFieldEnum | Tipo_servicioScalarFieldEnum[]
  }


  /**
   * tipo_servicio findMany
   */
  export type tipo_servicioFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipo_servicio
     */
    select?: tipo_servicioSelect<ExtArgs> | null
    /**
     * Filter, which tipo_servicios to fetch.
     */
    where?: tipo_servicioWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tipo_servicios to fetch.
     */
    orderBy?: tipo_servicioOrderByWithRelationInput | tipo_servicioOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tipo_servicios.
     */
    cursor?: tipo_servicioWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tipo_servicios from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tipo_servicios.
     */
    skip?: number
    distinct?: Tipo_servicioScalarFieldEnum | Tipo_servicioScalarFieldEnum[]
  }


  /**
   * tipo_servicio create
   */
  export type tipo_servicioCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipo_servicio
     */
    select?: tipo_servicioSelect<ExtArgs> | null
    /**
     * The data needed to create a tipo_servicio.
     */
    data: XOR<tipo_servicioCreateInput, tipo_servicioUncheckedCreateInput>
  }


  /**
   * tipo_servicio createMany
   */
  export type tipo_servicioCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tipo_servicios.
     */
    data: tipo_servicioCreateManyInput | tipo_servicioCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * tipo_servicio update
   */
  export type tipo_servicioUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipo_servicio
     */
    select?: tipo_servicioSelect<ExtArgs> | null
    /**
     * The data needed to update a tipo_servicio.
     */
    data: XOR<tipo_servicioUpdateInput, tipo_servicioUncheckedUpdateInput>
    /**
     * Choose, which tipo_servicio to update.
     */
    where: tipo_servicioWhereUniqueInput
  }


  /**
   * tipo_servicio updateMany
   */
  export type tipo_servicioUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tipo_servicios.
     */
    data: XOR<tipo_servicioUpdateManyMutationInput, tipo_servicioUncheckedUpdateManyInput>
    /**
     * Filter which tipo_servicios to update
     */
    where?: tipo_servicioWhereInput
  }


  /**
   * tipo_servicio upsert
   */
  export type tipo_servicioUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipo_servicio
     */
    select?: tipo_servicioSelect<ExtArgs> | null
    /**
     * The filter to search for the tipo_servicio to update in case it exists.
     */
    where: tipo_servicioWhereUniqueInput
    /**
     * In case the tipo_servicio found by the `where` argument doesn't exist, create a new tipo_servicio with this data.
     */
    create: XOR<tipo_servicioCreateInput, tipo_servicioUncheckedCreateInput>
    /**
     * In case the tipo_servicio was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tipo_servicioUpdateInput, tipo_servicioUncheckedUpdateInput>
  }


  /**
   * tipo_servicio delete
   */
  export type tipo_servicioDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipo_servicio
     */
    select?: tipo_servicioSelect<ExtArgs> | null
    /**
     * Filter which tipo_servicio to delete.
     */
    where: tipo_servicioWhereUniqueInput
  }


  /**
   * tipo_servicio deleteMany
   */
  export type tipo_servicioDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tipo_servicios to delete
     */
    where?: tipo_servicioWhereInput
  }


  /**
   * tipo_servicio without action
   */
  export type tipo_servicioDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tipo_servicio
     */
    select?: tipo_servicioSelect<ExtArgs> | null
  }



  /**
   * Model user
   */

  export type AggregateUser = {
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  export type UserAvgAggregateOutputType = {
    id: number | null
  }

  export type UserSumAggregateOutputType = {
    id: number | null
  }

  export type UserMinAggregateOutputType = {
    id: number | null
    nombre: string | null
    apellido: string | null
    email: string | null
    password: string | null
    rol: $Enums.user_rol | null
    created_at: Date | null
    update_at: Date | null
  }

  export type UserMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
    apellido: string | null
    email: string | null
    password: string | null
    rol: $Enums.user_rol | null
    created_at: Date | null
    update_at: Date | null
  }

  export type UserCountAggregateOutputType = {
    id: number
    nombre: number
    apellido: number
    email: number
    password: number
    rol: number
    created_at: number
    update_at: number
    _all: number
  }


  export type UserAvgAggregateInputType = {
    id?: true
  }

  export type UserSumAggregateInputType = {
    id?: true
  }

  export type UserMinAggregateInputType = {
    id?: true
    nombre?: true
    apellido?: true
    email?: true
    password?: true
    rol?: true
    created_at?: true
    update_at?: true
  }

  export type UserMaxAggregateInputType = {
    id?: true
    nombre?: true
    apellido?: true
    email?: true
    password?: true
    rol?: true
    created_at?: true
    update_at?: true
  }

  export type UserCountAggregateInputType = {
    id?: true
    nombre?: true
    apellido?: true
    email?: true
    password?: true
    rol?: true
    created_at?: true
    update_at?: true
    _all?: true
  }

  export type UserAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user to aggregate.
     */
    where?: userWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: userOrderByWithRelationInput | userOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: userWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned users
    **/
    _count?: true | UserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UserAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UserSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserMaxAggregateInputType
  }

  export type GetUserAggregateType<T extends UserAggregateArgs> = {
        [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser[P]>
      : GetScalarType<T[P], AggregateUser[P]>
  }




  export type userGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: userWhereInput
    orderBy?: userOrderByWithAggregationInput | userOrderByWithAggregationInput[]
    by: UserScalarFieldEnum[] | UserScalarFieldEnum
    having?: userScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserCountAggregateInputType | true
    _avg?: UserAvgAggregateInputType
    _sum?: UserSumAggregateInputType
    _min?: UserMinAggregateInputType
    _max?: UserMaxAggregateInputType
  }

  export type UserGroupByOutputType = {
    id: number
    nombre: string
    apellido: string
    email: string
    password: string
    rol: $Enums.user_rol
    created_at: Date
    update_at: Date
    _count: UserCountAggregateOutputType | null
    _avg: UserAvgAggregateOutputType | null
    _sum: UserSumAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  type GetUserGroupByPayload<T extends userGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserGroupByOutputType[P]>
            : GetScalarType<T[P], UserGroupByOutputType[P]>
        }
      >
    >


  export type userSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    apellido?: boolean
    email?: boolean
    password?: boolean
    rol?: boolean
    created_at?: boolean
    update_at?: boolean
  }, ExtArgs["result"]["user"]>

  export type userSelectScalar = {
    id?: boolean
    nombre?: boolean
    apellido?: boolean
    email?: boolean
    password?: boolean
    rol?: boolean
    created_at?: boolean
    update_at?: boolean
  }


  export type $userPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "user"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string
      apellido: string
      email: string
      password: string
      rol: $Enums.user_rol
      created_at: Date
      update_at: Date
    }, ExtArgs["result"]["user"]>
    composites: {}
  }


  type userGetPayload<S extends boolean | null | undefined | userDefaultArgs> = $Result.GetResult<Prisma.$userPayload, S>

  type userCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<userFindManyArgs, 'select' | 'include' | 'distinct' > & {
      select?: UserCountAggregateInputType | true
    }

  export interface userDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['user'], meta: { name: 'user' } }
    /**
     * Find zero or one User that matches the filter.
     * @param {userFindUniqueArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends userFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, userFindUniqueArgs<ExtArgs>>
    ): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one User that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {userFindUniqueOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends userFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, userFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first User that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {userFindFirstArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends userFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, userFindFirstArgs<ExtArgs>>
    ): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first User that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {userFindFirstOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends userFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, userFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {userFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.user.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.user.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userWithIdOnly = await prisma.user.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends userFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, userFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a User.
     * @param {userCreateArgs} args - Arguments to create a User.
     * @example
     * // Create one User
     * const User = await prisma.user.create({
     *   data: {
     *     // ... data to create a User
     *   }
     * })
     * 
    **/
    create<T extends userCreateArgs<ExtArgs>>(
      args: SelectSubset<T, userCreateArgs<ExtArgs>>
    ): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Users.
     *     @param {userCreateManyArgs} args - Arguments to create many Users.
     *     @example
     *     // Create many Users
     *     const user = await prisma.user.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends userCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, userCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a User.
     * @param {userDeleteArgs} args - Arguments to delete one User.
     * @example
     * // Delete one User
     * const User = await prisma.user.delete({
     *   where: {
     *     // ... filter to delete one User
     *   }
     * })
     * 
    **/
    delete<T extends userDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, userDeleteArgs<ExtArgs>>
    ): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one User.
     * @param {userUpdateArgs} args - Arguments to update one User.
     * @example
     * // Update one User
     * const user = await prisma.user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends userUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, userUpdateArgs<ExtArgs>>
    ): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Users.
     * @param {userDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends userDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, userDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {userUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends userUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, userUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one User.
     * @param {userUpsertArgs} args - Arguments to update or create a User.
     * @example
     * // Update or create a User
     * const user = await prisma.user.upsert({
     *   create: {
     *     // ... data to create a User
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User we want to update
     *   }
     * })
    **/
    upsert<T extends userUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, userUpsertArgs<ExtArgs>>
    ): Prisma__userClient<$Result.GetResult<Prisma.$userPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {userCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.user.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends userCountArgs>(
      args?: Subset<T, userCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserAggregateArgs>(args: Subset<T, UserAggregateArgs>): Prisma.PrismaPromise<GetUserAggregateType<T>>

    /**
     * Group by User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {userGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends userGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: userGroupByArgs['orderBy'] }
        : { orderBy?: userGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, userGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the user model
   */
  readonly fields: userFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for user.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__userClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';


    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the user model
   */ 
  interface userFieldRefs {
    readonly id: FieldRef<"user", 'Int'>
    readonly nombre: FieldRef<"user", 'String'>
    readonly apellido: FieldRef<"user", 'String'>
    readonly email: FieldRef<"user", 'String'>
    readonly password: FieldRef<"user", 'String'>
    readonly rol: FieldRef<"user", 'user_rol'>
    readonly created_at: FieldRef<"user", 'DateTime'>
    readonly update_at: FieldRef<"user", 'DateTime'>
  }
    

  // Custom InputTypes

  /**
   * user findUnique
   */
  export type userFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Filter, which user to fetch.
     */
    where: userWhereUniqueInput
  }


  /**
   * user findUniqueOrThrow
   */
  export type userFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Filter, which user to fetch.
     */
    where: userWhereUniqueInput
  }


  /**
   * user findFirst
   */
  export type userFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Filter, which user to fetch.
     */
    where?: userWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: userOrderByWithRelationInput | userOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for users.
     */
    cursor?: userWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }


  /**
   * user findFirstOrThrow
   */
  export type userFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Filter, which user to fetch.
     */
    where?: userWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: userOrderByWithRelationInput | userOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for users.
     */
    cursor?: userWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }


  /**
   * user findMany
   */
  export type userFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where?: userWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: userOrderByWithRelationInput | userOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing users.
     */
    cursor?: userWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }


  /**
   * user create
   */
  export type userCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * The data needed to create a user.
     */
    data: XOR<userCreateInput, userUncheckedCreateInput>
  }


  /**
   * user createMany
   */
  export type userCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many users.
     */
    data: userCreateManyInput | userCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * user update
   */
  export type userUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * The data needed to update a user.
     */
    data: XOR<userUpdateInput, userUncheckedUpdateInput>
    /**
     * Choose, which user to update.
     */
    where: userWhereUniqueInput
  }


  /**
   * user updateMany
   */
  export type userUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update users.
     */
    data: XOR<userUpdateManyMutationInput, userUncheckedUpdateManyInput>
    /**
     * Filter which users to update
     */
    where?: userWhereInput
  }


  /**
   * user upsert
   */
  export type userUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * The filter to search for the user to update in case it exists.
     */
    where: userWhereUniqueInput
    /**
     * In case the user found by the `where` argument doesn't exist, create a new user with this data.
     */
    create: XOR<userCreateInput, userUncheckedCreateInput>
    /**
     * In case the user was found with the provided `where` argument, update it with this data.
     */
    update: XOR<userUpdateInput, userUncheckedUpdateInput>
  }


  /**
   * user delete
   */
  export type userDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
    /**
     * Filter which user to delete.
     */
    where: userWhereUniqueInput
  }


  /**
   * user deleteMany
   */
  export type userDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which users to delete
     */
    where?: userWhereInput
  }


  /**
   * user without action
   */
  export type userDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user
     */
    select?: userSelect<ExtArgs> | null
  }



  /**
   * Model users
   */

  export type AggregateUsers = {
    _count: UsersCountAggregateOutputType | null
    _avg: UsersAvgAggregateOutputType | null
    _sum: UsersSumAggregateOutputType | null
    _min: UsersMinAggregateOutputType | null
    _max: UsersMaxAggregateOutputType | null
  }

  export type UsersAvgAggregateOutputType = {
    id: number | null
  }

  export type UsersSumAggregateOutputType = {
    id: number | null
  }

  export type UsersMinAggregateOutputType = {
    id: number | null
    nombre: string | null
    apellido: string | null
    email: string | null
    password: string | null
    rol: $Enums.users_rol | null
    created_at: Date | null
    update_at: Date | null
  }

  export type UsersMaxAggregateOutputType = {
    id: number | null
    nombre: string | null
    apellido: string | null
    email: string | null
    password: string | null
    rol: $Enums.users_rol | null
    created_at: Date | null
    update_at: Date | null
  }

  export type UsersCountAggregateOutputType = {
    id: number
    nombre: number
    apellido: number
    email: number
    password: number
    rol: number
    created_at: number
    update_at: number
    _all: number
  }


  export type UsersAvgAggregateInputType = {
    id?: true
  }

  export type UsersSumAggregateInputType = {
    id?: true
  }

  export type UsersMinAggregateInputType = {
    id?: true
    nombre?: true
    apellido?: true
    email?: true
    password?: true
    rol?: true
    created_at?: true
    update_at?: true
  }

  export type UsersMaxAggregateInputType = {
    id?: true
    nombre?: true
    apellido?: true
    email?: true
    password?: true
    rol?: true
    created_at?: true
    update_at?: true
  }

  export type UsersCountAggregateInputType = {
    id?: true
    nombre?: true
    apellido?: true
    email?: true
    password?: true
    rol?: true
    created_at?: true
    update_at?: true
    _all?: true
  }

  export type UsersAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which users to aggregate.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned users
    **/
    _count?: true | UsersCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UsersAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UsersSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UsersMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UsersMaxAggregateInputType
  }

  export type GetUsersAggregateType<T extends UsersAggregateArgs> = {
        [P in keyof T & keyof AggregateUsers]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUsers[P]>
      : GetScalarType<T[P], AggregateUsers[P]>
  }




  export type usersGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: usersWhereInput
    orderBy?: usersOrderByWithAggregationInput | usersOrderByWithAggregationInput[]
    by: UsersScalarFieldEnum[] | UsersScalarFieldEnum
    having?: usersScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UsersCountAggregateInputType | true
    _avg?: UsersAvgAggregateInputType
    _sum?: UsersSumAggregateInputType
    _min?: UsersMinAggregateInputType
    _max?: UsersMaxAggregateInputType
  }

  export type UsersGroupByOutputType = {
    id: number
    nombre: string | null
    apellido: string | null
    email: string
    password: string | null
    rol: $Enums.users_rol | null
    created_at: Date | null
    update_at: Date | null
    _count: UsersCountAggregateOutputType | null
    _avg: UsersAvgAggregateOutputType | null
    _sum: UsersSumAggregateOutputType | null
    _min: UsersMinAggregateOutputType | null
    _max: UsersMaxAggregateOutputType | null
  }

  type GetUsersGroupByPayload<T extends usersGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UsersGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UsersGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UsersGroupByOutputType[P]>
            : GetScalarType<T[P], UsersGroupByOutputType[P]>
        }
      >
    >


  export type usersSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    nombre?: boolean
    apellido?: boolean
    email?: boolean
    password?: boolean
    rol?: boolean
    created_at?: boolean
    update_at?: boolean
  }, ExtArgs["result"]["users"]>

  export type usersSelectScalar = {
    id?: boolean
    nombre?: boolean
    apellido?: boolean
    email?: boolean
    password?: boolean
    rol?: boolean
    created_at?: boolean
    update_at?: boolean
  }


  export type $usersPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "users"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      nombre: string | null
      apellido: string | null
      email: string
      password: string | null
      rol: $Enums.users_rol | null
      created_at: Date | null
      update_at: Date | null
    }, ExtArgs["result"]["users"]>
    composites: {}
  }


  type usersGetPayload<S extends boolean | null | undefined | usersDefaultArgs> = $Result.GetResult<Prisma.$usersPayload, S>

  type usersCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<usersFindManyArgs, 'select' | 'include' | 'distinct' > & {
      select?: UsersCountAggregateInputType | true
    }

  export interface usersDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['users'], meta: { name: 'users' } }
    /**
     * Find zero or one Users that matches the filter.
     * @param {usersFindUniqueArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends usersFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, usersFindUniqueArgs<ExtArgs>>
    ): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Users that matches the filter or throw an error  with `error.code='P2025'` 
     *     if no matches were found.
     * @param {usersFindUniqueOrThrowArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends usersFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, usersFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersFindFirstArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends usersFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, usersFindFirstArgs<ExtArgs>>
    ): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Users that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersFindFirstOrThrowArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends usersFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, usersFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersFindManyArgs=} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.users.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.users.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const usersWithIdOnly = await prisma.users.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends usersFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, usersFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Users.
     * @param {usersCreateArgs} args - Arguments to create a Users.
     * @example
     * // Create one Users
     * const Users = await prisma.users.create({
     *   data: {
     *     // ... data to create a Users
     *   }
     * })
     * 
    **/
    create<T extends usersCreateArgs<ExtArgs>>(
      args: SelectSubset<T, usersCreateArgs<ExtArgs>>
    ): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Users.
     *     @param {usersCreateManyArgs} args - Arguments to create many Users.
     *     @example
     *     // Create many Users
     *     const users = await prisma.users.createMany({
     *       data: {
     *         // ... provide data here
     *       }
     *     })
     *     
    **/
    createMany<T extends usersCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, usersCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Users.
     * @param {usersDeleteArgs} args - Arguments to delete one Users.
     * @example
     * // Delete one Users
     * const Users = await prisma.users.delete({
     *   where: {
     *     // ... filter to delete one Users
     *   }
     * })
     * 
    **/
    delete<T extends usersDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, usersDeleteArgs<ExtArgs>>
    ): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Users.
     * @param {usersUpdateArgs} args - Arguments to update one Users.
     * @example
     * // Update one Users
     * const users = await prisma.users.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends usersUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, usersUpdateArgs<ExtArgs>>
    ): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Users.
     * @param {usersDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.users.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends usersDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, usersDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const users = await prisma.users.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends usersUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, usersUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Users.
     * @param {usersUpsertArgs} args - Arguments to update or create a Users.
     * @example
     * // Update or create a Users
     * const users = await prisma.users.upsert({
     *   create: {
     *     // ... data to create a Users
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Users we want to update
     *   }
     * })
    **/
    upsert<T extends usersUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, usersUpsertArgs<ExtArgs>>
    ): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.users.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends usersCountArgs>(
      args?: Subset<T, usersCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UsersCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UsersAggregateArgs>(args: Subset<T, UsersAggregateArgs>): Prisma.PrismaPromise<GetUsersAggregateType<T>>

    /**
     * Group by Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends usersGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: usersGroupByArgs['orderBy'] }
        : { orderBy?: usersGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, usersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUsersGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the users model
   */
  readonly fields: usersFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for users.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__usersClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';


    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the users model
   */ 
  interface usersFieldRefs {
    readonly id: FieldRef<"users", 'Int'>
    readonly nombre: FieldRef<"users", 'String'>
    readonly apellido: FieldRef<"users", 'String'>
    readonly email: FieldRef<"users", 'String'>
    readonly password: FieldRef<"users", 'String'>
    readonly rol: FieldRef<"users", 'users_rol'>
    readonly created_at: FieldRef<"users", 'DateTime'>
    readonly update_at: FieldRef<"users", 'DateTime'>
  }
    

  // Custom InputTypes

  /**
   * users findUnique
   */
  export type usersFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where: usersWhereUniqueInput
  }


  /**
   * users findUniqueOrThrow
   */
  export type usersFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where: usersWhereUniqueInput
  }


  /**
   * users findFirst
   */
  export type usersFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for users.
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of users.
     */
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }


  /**
   * users findFirstOrThrow
   */
  export type usersFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for users.
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of users.
     */
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }


  /**
   * users findMany
   */
  export type usersFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing users.
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }


  /**
   * users create
   */
  export type usersCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * The data needed to create a users.
     */
    data: XOR<usersCreateInput, usersUncheckedCreateInput>
  }


  /**
   * users createMany
   */
  export type usersCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many users.
     */
    data: usersCreateManyInput | usersCreateManyInput[]
    skipDuplicates?: boolean
  }


  /**
   * users update
   */
  export type usersUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * The data needed to update a users.
     */
    data: XOR<usersUpdateInput, usersUncheckedUpdateInput>
    /**
     * Choose, which users to update.
     */
    where: usersWhereUniqueInput
  }


  /**
   * users updateMany
   */
  export type usersUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update users.
     */
    data: XOR<usersUpdateManyMutationInput, usersUncheckedUpdateManyInput>
    /**
     * Filter which users to update
     */
    where?: usersWhereInput
  }


  /**
   * users upsert
   */
  export type usersUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * The filter to search for the users to update in case it exists.
     */
    where: usersWhereUniqueInput
    /**
     * In case the users found by the `where` argument doesn't exist, create a new users with this data.
     */
    create: XOR<usersCreateInput, usersUncheckedCreateInput>
    /**
     * In case the users was found with the provided `where` argument, update it with this data.
     */
    update: XOR<usersUpdateInput, usersUncheckedUpdateInput>
  }


  /**
   * users delete
   */
  export type usersDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Filter which users to delete.
     */
    where: usersWhereUniqueInput
  }


  /**
   * users deleteMany
   */
  export type usersDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which users to delete
     */
    where?: usersWhereInput
  }


  /**
   * users without action
   */
  export type usersDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
  }



  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const Areas_desempenioScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre',
    area_padre_id: 'area_padre_id',
    perfil_id: 'perfil_id',
    creado_por: 'creado_por',
    created_at: 'created_at',
    update_at: 'update_at'
  };

  export type Areas_desempenioScalarFieldEnum = (typeof Areas_desempenioScalarFieldEnum)[keyof typeof Areas_desempenioScalarFieldEnum]


  export const Categoria_locacionesScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre',
    categoria_padre_id: 'categoria_padre_id',
    locacion_id: 'locacion_id',
    creado_por: 'creado_por',
    created_at: 'created_at',
    update_at: 'update_at'
  };

  export type Categoria_locacionesScalarFieldEnum = (typeof Categoria_locacionesScalarFieldEnum)[keyof typeof Categoria_locacionesScalarFieldEnum]


  export const Imagenes_locacionesScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre',
    descripcion: 'descripcion',
    link: 'link',
    locacion_id: 'locacion_id',
    creado_por: 'creado_por',
    created_at: 'created_at',
    update_at: 'update_at'
  };

  export type Imagenes_locacionesScalarFieldEnum = (typeof Imagenes_locacionesScalarFieldEnum)[keyof typeof Imagenes_locacionesScalarFieldEnum]


  export const Imagenes_prestadoresScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre',
    descripcion: 'descripcion',
    link: 'link',
    perfil_id: 'perfil_id',
    creado_por: 'creado_por',
    created_at: 'created_at',
    update_at: 'update_at'
  };

  export type Imagenes_prestadoresScalarFieldEnum = (typeof Imagenes_prestadoresScalarFieldEnum)[keyof typeof Imagenes_prestadoresScalarFieldEnum]


  export const LocacionesScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre',
    descripcion: 'descripcion',
    ciudad: 'ciudad',
    jurisdiccion: 'jurisdiccion',
    direccion: 'direccion',
    instagram: 'instagram',
    facebook: 'facebook',
    sitio_web: 'sitio_web',
    telefono: 'telefono',
    email: 'email',
    imagen_perfil: 'imagen_perfil',
    direccion_latitud: 'direccion_latitud',
    direccion_longitud: 'direccion_longitud',
    categoria_id: 'categoria_id',
    creado_por: 'creado_por',
    created_at: 'created_at',
    update_at: 'update_at'
  };

  export type LocacionesScalarFieldEnum = (typeof LocacionesScalarFieldEnum)[keyof typeof LocacionesScalarFieldEnum]


  export const PerfilScalarFieldEnum: {
    id: 'id',
    perfil: 'perfil',
    descripcion: 'descripcion',
    user_id: 'user_id',
    nombre_entidad: 'nombre_entidad',
    imagen_perfil: 'imagen_perfil',
    experiencia_laboral: 'experiencia_laboral',
    area_cobertura: 'area_cobertura',
    email: 'email',
    telefono: 'telefono',
    instagram: 'instagram',
    facebook: 'facebook',
    sitio_web: 'sitio_web',
    tipo_productora_id: 'tipo_productora_id',
    areas_desempenio_id: 'areas_desempenio_id',
    tipo_servicio_id: 'tipo_servicio_id',
    tipo_actividad_id: 'tipo_actividad_id',
    idioma: 'idioma',
    created_at: 'created_at',
    update_at: 'update_at'
  };

  export type PerfilScalarFieldEnum = (typeof PerfilScalarFieldEnum)[keyof typeof PerfilScalarFieldEnum]


  export const PermisosScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre',
    descripcion: 'descripcion',
    link: 'link',
    creado_por: 'creado_por',
    created_at: 'created_at',
    update_at: 'update_at'
  };

  export type PermisosScalarFieldEnum = (typeof PermisosScalarFieldEnum)[keyof typeof PermisosScalarFieldEnum]


  export const Tipo_actividadScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre',
    tipo_padre_id: 'tipo_padre_id',
    perfil_id: 'perfil_id',
    creado_por: 'creado_por',
    created_at: 'created_at',
    update_at: 'update_at'
  };

  export type Tipo_actividadScalarFieldEnum = (typeof Tipo_actividadScalarFieldEnum)[keyof typeof Tipo_actividadScalarFieldEnum]


  export const Tipo_productoraScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre',
    tipo_padre_id: 'tipo_padre_id',
    perfil_id: 'perfil_id',
    creado_por: 'creado_por',
    created_at: 'created_at',
    update_at: 'update_at'
  };

  export type Tipo_productoraScalarFieldEnum = (typeof Tipo_productoraScalarFieldEnum)[keyof typeof Tipo_productoraScalarFieldEnum]


  export const Tipo_servicioScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre',
    tipo_padre_id: 'tipo_padre_id',
    perfil_id: 'perfil_id',
    creado_por: 'creado_por',
    created_at: 'created_at',
    update_at: 'update_at'
  };

  export type Tipo_servicioScalarFieldEnum = (typeof Tipo_servicioScalarFieldEnum)[keyof typeof Tipo_servicioScalarFieldEnum]


  export const UserScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre',
    apellido: 'apellido',
    email: 'email',
    password: 'password',
    rol: 'rol',
    created_at: 'created_at',
    update_at: 'update_at'
  };

  export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


  export const UsersScalarFieldEnum: {
    id: 'id',
    nombre: 'nombre',
    apellido: 'apellido',
    email: 'email',
    password: 'password',
    rol: 'rol',
    created_at: 'created_at',
    update_at: 'update_at'
  };

  export type UsersScalarFieldEnum = (typeof UsersScalarFieldEnum)[keyof typeof UsersScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'locaciones_ciudad'
   */
  export type Enumlocaciones_ciudadFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'locaciones_ciudad'>
    


  /**
   * Reference to a field of type 'locaciones_jurisdiccion'
   */
  export type Enumlocaciones_jurisdiccionFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'locaciones_jurisdiccion'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'perfil_perfil'
   */
  export type Enumperfil_perfilFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'perfil_perfil'>
    


  /**
   * Reference to a field of type 'perfil_area_cobertura'
   */
  export type Enumperfil_area_coberturaFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'perfil_area_cobertura'>
    


  /**
   * Reference to a field of type 'perfil_idioma'
   */
  export type Enumperfil_idiomaFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'perfil_idioma'>
    


  /**
   * Reference to a field of type 'user_rol'
   */
  export type Enumuser_rolFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'user_rol'>
    


  /**
   * Reference to a field of type 'users_rol'
   */
  export type Enumusers_rolFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'users_rol'>
    
  /**
   * Deep Input Types
   */


  export type areas_desempenioWhereInput = {
    AND?: areas_desempenioWhereInput | areas_desempenioWhereInput[]
    OR?: areas_desempenioWhereInput[]
    NOT?: areas_desempenioWhereInput | areas_desempenioWhereInput[]
    id?: IntFilter<"areas_desempenio"> | number
    nombre?: StringFilter<"areas_desempenio"> | string
    area_padre_id?: IntNullableFilter<"areas_desempenio"> | number | null
    perfil_id?: IntNullableFilter<"areas_desempenio"> | number | null
    creado_por?: IntNullableFilter<"areas_desempenio"> | number | null
    created_at?: DateTimeNullableFilter<"areas_desempenio"> | Date | string | null
    update_at?: DateTimeNullableFilter<"areas_desempenio"> | Date | string | null
  }

  export type areas_desempenioOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    area_padre_id?: SortOrderInput | SortOrder
    perfil_id?: SortOrderInput | SortOrder
    creado_por?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    update_at?: SortOrderInput | SortOrder
  }

  export type areas_desempenioWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    nombre?: string
    AND?: areas_desempenioWhereInput | areas_desempenioWhereInput[]
    OR?: areas_desempenioWhereInput[]
    NOT?: areas_desempenioWhereInput | areas_desempenioWhereInput[]
    area_padre_id?: IntNullableFilter<"areas_desempenio"> | number | null
    perfil_id?: IntNullableFilter<"areas_desempenio"> | number | null
    creado_por?: IntNullableFilter<"areas_desempenio"> | number | null
    created_at?: DateTimeNullableFilter<"areas_desempenio"> | Date | string | null
    update_at?: DateTimeNullableFilter<"areas_desempenio"> | Date | string | null
  }, "id" | "nombre">

  export type areas_desempenioOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    area_padre_id?: SortOrderInput | SortOrder
    perfil_id?: SortOrderInput | SortOrder
    creado_por?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    update_at?: SortOrderInput | SortOrder
    _count?: areas_desempenioCountOrderByAggregateInput
    _avg?: areas_desempenioAvgOrderByAggregateInput
    _max?: areas_desempenioMaxOrderByAggregateInput
    _min?: areas_desempenioMinOrderByAggregateInput
    _sum?: areas_desempenioSumOrderByAggregateInput
  }

  export type areas_desempenioScalarWhereWithAggregatesInput = {
    AND?: areas_desempenioScalarWhereWithAggregatesInput | areas_desempenioScalarWhereWithAggregatesInput[]
    OR?: areas_desempenioScalarWhereWithAggregatesInput[]
    NOT?: areas_desempenioScalarWhereWithAggregatesInput | areas_desempenioScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"areas_desempenio"> | number
    nombre?: StringWithAggregatesFilter<"areas_desempenio"> | string
    area_padre_id?: IntNullableWithAggregatesFilter<"areas_desempenio"> | number | null
    perfil_id?: IntNullableWithAggregatesFilter<"areas_desempenio"> | number | null
    creado_por?: IntNullableWithAggregatesFilter<"areas_desempenio"> | number | null
    created_at?: DateTimeNullableWithAggregatesFilter<"areas_desempenio"> | Date | string | null
    update_at?: DateTimeNullableWithAggregatesFilter<"areas_desempenio"> | Date | string | null
  }

  export type categoria_locacionesWhereInput = {
    AND?: categoria_locacionesWhereInput | categoria_locacionesWhereInput[]
    OR?: categoria_locacionesWhereInput[]
    NOT?: categoria_locacionesWhereInput | categoria_locacionesWhereInput[]
    id?: IntFilter<"categoria_locaciones"> | number
    nombre?: StringFilter<"categoria_locaciones"> | string
    categoria_padre_id?: IntNullableFilter<"categoria_locaciones"> | number | null
    locacion_id?: IntNullableFilter<"categoria_locaciones"> | number | null
    creado_por?: IntNullableFilter<"categoria_locaciones"> | number | null
    created_at?: DateTimeNullableFilter<"categoria_locaciones"> | Date | string | null
    update_at?: DateTimeNullableFilter<"categoria_locaciones"> | Date | string | null
  }

  export type categoria_locacionesOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    categoria_padre_id?: SortOrderInput | SortOrder
    locacion_id?: SortOrderInput | SortOrder
    creado_por?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    update_at?: SortOrderInput | SortOrder
  }

  export type categoria_locacionesWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    nombre?: string
    AND?: categoria_locacionesWhereInput | categoria_locacionesWhereInput[]
    OR?: categoria_locacionesWhereInput[]
    NOT?: categoria_locacionesWhereInput | categoria_locacionesWhereInput[]
    categoria_padre_id?: IntNullableFilter<"categoria_locaciones"> | number | null
    locacion_id?: IntNullableFilter<"categoria_locaciones"> | number | null
    creado_por?: IntNullableFilter<"categoria_locaciones"> | number | null
    created_at?: DateTimeNullableFilter<"categoria_locaciones"> | Date | string | null
    update_at?: DateTimeNullableFilter<"categoria_locaciones"> | Date | string | null
  }, "id" | "nombre">

  export type categoria_locacionesOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    categoria_padre_id?: SortOrderInput | SortOrder
    locacion_id?: SortOrderInput | SortOrder
    creado_por?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    update_at?: SortOrderInput | SortOrder
    _count?: categoria_locacionesCountOrderByAggregateInput
    _avg?: categoria_locacionesAvgOrderByAggregateInput
    _max?: categoria_locacionesMaxOrderByAggregateInput
    _min?: categoria_locacionesMinOrderByAggregateInput
    _sum?: categoria_locacionesSumOrderByAggregateInput
  }

  export type categoria_locacionesScalarWhereWithAggregatesInput = {
    AND?: categoria_locacionesScalarWhereWithAggregatesInput | categoria_locacionesScalarWhereWithAggregatesInput[]
    OR?: categoria_locacionesScalarWhereWithAggregatesInput[]
    NOT?: categoria_locacionesScalarWhereWithAggregatesInput | categoria_locacionesScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"categoria_locaciones"> | number
    nombre?: StringWithAggregatesFilter<"categoria_locaciones"> | string
    categoria_padre_id?: IntNullableWithAggregatesFilter<"categoria_locaciones"> | number | null
    locacion_id?: IntNullableWithAggregatesFilter<"categoria_locaciones"> | number | null
    creado_por?: IntNullableWithAggregatesFilter<"categoria_locaciones"> | number | null
    created_at?: DateTimeNullableWithAggregatesFilter<"categoria_locaciones"> | Date | string | null
    update_at?: DateTimeNullableWithAggregatesFilter<"categoria_locaciones"> | Date | string | null
  }

  export type imagenes_locacionesWhereInput = {
    AND?: imagenes_locacionesWhereInput | imagenes_locacionesWhereInput[]
    OR?: imagenes_locacionesWhereInput[]
    NOT?: imagenes_locacionesWhereInput | imagenes_locacionesWhereInput[]
    id?: IntFilter<"imagenes_locaciones"> | number
    nombre?: StringNullableFilter<"imagenes_locaciones"> | string | null
    descripcion?: StringNullableFilter<"imagenes_locaciones"> | string | null
    link?: StringNullableFilter<"imagenes_locaciones"> | string | null
    locacion_id?: IntNullableFilter<"imagenes_locaciones"> | number | null
    creado_por?: IntNullableFilter<"imagenes_locaciones"> | number | null
    created_at?: DateTimeNullableFilter<"imagenes_locaciones"> | Date | string | null
    update_at?: DateTimeNullableFilter<"imagenes_locaciones"> | Date | string | null
  }

  export type imagenes_locacionesOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrderInput | SortOrder
    descripcion?: SortOrderInput | SortOrder
    link?: SortOrderInput | SortOrder
    locacion_id?: SortOrderInput | SortOrder
    creado_por?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    update_at?: SortOrderInput | SortOrder
  }

  export type imagenes_locacionesWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: imagenes_locacionesWhereInput | imagenes_locacionesWhereInput[]
    OR?: imagenes_locacionesWhereInput[]
    NOT?: imagenes_locacionesWhereInput | imagenes_locacionesWhereInput[]
    nombre?: StringNullableFilter<"imagenes_locaciones"> | string | null
    descripcion?: StringNullableFilter<"imagenes_locaciones"> | string | null
    link?: StringNullableFilter<"imagenes_locaciones"> | string | null
    locacion_id?: IntNullableFilter<"imagenes_locaciones"> | number | null
    creado_por?: IntNullableFilter<"imagenes_locaciones"> | number | null
    created_at?: DateTimeNullableFilter<"imagenes_locaciones"> | Date | string | null
    update_at?: DateTimeNullableFilter<"imagenes_locaciones"> | Date | string | null
  }, "id">

  export type imagenes_locacionesOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrderInput | SortOrder
    descripcion?: SortOrderInput | SortOrder
    link?: SortOrderInput | SortOrder
    locacion_id?: SortOrderInput | SortOrder
    creado_por?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    update_at?: SortOrderInput | SortOrder
    _count?: imagenes_locacionesCountOrderByAggregateInput
    _avg?: imagenes_locacionesAvgOrderByAggregateInput
    _max?: imagenes_locacionesMaxOrderByAggregateInput
    _min?: imagenes_locacionesMinOrderByAggregateInput
    _sum?: imagenes_locacionesSumOrderByAggregateInput
  }

  export type imagenes_locacionesScalarWhereWithAggregatesInput = {
    AND?: imagenes_locacionesScalarWhereWithAggregatesInput | imagenes_locacionesScalarWhereWithAggregatesInput[]
    OR?: imagenes_locacionesScalarWhereWithAggregatesInput[]
    NOT?: imagenes_locacionesScalarWhereWithAggregatesInput | imagenes_locacionesScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"imagenes_locaciones"> | number
    nombre?: StringNullableWithAggregatesFilter<"imagenes_locaciones"> | string | null
    descripcion?: StringNullableWithAggregatesFilter<"imagenes_locaciones"> | string | null
    link?: StringNullableWithAggregatesFilter<"imagenes_locaciones"> | string | null
    locacion_id?: IntNullableWithAggregatesFilter<"imagenes_locaciones"> | number | null
    creado_por?: IntNullableWithAggregatesFilter<"imagenes_locaciones"> | number | null
    created_at?: DateTimeNullableWithAggregatesFilter<"imagenes_locaciones"> | Date | string | null
    update_at?: DateTimeNullableWithAggregatesFilter<"imagenes_locaciones"> | Date | string | null
  }

  export type imagenes_prestadoresWhereInput = {
    AND?: imagenes_prestadoresWhereInput | imagenes_prestadoresWhereInput[]
    OR?: imagenes_prestadoresWhereInput[]
    NOT?: imagenes_prestadoresWhereInput | imagenes_prestadoresWhereInput[]
    id?: IntFilter<"imagenes_prestadores"> | number
    nombre?: StringNullableFilter<"imagenes_prestadores"> | string | null
    descripcion?: StringNullableFilter<"imagenes_prestadores"> | string | null
    link?: StringNullableFilter<"imagenes_prestadores"> | string | null
    perfil_id?: IntNullableFilter<"imagenes_prestadores"> | number | null
    creado_por?: IntNullableFilter<"imagenes_prestadores"> | number | null
    created_at?: DateTimeNullableFilter<"imagenes_prestadores"> | Date | string | null
    update_at?: DateTimeNullableFilter<"imagenes_prestadores"> | Date | string | null
  }

  export type imagenes_prestadoresOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrderInput | SortOrder
    descripcion?: SortOrderInput | SortOrder
    link?: SortOrderInput | SortOrder
    perfil_id?: SortOrderInput | SortOrder
    creado_por?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    update_at?: SortOrderInput | SortOrder
  }

  export type imagenes_prestadoresWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: imagenes_prestadoresWhereInput | imagenes_prestadoresWhereInput[]
    OR?: imagenes_prestadoresWhereInput[]
    NOT?: imagenes_prestadoresWhereInput | imagenes_prestadoresWhereInput[]
    nombre?: StringNullableFilter<"imagenes_prestadores"> | string | null
    descripcion?: StringNullableFilter<"imagenes_prestadores"> | string | null
    link?: StringNullableFilter<"imagenes_prestadores"> | string | null
    perfil_id?: IntNullableFilter<"imagenes_prestadores"> | number | null
    creado_por?: IntNullableFilter<"imagenes_prestadores"> | number | null
    created_at?: DateTimeNullableFilter<"imagenes_prestadores"> | Date | string | null
    update_at?: DateTimeNullableFilter<"imagenes_prestadores"> | Date | string | null
  }, "id">

  export type imagenes_prestadoresOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrderInput | SortOrder
    descripcion?: SortOrderInput | SortOrder
    link?: SortOrderInput | SortOrder
    perfil_id?: SortOrderInput | SortOrder
    creado_por?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    update_at?: SortOrderInput | SortOrder
    _count?: imagenes_prestadoresCountOrderByAggregateInput
    _avg?: imagenes_prestadoresAvgOrderByAggregateInput
    _max?: imagenes_prestadoresMaxOrderByAggregateInput
    _min?: imagenes_prestadoresMinOrderByAggregateInput
    _sum?: imagenes_prestadoresSumOrderByAggregateInput
  }

  export type imagenes_prestadoresScalarWhereWithAggregatesInput = {
    AND?: imagenes_prestadoresScalarWhereWithAggregatesInput | imagenes_prestadoresScalarWhereWithAggregatesInput[]
    OR?: imagenes_prestadoresScalarWhereWithAggregatesInput[]
    NOT?: imagenes_prestadoresScalarWhereWithAggregatesInput | imagenes_prestadoresScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"imagenes_prestadores"> | number
    nombre?: StringNullableWithAggregatesFilter<"imagenes_prestadores"> | string | null
    descripcion?: StringNullableWithAggregatesFilter<"imagenes_prestadores"> | string | null
    link?: StringNullableWithAggregatesFilter<"imagenes_prestadores"> | string | null
    perfil_id?: IntNullableWithAggregatesFilter<"imagenes_prestadores"> | number | null
    creado_por?: IntNullableWithAggregatesFilter<"imagenes_prestadores"> | number | null
    created_at?: DateTimeNullableWithAggregatesFilter<"imagenes_prestadores"> | Date | string | null
    update_at?: DateTimeNullableWithAggregatesFilter<"imagenes_prestadores"> | Date | string | null
  }

  export type locacionesWhereInput = {
    AND?: locacionesWhereInput | locacionesWhereInput[]
    OR?: locacionesWhereInput[]
    NOT?: locacionesWhereInput | locacionesWhereInput[]
    id?: IntFilter<"locaciones"> | number
    nombre?: StringFilter<"locaciones"> | string
    descripcion?: StringNullableFilter<"locaciones"> | string | null
    ciudad?: Enumlocaciones_ciudadNullableFilter<"locaciones"> | $Enums.locaciones_ciudad | null
    jurisdiccion?: Enumlocaciones_jurisdiccionNullableFilter<"locaciones"> | $Enums.locaciones_jurisdiccion | null
    direccion?: StringNullableFilter<"locaciones"> | string | null
    instagram?: StringNullableFilter<"locaciones"> | string | null
    facebook?: StringNullableFilter<"locaciones"> | string | null
    sitio_web?: StringNullableFilter<"locaciones"> | string | null
    telefono?: IntNullableFilter<"locaciones"> | number | null
    email?: StringNullableFilter<"locaciones"> | string | null
    imagen_perfil?: IntNullableFilter<"locaciones"> | number | null
    direccion_latitud?: FloatNullableFilter<"locaciones"> | number | null
    direccion_longitud?: FloatNullableFilter<"locaciones"> | number | null
    categoria_id?: IntNullableFilter<"locaciones"> | number | null
    creado_por?: IntNullableFilter<"locaciones"> | number | null
    created_at?: DateTimeNullableFilter<"locaciones"> | Date | string | null
    update_at?: DateTimeNullableFilter<"locaciones"> | Date | string | null
  }

  export type locacionesOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    ciudad?: SortOrderInput | SortOrder
    jurisdiccion?: SortOrderInput | SortOrder
    direccion?: SortOrderInput | SortOrder
    instagram?: SortOrderInput | SortOrder
    facebook?: SortOrderInput | SortOrder
    sitio_web?: SortOrderInput | SortOrder
    telefono?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    imagen_perfil?: SortOrderInput | SortOrder
    direccion_latitud?: SortOrderInput | SortOrder
    direccion_longitud?: SortOrderInput | SortOrder
    categoria_id?: SortOrderInput | SortOrder
    creado_por?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    update_at?: SortOrderInput | SortOrder
  }

  export type locacionesWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    nombre?: string
    AND?: locacionesWhereInput | locacionesWhereInput[]
    OR?: locacionesWhereInput[]
    NOT?: locacionesWhereInput | locacionesWhereInput[]
    descripcion?: StringNullableFilter<"locaciones"> | string | null
    ciudad?: Enumlocaciones_ciudadNullableFilter<"locaciones"> | $Enums.locaciones_ciudad | null
    jurisdiccion?: Enumlocaciones_jurisdiccionNullableFilter<"locaciones"> | $Enums.locaciones_jurisdiccion | null
    direccion?: StringNullableFilter<"locaciones"> | string | null
    instagram?: StringNullableFilter<"locaciones"> | string | null
    facebook?: StringNullableFilter<"locaciones"> | string | null
    sitio_web?: StringNullableFilter<"locaciones"> | string | null
    telefono?: IntNullableFilter<"locaciones"> | number | null
    email?: StringNullableFilter<"locaciones"> | string | null
    imagen_perfil?: IntNullableFilter<"locaciones"> | number | null
    direccion_latitud?: FloatNullableFilter<"locaciones"> | number | null
    direccion_longitud?: FloatNullableFilter<"locaciones"> | number | null
    categoria_id?: IntNullableFilter<"locaciones"> | number | null
    creado_por?: IntNullableFilter<"locaciones"> | number | null
    created_at?: DateTimeNullableFilter<"locaciones"> | Date | string | null
    update_at?: DateTimeNullableFilter<"locaciones"> | Date | string | null
  }, "id" | "nombre">

  export type locacionesOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    ciudad?: SortOrderInput | SortOrder
    jurisdiccion?: SortOrderInput | SortOrder
    direccion?: SortOrderInput | SortOrder
    instagram?: SortOrderInput | SortOrder
    facebook?: SortOrderInput | SortOrder
    sitio_web?: SortOrderInput | SortOrder
    telefono?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    imagen_perfil?: SortOrderInput | SortOrder
    direccion_latitud?: SortOrderInput | SortOrder
    direccion_longitud?: SortOrderInput | SortOrder
    categoria_id?: SortOrderInput | SortOrder
    creado_por?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    update_at?: SortOrderInput | SortOrder
    _count?: locacionesCountOrderByAggregateInput
    _avg?: locacionesAvgOrderByAggregateInput
    _max?: locacionesMaxOrderByAggregateInput
    _min?: locacionesMinOrderByAggregateInput
    _sum?: locacionesSumOrderByAggregateInput
  }

  export type locacionesScalarWhereWithAggregatesInput = {
    AND?: locacionesScalarWhereWithAggregatesInput | locacionesScalarWhereWithAggregatesInput[]
    OR?: locacionesScalarWhereWithAggregatesInput[]
    NOT?: locacionesScalarWhereWithAggregatesInput | locacionesScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"locaciones"> | number
    nombre?: StringWithAggregatesFilter<"locaciones"> | string
    descripcion?: StringNullableWithAggregatesFilter<"locaciones"> | string | null
    ciudad?: Enumlocaciones_ciudadNullableWithAggregatesFilter<"locaciones"> | $Enums.locaciones_ciudad | null
    jurisdiccion?: Enumlocaciones_jurisdiccionNullableWithAggregatesFilter<"locaciones"> | $Enums.locaciones_jurisdiccion | null
    direccion?: StringNullableWithAggregatesFilter<"locaciones"> | string | null
    instagram?: StringNullableWithAggregatesFilter<"locaciones"> | string | null
    facebook?: StringNullableWithAggregatesFilter<"locaciones"> | string | null
    sitio_web?: StringNullableWithAggregatesFilter<"locaciones"> | string | null
    telefono?: IntNullableWithAggregatesFilter<"locaciones"> | number | null
    email?: StringNullableWithAggregatesFilter<"locaciones"> | string | null
    imagen_perfil?: IntNullableWithAggregatesFilter<"locaciones"> | number | null
    direccion_latitud?: FloatNullableWithAggregatesFilter<"locaciones"> | number | null
    direccion_longitud?: FloatNullableWithAggregatesFilter<"locaciones"> | number | null
    categoria_id?: IntNullableWithAggregatesFilter<"locaciones"> | number | null
    creado_por?: IntNullableWithAggregatesFilter<"locaciones"> | number | null
    created_at?: DateTimeNullableWithAggregatesFilter<"locaciones"> | Date | string | null
    update_at?: DateTimeNullableWithAggregatesFilter<"locaciones"> | Date | string | null
  }

  export type perfilWhereInput = {
    AND?: perfilWhereInput | perfilWhereInput[]
    OR?: perfilWhereInput[]
    NOT?: perfilWhereInput | perfilWhereInput[]
    id?: IntFilter<"perfil"> | number
    perfil?: Enumperfil_perfilNullableFilter<"perfil"> | $Enums.perfil_perfil | null
    descripcion?: StringNullableFilter<"perfil"> | string | null
    user_id?: IntNullableFilter<"perfil"> | number | null
    nombre_entidad?: StringFilter<"perfil"> | string
    imagen_perfil?: IntNullableFilter<"perfil"> | number | null
    experiencia_laboral?: StringNullableFilter<"perfil"> | string | null
    area_cobertura?: Enumperfil_area_coberturaNullableFilter<"perfil"> | $Enums.perfil_area_cobertura | null
    email?: StringNullableFilter<"perfil"> | string | null
    telefono?: IntNullableFilter<"perfil"> | number | null
    instagram?: StringNullableFilter<"perfil"> | string | null
    facebook?: StringNullableFilter<"perfil"> | string | null
    sitio_web?: StringNullableFilter<"perfil"> | string | null
    tipo_productora_id?: IntNullableFilter<"perfil"> | number | null
    areas_desempenio_id?: IntNullableFilter<"perfil"> | number | null
    tipo_servicio_id?: IntNullableFilter<"perfil"> | number | null
    tipo_actividad_id?: IntNullableFilter<"perfil"> | number | null
    idioma?: Enumperfil_idiomaNullableFilter<"perfil"> | $Enums.perfil_idioma | null
    created_at?: DateTimeNullableFilter<"perfil"> | Date | string | null
    update_at?: DateTimeNullableFilter<"perfil"> | Date | string | null
  }

  export type perfilOrderByWithRelationInput = {
    id?: SortOrder
    perfil?: SortOrderInput | SortOrder
    descripcion?: SortOrderInput | SortOrder
    user_id?: SortOrderInput | SortOrder
    nombre_entidad?: SortOrder
    imagen_perfil?: SortOrderInput | SortOrder
    experiencia_laboral?: SortOrderInput | SortOrder
    area_cobertura?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    telefono?: SortOrderInput | SortOrder
    instagram?: SortOrderInput | SortOrder
    facebook?: SortOrderInput | SortOrder
    sitio_web?: SortOrderInput | SortOrder
    tipo_productora_id?: SortOrderInput | SortOrder
    areas_desempenio_id?: SortOrderInput | SortOrder
    tipo_servicio_id?: SortOrderInput | SortOrder
    tipo_actividad_id?: SortOrderInput | SortOrder
    idioma?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    update_at?: SortOrderInput | SortOrder
  }

  export type perfilWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: perfilWhereInput | perfilWhereInput[]
    OR?: perfilWhereInput[]
    NOT?: perfilWhereInput | perfilWhereInput[]
    perfil?: Enumperfil_perfilNullableFilter<"perfil"> | $Enums.perfil_perfil | null
    descripcion?: StringNullableFilter<"perfil"> | string | null
    user_id?: IntNullableFilter<"perfil"> | number | null
    nombre_entidad?: StringFilter<"perfil"> | string
    imagen_perfil?: IntNullableFilter<"perfil"> | number | null
    experiencia_laboral?: StringNullableFilter<"perfil"> | string | null
    area_cobertura?: Enumperfil_area_coberturaNullableFilter<"perfil"> | $Enums.perfil_area_cobertura | null
    email?: StringNullableFilter<"perfil"> | string | null
    telefono?: IntNullableFilter<"perfil"> | number | null
    instagram?: StringNullableFilter<"perfil"> | string | null
    facebook?: StringNullableFilter<"perfil"> | string | null
    sitio_web?: StringNullableFilter<"perfil"> | string | null
    tipo_productora_id?: IntNullableFilter<"perfil"> | number | null
    areas_desempenio_id?: IntNullableFilter<"perfil"> | number | null
    tipo_servicio_id?: IntNullableFilter<"perfil"> | number | null
    tipo_actividad_id?: IntNullableFilter<"perfil"> | number | null
    idioma?: Enumperfil_idiomaNullableFilter<"perfil"> | $Enums.perfil_idioma | null
    created_at?: DateTimeNullableFilter<"perfil"> | Date | string | null
    update_at?: DateTimeNullableFilter<"perfil"> | Date | string | null
  }, "id">

  export type perfilOrderByWithAggregationInput = {
    id?: SortOrder
    perfil?: SortOrderInput | SortOrder
    descripcion?: SortOrderInput | SortOrder
    user_id?: SortOrderInput | SortOrder
    nombre_entidad?: SortOrder
    imagen_perfil?: SortOrderInput | SortOrder
    experiencia_laboral?: SortOrderInput | SortOrder
    area_cobertura?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    telefono?: SortOrderInput | SortOrder
    instagram?: SortOrderInput | SortOrder
    facebook?: SortOrderInput | SortOrder
    sitio_web?: SortOrderInput | SortOrder
    tipo_productora_id?: SortOrderInput | SortOrder
    areas_desempenio_id?: SortOrderInput | SortOrder
    tipo_servicio_id?: SortOrderInput | SortOrder
    tipo_actividad_id?: SortOrderInput | SortOrder
    idioma?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    update_at?: SortOrderInput | SortOrder
    _count?: perfilCountOrderByAggregateInput
    _avg?: perfilAvgOrderByAggregateInput
    _max?: perfilMaxOrderByAggregateInput
    _min?: perfilMinOrderByAggregateInput
    _sum?: perfilSumOrderByAggregateInput
  }

  export type perfilScalarWhereWithAggregatesInput = {
    AND?: perfilScalarWhereWithAggregatesInput | perfilScalarWhereWithAggregatesInput[]
    OR?: perfilScalarWhereWithAggregatesInput[]
    NOT?: perfilScalarWhereWithAggregatesInput | perfilScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"perfil"> | number
    perfil?: Enumperfil_perfilNullableWithAggregatesFilter<"perfil"> | $Enums.perfil_perfil | null
    descripcion?: StringNullableWithAggregatesFilter<"perfil"> | string | null
    user_id?: IntNullableWithAggregatesFilter<"perfil"> | number | null
    nombre_entidad?: StringWithAggregatesFilter<"perfil"> | string
    imagen_perfil?: IntNullableWithAggregatesFilter<"perfil"> | number | null
    experiencia_laboral?: StringNullableWithAggregatesFilter<"perfil"> | string | null
    area_cobertura?: Enumperfil_area_coberturaNullableWithAggregatesFilter<"perfil"> | $Enums.perfil_area_cobertura | null
    email?: StringNullableWithAggregatesFilter<"perfil"> | string | null
    telefono?: IntNullableWithAggregatesFilter<"perfil"> | number | null
    instagram?: StringNullableWithAggregatesFilter<"perfil"> | string | null
    facebook?: StringNullableWithAggregatesFilter<"perfil"> | string | null
    sitio_web?: StringNullableWithAggregatesFilter<"perfil"> | string | null
    tipo_productora_id?: IntNullableWithAggregatesFilter<"perfil"> | number | null
    areas_desempenio_id?: IntNullableWithAggregatesFilter<"perfil"> | number | null
    tipo_servicio_id?: IntNullableWithAggregatesFilter<"perfil"> | number | null
    tipo_actividad_id?: IntNullableWithAggregatesFilter<"perfil"> | number | null
    idioma?: Enumperfil_idiomaNullableWithAggregatesFilter<"perfil"> | $Enums.perfil_idioma | null
    created_at?: DateTimeNullableWithAggregatesFilter<"perfil"> | Date | string | null
    update_at?: DateTimeNullableWithAggregatesFilter<"perfil"> | Date | string | null
  }

  export type permisosWhereInput = {
    AND?: permisosWhereInput | permisosWhereInput[]
    OR?: permisosWhereInput[]
    NOT?: permisosWhereInput | permisosWhereInput[]
    id?: IntFilter<"permisos"> | number
    nombre?: StringFilter<"permisos"> | string
    descripcion?: StringNullableFilter<"permisos"> | string | null
    link?: StringNullableFilter<"permisos"> | string | null
    creado_por?: IntNullableFilter<"permisos"> | number | null
    created_at?: DateTimeNullableFilter<"permisos"> | Date | string | null
    update_at?: DateTimeNullableFilter<"permisos"> | Date | string | null
  }

  export type permisosOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    link?: SortOrderInput | SortOrder
    creado_por?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    update_at?: SortOrderInput | SortOrder
  }

  export type permisosWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    nombre?: string
    AND?: permisosWhereInput | permisosWhereInput[]
    OR?: permisosWhereInput[]
    NOT?: permisosWhereInput | permisosWhereInput[]
    descripcion?: StringNullableFilter<"permisos"> | string | null
    link?: StringNullableFilter<"permisos"> | string | null
    creado_por?: IntNullableFilter<"permisos"> | number | null
    created_at?: DateTimeNullableFilter<"permisos"> | Date | string | null
    update_at?: DateTimeNullableFilter<"permisos"> | Date | string | null
  }, "id" | "nombre">

  export type permisosOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrderInput | SortOrder
    link?: SortOrderInput | SortOrder
    creado_por?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    update_at?: SortOrderInput | SortOrder
    _count?: permisosCountOrderByAggregateInput
    _avg?: permisosAvgOrderByAggregateInput
    _max?: permisosMaxOrderByAggregateInput
    _min?: permisosMinOrderByAggregateInput
    _sum?: permisosSumOrderByAggregateInput
  }

  export type permisosScalarWhereWithAggregatesInput = {
    AND?: permisosScalarWhereWithAggregatesInput | permisosScalarWhereWithAggregatesInput[]
    OR?: permisosScalarWhereWithAggregatesInput[]
    NOT?: permisosScalarWhereWithAggregatesInput | permisosScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"permisos"> | number
    nombre?: StringWithAggregatesFilter<"permisos"> | string
    descripcion?: StringNullableWithAggregatesFilter<"permisos"> | string | null
    link?: StringNullableWithAggregatesFilter<"permisos"> | string | null
    creado_por?: IntNullableWithAggregatesFilter<"permisos"> | number | null
    created_at?: DateTimeNullableWithAggregatesFilter<"permisos"> | Date | string | null
    update_at?: DateTimeNullableWithAggregatesFilter<"permisos"> | Date | string | null
  }

  export type tipo_actividadWhereInput = {
    AND?: tipo_actividadWhereInput | tipo_actividadWhereInput[]
    OR?: tipo_actividadWhereInput[]
    NOT?: tipo_actividadWhereInput | tipo_actividadWhereInput[]
    id?: IntFilter<"tipo_actividad"> | number
    nombre?: StringFilter<"tipo_actividad"> | string
    tipo_padre_id?: IntNullableFilter<"tipo_actividad"> | number | null
    perfil_id?: IntNullableFilter<"tipo_actividad"> | number | null
    creado_por?: IntNullableFilter<"tipo_actividad"> | number | null
    created_at?: DateTimeNullableFilter<"tipo_actividad"> | Date | string | null
    update_at?: DateTimeNullableFilter<"tipo_actividad"> | Date | string | null
  }

  export type tipo_actividadOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    tipo_padre_id?: SortOrderInput | SortOrder
    perfil_id?: SortOrderInput | SortOrder
    creado_por?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    update_at?: SortOrderInput | SortOrder
  }

  export type tipo_actividadWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    nombre?: string
    AND?: tipo_actividadWhereInput | tipo_actividadWhereInput[]
    OR?: tipo_actividadWhereInput[]
    NOT?: tipo_actividadWhereInput | tipo_actividadWhereInput[]
    tipo_padre_id?: IntNullableFilter<"tipo_actividad"> | number | null
    perfil_id?: IntNullableFilter<"tipo_actividad"> | number | null
    creado_por?: IntNullableFilter<"tipo_actividad"> | number | null
    created_at?: DateTimeNullableFilter<"tipo_actividad"> | Date | string | null
    update_at?: DateTimeNullableFilter<"tipo_actividad"> | Date | string | null
  }, "id" | "nombre">

  export type tipo_actividadOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    tipo_padre_id?: SortOrderInput | SortOrder
    perfil_id?: SortOrderInput | SortOrder
    creado_por?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    update_at?: SortOrderInput | SortOrder
    _count?: tipo_actividadCountOrderByAggregateInput
    _avg?: tipo_actividadAvgOrderByAggregateInput
    _max?: tipo_actividadMaxOrderByAggregateInput
    _min?: tipo_actividadMinOrderByAggregateInput
    _sum?: tipo_actividadSumOrderByAggregateInput
  }

  export type tipo_actividadScalarWhereWithAggregatesInput = {
    AND?: tipo_actividadScalarWhereWithAggregatesInput | tipo_actividadScalarWhereWithAggregatesInput[]
    OR?: tipo_actividadScalarWhereWithAggregatesInput[]
    NOT?: tipo_actividadScalarWhereWithAggregatesInput | tipo_actividadScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"tipo_actividad"> | number
    nombre?: StringWithAggregatesFilter<"tipo_actividad"> | string
    tipo_padre_id?: IntNullableWithAggregatesFilter<"tipo_actividad"> | number | null
    perfil_id?: IntNullableWithAggregatesFilter<"tipo_actividad"> | number | null
    creado_por?: IntNullableWithAggregatesFilter<"tipo_actividad"> | number | null
    created_at?: DateTimeNullableWithAggregatesFilter<"tipo_actividad"> | Date | string | null
    update_at?: DateTimeNullableWithAggregatesFilter<"tipo_actividad"> | Date | string | null
  }

  export type tipo_productoraWhereInput = {
    AND?: tipo_productoraWhereInput | tipo_productoraWhereInput[]
    OR?: tipo_productoraWhereInput[]
    NOT?: tipo_productoraWhereInput | tipo_productoraWhereInput[]
    id?: IntFilter<"tipo_productora"> | number
    nombre?: StringFilter<"tipo_productora"> | string
    tipo_padre_id?: IntNullableFilter<"tipo_productora"> | number | null
    perfil_id?: IntNullableFilter<"tipo_productora"> | number | null
    creado_por?: IntNullableFilter<"tipo_productora"> | number | null
    created_at?: DateTimeNullableFilter<"tipo_productora"> | Date | string | null
    update_at?: DateTimeNullableFilter<"tipo_productora"> | Date | string | null
  }

  export type tipo_productoraOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    tipo_padre_id?: SortOrderInput | SortOrder
    perfil_id?: SortOrderInput | SortOrder
    creado_por?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    update_at?: SortOrderInput | SortOrder
  }

  export type tipo_productoraWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    nombre?: string
    AND?: tipo_productoraWhereInput | tipo_productoraWhereInput[]
    OR?: tipo_productoraWhereInput[]
    NOT?: tipo_productoraWhereInput | tipo_productoraWhereInput[]
    tipo_padre_id?: IntNullableFilter<"tipo_productora"> | number | null
    perfil_id?: IntNullableFilter<"tipo_productora"> | number | null
    creado_por?: IntNullableFilter<"tipo_productora"> | number | null
    created_at?: DateTimeNullableFilter<"tipo_productora"> | Date | string | null
    update_at?: DateTimeNullableFilter<"tipo_productora"> | Date | string | null
  }, "id" | "nombre">

  export type tipo_productoraOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    tipo_padre_id?: SortOrderInput | SortOrder
    perfil_id?: SortOrderInput | SortOrder
    creado_por?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    update_at?: SortOrderInput | SortOrder
    _count?: tipo_productoraCountOrderByAggregateInput
    _avg?: tipo_productoraAvgOrderByAggregateInput
    _max?: tipo_productoraMaxOrderByAggregateInput
    _min?: tipo_productoraMinOrderByAggregateInput
    _sum?: tipo_productoraSumOrderByAggregateInput
  }

  export type tipo_productoraScalarWhereWithAggregatesInput = {
    AND?: tipo_productoraScalarWhereWithAggregatesInput | tipo_productoraScalarWhereWithAggregatesInput[]
    OR?: tipo_productoraScalarWhereWithAggregatesInput[]
    NOT?: tipo_productoraScalarWhereWithAggregatesInput | tipo_productoraScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"tipo_productora"> | number
    nombre?: StringWithAggregatesFilter<"tipo_productora"> | string
    tipo_padre_id?: IntNullableWithAggregatesFilter<"tipo_productora"> | number | null
    perfil_id?: IntNullableWithAggregatesFilter<"tipo_productora"> | number | null
    creado_por?: IntNullableWithAggregatesFilter<"tipo_productora"> | number | null
    created_at?: DateTimeNullableWithAggregatesFilter<"tipo_productora"> | Date | string | null
    update_at?: DateTimeNullableWithAggregatesFilter<"tipo_productora"> | Date | string | null
  }

  export type tipo_servicioWhereInput = {
    AND?: tipo_servicioWhereInput | tipo_servicioWhereInput[]
    OR?: tipo_servicioWhereInput[]
    NOT?: tipo_servicioWhereInput | tipo_servicioWhereInput[]
    id?: IntFilter<"tipo_servicio"> | number
    nombre?: StringFilter<"tipo_servicio"> | string
    tipo_padre_id?: IntNullableFilter<"tipo_servicio"> | number | null
    perfil_id?: IntNullableFilter<"tipo_servicio"> | number | null
    creado_por?: IntNullableFilter<"tipo_servicio"> | number | null
    created_at?: DateTimeNullableFilter<"tipo_servicio"> | Date | string | null
    update_at?: DateTimeNullableFilter<"tipo_servicio"> | Date | string | null
  }

  export type tipo_servicioOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    tipo_padre_id?: SortOrderInput | SortOrder
    perfil_id?: SortOrderInput | SortOrder
    creado_por?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    update_at?: SortOrderInput | SortOrder
  }

  export type tipo_servicioWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    nombre?: string
    AND?: tipo_servicioWhereInput | tipo_servicioWhereInput[]
    OR?: tipo_servicioWhereInput[]
    NOT?: tipo_servicioWhereInput | tipo_servicioWhereInput[]
    tipo_padre_id?: IntNullableFilter<"tipo_servicio"> | number | null
    perfil_id?: IntNullableFilter<"tipo_servicio"> | number | null
    creado_por?: IntNullableFilter<"tipo_servicio"> | number | null
    created_at?: DateTimeNullableFilter<"tipo_servicio"> | Date | string | null
    update_at?: DateTimeNullableFilter<"tipo_servicio"> | Date | string | null
  }, "id" | "nombre">

  export type tipo_servicioOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    tipo_padre_id?: SortOrderInput | SortOrder
    perfil_id?: SortOrderInput | SortOrder
    creado_por?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    update_at?: SortOrderInput | SortOrder
    _count?: tipo_servicioCountOrderByAggregateInput
    _avg?: tipo_servicioAvgOrderByAggregateInput
    _max?: tipo_servicioMaxOrderByAggregateInput
    _min?: tipo_servicioMinOrderByAggregateInput
    _sum?: tipo_servicioSumOrderByAggregateInput
  }

  export type tipo_servicioScalarWhereWithAggregatesInput = {
    AND?: tipo_servicioScalarWhereWithAggregatesInput | tipo_servicioScalarWhereWithAggregatesInput[]
    OR?: tipo_servicioScalarWhereWithAggregatesInput[]
    NOT?: tipo_servicioScalarWhereWithAggregatesInput | tipo_servicioScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"tipo_servicio"> | number
    nombre?: StringWithAggregatesFilter<"tipo_servicio"> | string
    tipo_padre_id?: IntNullableWithAggregatesFilter<"tipo_servicio"> | number | null
    perfil_id?: IntNullableWithAggregatesFilter<"tipo_servicio"> | number | null
    creado_por?: IntNullableWithAggregatesFilter<"tipo_servicio"> | number | null
    created_at?: DateTimeNullableWithAggregatesFilter<"tipo_servicio"> | Date | string | null
    update_at?: DateTimeNullableWithAggregatesFilter<"tipo_servicio"> | Date | string | null
  }

  export type userWhereInput = {
    AND?: userWhereInput | userWhereInput[]
    OR?: userWhereInput[]
    NOT?: userWhereInput | userWhereInput[]
    id?: IntFilter<"user"> | number
    nombre?: StringFilter<"user"> | string
    apellido?: StringFilter<"user"> | string
    email?: StringFilter<"user"> | string
    password?: StringFilter<"user"> | string
    rol?: Enumuser_rolFilter<"user"> | $Enums.user_rol
    created_at?: DateTimeFilter<"user"> | Date | string
    update_at?: DateTimeFilter<"user"> | Date | string
  }

  export type userOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrder
    apellido?: SortOrder
    email?: SortOrder
    password?: SortOrder
    rol?: SortOrder
    created_at?: SortOrder
    update_at?: SortOrder
  }

  export type userWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    email?: string
    AND?: userWhereInput | userWhereInput[]
    OR?: userWhereInput[]
    NOT?: userWhereInput | userWhereInput[]
    nombre?: StringFilter<"user"> | string
    apellido?: StringFilter<"user"> | string
    password?: StringFilter<"user"> | string
    rol?: Enumuser_rolFilter<"user"> | $Enums.user_rol
    created_at?: DateTimeFilter<"user"> | Date | string
    update_at?: DateTimeFilter<"user"> | Date | string
  }, "id" | "email">

  export type userOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrder
    apellido?: SortOrder
    email?: SortOrder
    password?: SortOrder
    rol?: SortOrder
    created_at?: SortOrder
    update_at?: SortOrder
    _count?: userCountOrderByAggregateInput
    _avg?: userAvgOrderByAggregateInput
    _max?: userMaxOrderByAggregateInput
    _min?: userMinOrderByAggregateInput
    _sum?: userSumOrderByAggregateInput
  }

  export type userScalarWhereWithAggregatesInput = {
    AND?: userScalarWhereWithAggregatesInput | userScalarWhereWithAggregatesInput[]
    OR?: userScalarWhereWithAggregatesInput[]
    NOT?: userScalarWhereWithAggregatesInput | userScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"user"> | number
    nombre?: StringWithAggregatesFilter<"user"> | string
    apellido?: StringWithAggregatesFilter<"user"> | string
    email?: StringWithAggregatesFilter<"user"> | string
    password?: StringWithAggregatesFilter<"user"> | string
    rol?: Enumuser_rolWithAggregatesFilter<"user"> | $Enums.user_rol
    created_at?: DateTimeWithAggregatesFilter<"user"> | Date | string
    update_at?: DateTimeWithAggregatesFilter<"user"> | Date | string
  }

  export type usersWhereInput = {
    AND?: usersWhereInput | usersWhereInput[]
    OR?: usersWhereInput[]
    NOT?: usersWhereInput | usersWhereInput[]
    id?: IntFilter<"users"> | number
    nombre?: StringNullableFilter<"users"> | string | null
    apellido?: StringNullableFilter<"users"> | string | null
    email?: StringFilter<"users"> | string
    password?: StringNullableFilter<"users"> | string | null
    rol?: Enumusers_rolNullableFilter<"users"> | $Enums.users_rol | null
    created_at?: DateTimeNullableFilter<"users"> | Date | string | null
    update_at?: DateTimeNullableFilter<"users"> | Date | string | null
  }

  export type usersOrderByWithRelationInput = {
    id?: SortOrder
    nombre?: SortOrderInput | SortOrder
    apellido?: SortOrderInput | SortOrder
    email?: SortOrder
    password?: SortOrderInput | SortOrder
    rol?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    update_at?: SortOrderInput | SortOrder
  }

  export type usersWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    email?: string
    AND?: usersWhereInput | usersWhereInput[]
    OR?: usersWhereInput[]
    NOT?: usersWhereInput | usersWhereInput[]
    nombre?: StringNullableFilter<"users"> | string | null
    apellido?: StringNullableFilter<"users"> | string | null
    password?: StringNullableFilter<"users"> | string | null
    rol?: Enumusers_rolNullableFilter<"users"> | $Enums.users_rol | null
    created_at?: DateTimeNullableFilter<"users"> | Date | string | null
    update_at?: DateTimeNullableFilter<"users"> | Date | string | null
  }, "id" | "email">

  export type usersOrderByWithAggregationInput = {
    id?: SortOrder
    nombre?: SortOrderInput | SortOrder
    apellido?: SortOrderInput | SortOrder
    email?: SortOrder
    password?: SortOrderInput | SortOrder
    rol?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    update_at?: SortOrderInput | SortOrder
    _count?: usersCountOrderByAggregateInput
    _avg?: usersAvgOrderByAggregateInput
    _max?: usersMaxOrderByAggregateInput
    _min?: usersMinOrderByAggregateInput
    _sum?: usersSumOrderByAggregateInput
  }

  export type usersScalarWhereWithAggregatesInput = {
    AND?: usersScalarWhereWithAggregatesInput | usersScalarWhereWithAggregatesInput[]
    OR?: usersScalarWhereWithAggregatesInput[]
    NOT?: usersScalarWhereWithAggregatesInput | usersScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"users"> | number
    nombre?: StringNullableWithAggregatesFilter<"users"> | string | null
    apellido?: StringNullableWithAggregatesFilter<"users"> | string | null
    email?: StringWithAggregatesFilter<"users"> | string
    password?: StringNullableWithAggregatesFilter<"users"> | string | null
    rol?: Enumusers_rolNullableWithAggregatesFilter<"users"> | $Enums.users_rol | null
    created_at?: DateTimeNullableWithAggregatesFilter<"users"> | Date | string | null
    update_at?: DateTimeNullableWithAggregatesFilter<"users"> | Date | string | null
  }

  export type areas_desempenioCreateInput = {
    nombre: string
    area_padre_id?: number | null
    perfil_id?: number | null
    creado_por?: number | null
    created_at?: Date | string | null
    update_at?: Date | string | null
  }

  export type areas_desempenioUncheckedCreateInput = {
    id?: number
    nombre: string
    area_padre_id?: number | null
    perfil_id?: number | null
    creado_por?: number | null
    created_at?: Date | string | null
    update_at?: Date | string | null
  }

  export type areas_desempenioUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    area_padre_id?: NullableIntFieldUpdateOperationsInput | number | null
    perfil_id?: NullableIntFieldUpdateOperationsInput | number | null
    creado_por?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type areas_desempenioUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    area_padre_id?: NullableIntFieldUpdateOperationsInput | number | null
    perfil_id?: NullableIntFieldUpdateOperationsInput | number | null
    creado_por?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type areas_desempenioCreateManyInput = {
    id?: number
    nombre: string
    area_padre_id?: number | null
    perfil_id?: number | null
    creado_por?: number | null
    created_at?: Date | string | null
    update_at?: Date | string | null
  }

  export type areas_desempenioUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    area_padre_id?: NullableIntFieldUpdateOperationsInput | number | null
    perfil_id?: NullableIntFieldUpdateOperationsInput | number | null
    creado_por?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type areas_desempenioUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    area_padre_id?: NullableIntFieldUpdateOperationsInput | number | null
    perfil_id?: NullableIntFieldUpdateOperationsInput | number | null
    creado_por?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type categoria_locacionesCreateInput = {
    nombre: string
    categoria_padre_id?: number | null
    locacion_id?: number | null
    creado_por?: number | null
    created_at?: Date | string | null
    update_at?: Date | string | null
  }

  export type categoria_locacionesUncheckedCreateInput = {
    id?: number
    nombre: string
    categoria_padre_id?: number | null
    locacion_id?: number | null
    creado_por?: number | null
    created_at?: Date | string | null
    update_at?: Date | string | null
  }

  export type categoria_locacionesUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    categoria_padre_id?: NullableIntFieldUpdateOperationsInput | number | null
    locacion_id?: NullableIntFieldUpdateOperationsInput | number | null
    creado_por?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type categoria_locacionesUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    categoria_padre_id?: NullableIntFieldUpdateOperationsInput | number | null
    locacion_id?: NullableIntFieldUpdateOperationsInput | number | null
    creado_por?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type categoria_locacionesCreateManyInput = {
    id?: number
    nombre: string
    categoria_padre_id?: number | null
    locacion_id?: number | null
    creado_por?: number | null
    created_at?: Date | string | null
    update_at?: Date | string | null
  }

  export type categoria_locacionesUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    categoria_padre_id?: NullableIntFieldUpdateOperationsInput | number | null
    locacion_id?: NullableIntFieldUpdateOperationsInput | number | null
    creado_por?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type categoria_locacionesUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    categoria_padre_id?: NullableIntFieldUpdateOperationsInput | number | null
    locacion_id?: NullableIntFieldUpdateOperationsInput | number | null
    creado_por?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type imagenes_locacionesCreateInput = {
    nombre?: string | null
    descripcion?: string | null
    link?: string | null
    locacion_id?: number | null
    creado_por?: number | null
    created_at?: Date | string | null
    update_at?: Date | string | null
  }

  export type imagenes_locacionesUncheckedCreateInput = {
    id?: number
    nombre?: string | null
    descripcion?: string | null
    link?: string | null
    locacion_id?: number | null
    creado_por?: number | null
    created_at?: Date | string | null
    update_at?: Date | string | null
  }

  export type imagenes_locacionesUpdateInput = {
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    link?: NullableStringFieldUpdateOperationsInput | string | null
    locacion_id?: NullableIntFieldUpdateOperationsInput | number | null
    creado_por?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type imagenes_locacionesUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    link?: NullableStringFieldUpdateOperationsInput | string | null
    locacion_id?: NullableIntFieldUpdateOperationsInput | number | null
    creado_por?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type imagenes_locacionesCreateManyInput = {
    id?: number
    nombre?: string | null
    descripcion?: string | null
    link?: string | null
    locacion_id?: number | null
    creado_por?: number | null
    created_at?: Date | string | null
    update_at?: Date | string | null
  }

  export type imagenes_locacionesUpdateManyMutationInput = {
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    link?: NullableStringFieldUpdateOperationsInput | string | null
    locacion_id?: NullableIntFieldUpdateOperationsInput | number | null
    creado_por?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type imagenes_locacionesUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    link?: NullableStringFieldUpdateOperationsInput | string | null
    locacion_id?: NullableIntFieldUpdateOperationsInput | number | null
    creado_por?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type imagenes_prestadoresCreateInput = {
    nombre?: string | null
    descripcion?: string | null
    link?: string | null
    perfil_id?: number | null
    creado_por?: number | null
    created_at?: Date | string | null
    update_at?: Date | string | null
  }

  export type imagenes_prestadoresUncheckedCreateInput = {
    id?: number
    nombre?: string | null
    descripcion?: string | null
    link?: string | null
    perfil_id?: number | null
    creado_por?: number | null
    created_at?: Date | string | null
    update_at?: Date | string | null
  }

  export type imagenes_prestadoresUpdateInput = {
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    link?: NullableStringFieldUpdateOperationsInput | string | null
    perfil_id?: NullableIntFieldUpdateOperationsInput | number | null
    creado_por?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type imagenes_prestadoresUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    link?: NullableStringFieldUpdateOperationsInput | string | null
    perfil_id?: NullableIntFieldUpdateOperationsInput | number | null
    creado_por?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type imagenes_prestadoresCreateManyInput = {
    id?: number
    nombre?: string | null
    descripcion?: string | null
    link?: string | null
    perfil_id?: number | null
    creado_por?: number | null
    created_at?: Date | string | null
    update_at?: Date | string | null
  }

  export type imagenes_prestadoresUpdateManyMutationInput = {
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    link?: NullableStringFieldUpdateOperationsInput | string | null
    perfil_id?: NullableIntFieldUpdateOperationsInput | number | null
    creado_por?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type imagenes_prestadoresUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    link?: NullableStringFieldUpdateOperationsInput | string | null
    perfil_id?: NullableIntFieldUpdateOperationsInput | number | null
    creado_por?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type locacionesCreateInput = {
    nombre: string
    descripcion?: string | null
    ciudad?: $Enums.locaciones_ciudad | null
    jurisdiccion?: $Enums.locaciones_jurisdiccion | null
    direccion?: string | null
    instagram?: string | null
    facebook?: string | null
    sitio_web?: string | null
    telefono?: number | null
    email?: string | null
    imagen_perfil?: number | null
    direccion_latitud?: number | null
    direccion_longitud?: number | null
    categoria_id?: number | null
    creado_por?: number | null
    created_at?: Date | string | null
    update_at?: Date | string | null
  }

  export type locacionesUncheckedCreateInput = {
    id?: number
    nombre: string
    descripcion?: string | null
    ciudad?: $Enums.locaciones_ciudad | null
    jurisdiccion?: $Enums.locaciones_jurisdiccion | null
    direccion?: string | null
    instagram?: string | null
    facebook?: string | null
    sitio_web?: string | null
    telefono?: number | null
    email?: string | null
    imagen_perfil?: number | null
    direccion_latitud?: number | null
    direccion_longitud?: number | null
    categoria_id?: number | null
    creado_por?: number | null
    created_at?: Date | string | null
    update_at?: Date | string | null
  }

  export type locacionesUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    ciudad?: NullableEnumlocaciones_ciudadFieldUpdateOperationsInput | $Enums.locaciones_ciudad | null
    jurisdiccion?: NullableEnumlocaciones_jurisdiccionFieldUpdateOperationsInput | $Enums.locaciones_jurisdiccion | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    instagram?: NullableStringFieldUpdateOperationsInput | string | null
    facebook?: NullableStringFieldUpdateOperationsInput | string | null
    sitio_web?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableIntFieldUpdateOperationsInput | number | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    imagen_perfil?: NullableIntFieldUpdateOperationsInput | number | null
    direccion_latitud?: NullableFloatFieldUpdateOperationsInput | number | null
    direccion_longitud?: NullableFloatFieldUpdateOperationsInput | number | null
    categoria_id?: NullableIntFieldUpdateOperationsInput | number | null
    creado_por?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type locacionesUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    ciudad?: NullableEnumlocaciones_ciudadFieldUpdateOperationsInput | $Enums.locaciones_ciudad | null
    jurisdiccion?: NullableEnumlocaciones_jurisdiccionFieldUpdateOperationsInput | $Enums.locaciones_jurisdiccion | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    instagram?: NullableStringFieldUpdateOperationsInput | string | null
    facebook?: NullableStringFieldUpdateOperationsInput | string | null
    sitio_web?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableIntFieldUpdateOperationsInput | number | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    imagen_perfil?: NullableIntFieldUpdateOperationsInput | number | null
    direccion_latitud?: NullableFloatFieldUpdateOperationsInput | number | null
    direccion_longitud?: NullableFloatFieldUpdateOperationsInput | number | null
    categoria_id?: NullableIntFieldUpdateOperationsInput | number | null
    creado_por?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type locacionesCreateManyInput = {
    id?: number
    nombre: string
    descripcion?: string | null
    ciudad?: $Enums.locaciones_ciudad | null
    jurisdiccion?: $Enums.locaciones_jurisdiccion | null
    direccion?: string | null
    instagram?: string | null
    facebook?: string | null
    sitio_web?: string | null
    telefono?: number | null
    email?: string | null
    imagen_perfil?: number | null
    direccion_latitud?: number | null
    direccion_longitud?: number | null
    categoria_id?: number | null
    creado_por?: number | null
    created_at?: Date | string | null
    update_at?: Date | string | null
  }

  export type locacionesUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    ciudad?: NullableEnumlocaciones_ciudadFieldUpdateOperationsInput | $Enums.locaciones_ciudad | null
    jurisdiccion?: NullableEnumlocaciones_jurisdiccionFieldUpdateOperationsInput | $Enums.locaciones_jurisdiccion | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    instagram?: NullableStringFieldUpdateOperationsInput | string | null
    facebook?: NullableStringFieldUpdateOperationsInput | string | null
    sitio_web?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableIntFieldUpdateOperationsInput | number | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    imagen_perfil?: NullableIntFieldUpdateOperationsInput | number | null
    direccion_latitud?: NullableFloatFieldUpdateOperationsInput | number | null
    direccion_longitud?: NullableFloatFieldUpdateOperationsInput | number | null
    categoria_id?: NullableIntFieldUpdateOperationsInput | number | null
    creado_por?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type locacionesUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    ciudad?: NullableEnumlocaciones_ciudadFieldUpdateOperationsInput | $Enums.locaciones_ciudad | null
    jurisdiccion?: NullableEnumlocaciones_jurisdiccionFieldUpdateOperationsInput | $Enums.locaciones_jurisdiccion | null
    direccion?: NullableStringFieldUpdateOperationsInput | string | null
    instagram?: NullableStringFieldUpdateOperationsInput | string | null
    facebook?: NullableStringFieldUpdateOperationsInput | string | null
    sitio_web?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableIntFieldUpdateOperationsInput | number | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    imagen_perfil?: NullableIntFieldUpdateOperationsInput | number | null
    direccion_latitud?: NullableFloatFieldUpdateOperationsInput | number | null
    direccion_longitud?: NullableFloatFieldUpdateOperationsInput | number | null
    categoria_id?: NullableIntFieldUpdateOperationsInput | number | null
    creado_por?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type perfilCreateInput = {
    perfil?: $Enums.perfil_perfil | null
    descripcion?: string | null
    user_id?: number | null
    nombre_entidad: string
    imagen_perfil?: number | null
    experiencia_laboral?: string | null
    area_cobertura?: $Enums.perfil_area_cobertura | null
    email?: string | null
    telefono?: number | null
    instagram?: string | null
    facebook?: string | null
    sitio_web?: string | null
    tipo_productora_id?: number | null
    areas_desempenio_id?: number | null
    tipo_servicio_id?: number | null
    tipo_actividad_id?: number | null
    idioma?: $Enums.perfil_idioma | null
    created_at?: Date | string | null
    update_at?: Date | string | null
  }

  export type perfilUncheckedCreateInput = {
    id?: number
    perfil?: $Enums.perfil_perfil | null
    descripcion?: string | null
    user_id?: number | null
    nombre_entidad: string
    imagen_perfil?: number | null
    experiencia_laboral?: string | null
    area_cobertura?: $Enums.perfil_area_cobertura | null
    email?: string | null
    telefono?: number | null
    instagram?: string | null
    facebook?: string | null
    sitio_web?: string | null
    tipo_productora_id?: number | null
    areas_desempenio_id?: number | null
    tipo_servicio_id?: number | null
    tipo_actividad_id?: number | null
    idioma?: $Enums.perfil_idioma | null
    created_at?: Date | string | null
    update_at?: Date | string | null
  }

  export type perfilUpdateInput = {
    perfil?: NullableEnumperfil_perfilFieldUpdateOperationsInput | $Enums.perfil_perfil | null
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: NullableIntFieldUpdateOperationsInput | number | null
    nombre_entidad?: StringFieldUpdateOperationsInput | string
    imagen_perfil?: NullableIntFieldUpdateOperationsInput | number | null
    experiencia_laboral?: NullableStringFieldUpdateOperationsInput | string | null
    area_cobertura?: NullableEnumperfil_area_coberturaFieldUpdateOperationsInput | $Enums.perfil_area_cobertura | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableIntFieldUpdateOperationsInput | number | null
    instagram?: NullableStringFieldUpdateOperationsInput | string | null
    facebook?: NullableStringFieldUpdateOperationsInput | string | null
    sitio_web?: NullableStringFieldUpdateOperationsInput | string | null
    tipo_productora_id?: NullableIntFieldUpdateOperationsInput | number | null
    areas_desempenio_id?: NullableIntFieldUpdateOperationsInput | number | null
    tipo_servicio_id?: NullableIntFieldUpdateOperationsInput | number | null
    tipo_actividad_id?: NullableIntFieldUpdateOperationsInput | number | null
    idioma?: NullableEnumperfil_idiomaFieldUpdateOperationsInput | $Enums.perfil_idioma | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type perfilUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    perfil?: NullableEnumperfil_perfilFieldUpdateOperationsInput | $Enums.perfil_perfil | null
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: NullableIntFieldUpdateOperationsInput | number | null
    nombre_entidad?: StringFieldUpdateOperationsInput | string
    imagen_perfil?: NullableIntFieldUpdateOperationsInput | number | null
    experiencia_laboral?: NullableStringFieldUpdateOperationsInput | string | null
    area_cobertura?: NullableEnumperfil_area_coberturaFieldUpdateOperationsInput | $Enums.perfil_area_cobertura | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableIntFieldUpdateOperationsInput | number | null
    instagram?: NullableStringFieldUpdateOperationsInput | string | null
    facebook?: NullableStringFieldUpdateOperationsInput | string | null
    sitio_web?: NullableStringFieldUpdateOperationsInput | string | null
    tipo_productora_id?: NullableIntFieldUpdateOperationsInput | number | null
    areas_desempenio_id?: NullableIntFieldUpdateOperationsInput | number | null
    tipo_servicio_id?: NullableIntFieldUpdateOperationsInput | number | null
    tipo_actividad_id?: NullableIntFieldUpdateOperationsInput | number | null
    idioma?: NullableEnumperfil_idiomaFieldUpdateOperationsInput | $Enums.perfil_idioma | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type perfilCreateManyInput = {
    id?: number
    perfil?: $Enums.perfil_perfil | null
    descripcion?: string | null
    user_id?: number | null
    nombre_entidad: string
    imagen_perfil?: number | null
    experiencia_laboral?: string | null
    area_cobertura?: $Enums.perfil_area_cobertura | null
    email?: string | null
    telefono?: number | null
    instagram?: string | null
    facebook?: string | null
    sitio_web?: string | null
    tipo_productora_id?: number | null
    areas_desempenio_id?: number | null
    tipo_servicio_id?: number | null
    tipo_actividad_id?: number | null
    idioma?: $Enums.perfil_idioma | null
    created_at?: Date | string | null
    update_at?: Date | string | null
  }

  export type perfilUpdateManyMutationInput = {
    perfil?: NullableEnumperfil_perfilFieldUpdateOperationsInput | $Enums.perfil_perfil | null
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: NullableIntFieldUpdateOperationsInput | number | null
    nombre_entidad?: StringFieldUpdateOperationsInput | string
    imagen_perfil?: NullableIntFieldUpdateOperationsInput | number | null
    experiencia_laboral?: NullableStringFieldUpdateOperationsInput | string | null
    area_cobertura?: NullableEnumperfil_area_coberturaFieldUpdateOperationsInput | $Enums.perfil_area_cobertura | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableIntFieldUpdateOperationsInput | number | null
    instagram?: NullableStringFieldUpdateOperationsInput | string | null
    facebook?: NullableStringFieldUpdateOperationsInput | string | null
    sitio_web?: NullableStringFieldUpdateOperationsInput | string | null
    tipo_productora_id?: NullableIntFieldUpdateOperationsInput | number | null
    areas_desempenio_id?: NullableIntFieldUpdateOperationsInput | number | null
    tipo_servicio_id?: NullableIntFieldUpdateOperationsInput | number | null
    tipo_actividad_id?: NullableIntFieldUpdateOperationsInput | number | null
    idioma?: NullableEnumperfil_idiomaFieldUpdateOperationsInput | $Enums.perfil_idioma | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type perfilUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    perfil?: NullableEnumperfil_perfilFieldUpdateOperationsInput | $Enums.perfil_perfil | null
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: NullableIntFieldUpdateOperationsInput | number | null
    nombre_entidad?: StringFieldUpdateOperationsInput | string
    imagen_perfil?: NullableIntFieldUpdateOperationsInput | number | null
    experiencia_laboral?: NullableStringFieldUpdateOperationsInput | string | null
    area_cobertura?: NullableEnumperfil_area_coberturaFieldUpdateOperationsInput | $Enums.perfil_area_cobertura | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    telefono?: NullableIntFieldUpdateOperationsInput | number | null
    instagram?: NullableStringFieldUpdateOperationsInput | string | null
    facebook?: NullableStringFieldUpdateOperationsInput | string | null
    sitio_web?: NullableStringFieldUpdateOperationsInput | string | null
    tipo_productora_id?: NullableIntFieldUpdateOperationsInput | number | null
    areas_desempenio_id?: NullableIntFieldUpdateOperationsInput | number | null
    tipo_servicio_id?: NullableIntFieldUpdateOperationsInput | number | null
    tipo_actividad_id?: NullableIntFieldUpdateOperationsInput | number | null
    idioma?: NullableEnumperfil_idiomaFieldUpdateOperationsInput | $Enums.perfil_idioma | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type permisosCreateInput = {
    nombre: string
    descripcion?: string | null
    link?: string | null
    creado_por?: number | null
    created_at?: Date | string | null
    update_at?: Date | string | null
  }

  export type permisosUncheckedCreateInput = {
    id?: number
    nombre: string
    descripcion?: string | null
    link?: string | null
    creado_por?: number | null
    created_at?: Date | string | null
    update_at?: Date | string | null
  }

  export type permisosUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    link?: NullableStringFieldUpdateOperationsInput | string | null
    creado_por?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type permisosUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    link?: NullableStringFieldUpdateOperationsInput | string | null
    creado_por?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type permisosCreateManyInput = {
    id?: number
    nombre: string
    descripcion?: string | null
    link?: string | null
    creado_por?: number | null
    created_at?: Date | string | null
    update_at?: Date | string | null
  }

  export type permisosUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    link?: NullableStringFieldUpdateOperationsInput | string | null
    creado_por?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type permisosUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    descripcion?: NullableStringFieldUpdateOperationsInput | string | null
    link?: NullableStringFieldUpdateOperationsInput | string | null
    creado_por?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type tipo_actividadCreateInput = {
    nombre: string
    tipo_padre_id?: number | null
    perfil_id?: number | null
    creado_por?: number | null
    created_at?: Date | string | null
    update_at?: Date | string | null
  }

  export type tipo_actividadUncheckedCreateInput = {
    id?: number
    nombre: string
    tipo_padre_id?: number | null
    perfil_id?: number | null
    creado_por?: number | null
    created_at?: Date | string | null
    update_at?: Date | string | null
  }

  export type tipo_actividadUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    tipo_padre_id?: NullableIntFieldUpdateOperationsInput | number | null
    perfil_id?: NullableIntFieldUpdateOperationsInput | number | null
    creado_por?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type tipo_actividadUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    tipo_padre_id?: NullableIntFieldUpdateOperationsInput | number | null
    perfil_id?: NullableIntFieldUpdateOperationsInput | number | null
    creado_por?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type tipo_actividadCreateManyInput = {
    id?: number
    nombre: string
    tipo_padre_id?: number | null
    perfil_id?: number | null
    creado_por?: number | null
    created_at?: Date | string | null
    update_at?: Date | string | null
  }

  export type tipo_actividadUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    tipo_padre_id?: NullableIntFieldUpdateOperationsInput | number | null
    perfil_id?: NullableIntFieldUpdateOperationsInput | number | null
    creado_por?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type tipo_actividadUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    tipo_padre_id?: NullableIntFieldUpdateOperationsInput | number | null
    perfil_id?: NullableIntFieldUpdateOperationsInput | number | null
    creado_por?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type tipo_productoraCreateInput = {
    nombre: string
    tipo_padre_id?: number | null
    perfil_id?: number | null
    creado_por?: number | null
    created_at?: Date | string | null
    update_at?: Date | string | null
  }

  export type tipo_productoraUncheckedCreateInput = {
    id?: number
    nombre: string
    tipo_padre_id?: number | null
    perfil_id?: number | null
    creado_por?: number | null
    created_at?: Date | string | null
    update_at?: Date | string | null
  }

  export type tipo_productoraUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    tipo_padre_id?: NullableIntFieldUpdateOperationsInput | number | null
    perfil_id?: NullableIntFieldUpdateOperationsInput | number | null
    creado_por?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type tipo_productoraUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    tipo_padre_id?: NullableIntFieldUpdateOperationsInput | number | null
    perfil_id?: NullableIntFieldUpdateOperationsInput | number | null
    creado_por?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type tipo_productoraCreateManyInput = {
    id?: number
    nombre: string
    tipo_padre_id?: number | null
    perfil_id?: number | null
    creado_por?: number | null
    created_at?: Date | string | null
    update_at?: Date | string | null
  }

  export type tipo_productoraUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    tipo_padre_id?: NullableIntFieldUpdateOperationsInput | number | null
    perfil_id?: NullableIntFieldUpdateOperationsInput | number | null
    creado_por?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type tipo_productoraUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    tipo_padre_id?: NullableIntFieldUpdateOperationsInput | number | null
    perfil_id?: NullableIntFieldUpdateOperationsInput | number | null
    creado_por?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type tipo_servicioCreateInput = {
    nombre: string
    tipo_padre_id?: number | null
    perfil_id?: number | null
    creado_por?: number | null
    created_at?: Date | string | null
    update_at?: Date | string | null
  }

  export type tipo_servicioUncheckedCreateInput = {
    id?: number
    nombre: string
    tipo_padre_id?: number | null
    perfil_id?: number | null
    creado_por?: number | null
    created_at?: Date | string | null
    update_at?: Date | string | null
  }

  export type tipo_servicioUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    tipo_padre_id?: NullableIntFieldUpdateOperationsInput | number | null
    perfil_id?: NullableIntFieldUpdateOperationsInput | number | null
    creado_por?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type tipo_servicioUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    tipo_padre_id?: NullableIntFieldUpdateOperationsInput | number | null
    perfil_id?: NullableIntFieldUpdateOperationsInput | number | null
    creado_por?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type tipo_servicioCreateManyInput = {
    id?: number
    nombre: string
    tipo_padre_id?: number | null
    perfil_id?: number | null
    creado_por?: number | null
    created_at?: Date | string | null
    update_at?: Date | string | null
  }

  export type tipo_servicioUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    tipo_padre_id?: NullableIntFieldUpdateOperationsInput | number | null
    perfil_id?: NullableIntFieldUpdateOperationsInput | number | null
    creado_por?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type tipo_servicioUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    tipo_padre_id?: NullableIntFieldUpdateOperationsInput | number | null
    perfil_id?: NullableIntFieldUpdateOperationsInput | number | null
    creado_por?: NullableIntFieldUpdateOperationsInput | number | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type userCreateInput = {
    nombre: string
    apellido: string
    email: string
    password: string
    rol: $Enums.user_rol
    created_at?: Date | string
    update_at?: Date | string
  }

  export type userUncheckedCreateInput = {
    id?: number
    nombre: string
    apellido: string
    email: string
    password: string
    rol: $Enums.user_rol
    created_at?: Date | string
    update_at?: Date | string
  }

  export type userUpdateInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    rol?: Enumuser_rolFieldUpdateOperationsInput | $Enums.user_rol
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    update_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type userUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    rol?: Enumuser_rolFieldUpdateOperationsInput | $Enums.user_rol
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    update_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type userCreateManyInput = {
    id?: number
    nombre: string
    apellido: string
    email: string
    password: string
    rol: $Enums.user_rol
    created_at?: Date | string
    update_at?: Date | string
  }

  export type userUpdateManyMutationInput = {
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    rol?: Enumuser_rolFieldUpdateOperationsInput | $Enums.user_rol
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    update_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type userUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: StringFieldUpdateOperationsInput | string
    apellido?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    rol?: Enumuser_rolFieldUpdateOperationsInput | $Enums.user_rol
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    update_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type usersCreateInput = {
    nombre?: string | null
    apellido?: string | null
    email: string
    password?: string | null
    rol?: $Enums.users_rol | null
    created_at?: Date | string | null
    update_at?: Date | string | null
  }

  export type usersUncheckedCreateInput = {
    id?: number
    nombre?: string | null
    apellido?: string | null
    email: string
    password?: string | null
    rol?: $Enums.users_rol | null
    created_at?: Date | string | null
    update_at?: Date | string | null
  }

  export type usersUpdateInput = {
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    rol?: NullableEnumusers_rolFieldUpdateOperationsInput | $Enums.users_rol | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type usersUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    rol?: NullableEnumusers_rolFieldUpdateOperationsInput | $Enums.users_rol | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type usersCreateManyInput = {
    id?: number
    nombre?: string | null
    apellido?: string | null
    email: string
    password?: string | null
    rol?: $Enums.users_rol | null
    created_at?: Date | string | null
    update_at?: Date | string | null
  }

  export type usersUpdateManyMutationInput = {
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    rol?: NullableEnumusers_rolFieldUpdateOperationsInput | $Enums.users_rol | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type usersUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    nombre?: NullableStringFieldUpdateOperationsInput | string | null
    apellido?: NullableStringFieldUpdateOperationsInput | string | null
    email?: StringFieldUpdateOperationsInput | string
    password?: NullableStringFieldUpdateOperationsInput | string | null
    rol?: NullableEnumusers_rolFieldUpdateOperationsInput | $Enums.users_rol | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    update_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type areas_desempenioCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    area_padre_id?: SortOrder
    perfil_id?: SortOrder
    creado_por?: SortOrder
    created_at?: SortOrder
    update_at?: SortOrder
  }

  export type areas_desempenioAvgOrderByAggregateInput = {
    id?: SortOrder
    area_padre_id?: SortOrder
    perfil_id?: SortOrder
    creado_por?: SortOrder
  }

  export type areas_desempenioMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    area_padre_id?: SortOrder
    perfil_id?: SortOrder
    creado_por?: SortOrder
    created_at?: SortOrder
    update_at?: SortOrder
  }

  export type areas_desempenioMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    area_padre_id?: SortOrder
    perfil_id?: SortOrder
    creado_por?: SortOrder
    created_at?: SortOrder
    update_at?: SortOrder
  }

  export type areas_desempenioSumOrderByAggregateInput = {
    id?: SortOrder
    area_padre_id?: SortOrder
    perfil_id?: SortOrder
    creado_por?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type categoria_locacionesCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    categoria_padre_id?: SortOrder
    locacion_id?: SortOrder
    creado_por?: SortOrder
    created_at?: SortOrder
    update_at?: SortOrder
  }

  export type categoria_locacionesAvgOrderByAggregateInput = {
    id?: SortOrder
    categoria_padre_id?: SortOrder
    locacion_id?: SortOrder
    creado_por?: SortOrder
  }

  export type categoria_locacionesMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    categoria_padre_id?: SortOrder
    locacion_id?: SortOrder
    creado_por?: SortOrder
    created_at?: SortOrder
    update_at?: SortOrder
  }

  export type categoria_locacionesMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    categoria_padre_id?: SortOrder
    locacion_id?: SortOrder
    creado_por?: SortOrder
    created_at?: SortOrder
    update_at?: SortOrder
  }

  export type categoria_locacionesSumOrderByAggregateInput = {
    id?: SortOrder
    categoria_padre_id?: SortOrder
    locacion_id?: SortOrder
    creado_por?: SortOrder
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type imagenes_locacionesCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
    link?: SortOrder
    locacion_id?: SortOrder
    creado_por?: SortOrder
    created_at?: SortOrder
    update_at?: SortOrder
  }

  export type imagenes_locacionesAvgOrderByAggregateInput = {
    id?: SortOrder
    locacion_id?: SortOrder
    creado_por?: SortOrder
  }

  export type imagenes_locacionesMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
    link?: SortOrder
    locacion_id?: SortOrder
    creado_por?: SortOrder
    created_at?: SortOrder
    update_at?: SortOrder
  }

  export type imagenes_locacionesMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
    link?: SortOrder
    locacion_id?: SortOrder
    creado_por?: SortOrder
    created_at?: SortOrder
    update_at?: SortOrder
  }

  export type imagenes_locacionesSumOrderByAggregateInput = {
    id?: SortOrder
    locacion_id?: SortOrder
    creado_por?: SortOrder
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type imagenes_prestadoresCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
    link?: SortOrder
    perfil_id?: SortOrder
    creado_por?: SortOrder
    created_at?: SortOrder
    update_at?: SortOrder
  }

  export type imagenes_prestadoresAvgOrderByAggregateInput = {
    id?: SortOrder
    perfil_id?: SortOrder
    creado_por?: SortOrder
  }

  export type imagenes_prestadoresMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
    link?: SortOrder
    perfil_id?: SortOrder
    creado_por?: SortOrder
    created_at?: SortOrder
    update_at?: SortOrder
  }

  export type imagenes_prestadoresMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
    link?: SortOrder
    perfil_id?: SortOrder
    creado_por?: SortOrder
    created_at?: SortOrder
    update_at?: SortOrder
  }

  export type imagenes_prestadoresSumOrderByAggregateInput = {
    id?: SortOrder
    perfil_id?: SortOrder
    creado_por?: SortOrder
  }

  export type Enumlocaciones_ciudadNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.locaciones_ciudad | Enumlocaciones_ciudadFieldRefInput<$PrismaModel> | null
    in?: $Enums.locaciones_ciudad[] | null
    notIn?: $Enums.locaciones_ciudad[] | null
    not?: NestedEnumlocaciones_ciudadNullableFilter<$PrismaModel> | $Enums.locaciones_ciudad | null
  }

  export type Enumlocaciones_jurisdiccionNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.locaciones_jurisdiccion | Enumlocaciones_jurisdiccionFieldRefInput<$PrismaModel> | null
    in?: $Enums.locaciones_jurisdiccion[] | null
    notIn?: $Enums.locaciones_jurisdiccion[] | null
    not?: NestedEnumlocaciones_jurisdiccionNullableFilter<$PrismaModel> | $Enums.locaciones_jurisdiccion | null
  }

  export type FloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type locacionesCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
    ciudad?: SortOrder
    jurisdiccion?: SortOrder
    direccion?: SortOrder
    instagram?: SortOrder
    facebook?: SortOrder
    sitio_web?: SortOrder
    telefono?: SortOrder
    email?: SortOrder
    imagen_perfil?: SortOrder
    direccion_latitud?: SortOrder
    direccion_longitud?: SortOrder
    categoria_id?: SortOrder
    creado_por?: SortOrder
    created_at?: SortOrder
    update_at?: SortOrder
  }

  export type locacionesAvgOrderByAggregateInput = {
    id?: SortOrder
    telefono?: SortOrder
    imagen_perfil?: SortOrder
    direccion_latitud?: SortOrder
    direccion_longitud?: SortOrder
    categoria_id?: SortOrder
    creado_por?: SortOrder
  }

  export type locacionesMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
    ciudad?: SortOrder
    jurisdiccion?: SortOrder
    direccion?: SortOrder
    instagram?: SortOrder
    facebook?: SortOrder
    sitio_web?: SortOrder
    telefono?: SortOrder
    email?: SortOrder
    imagen_perfil?: SortOrder
    direccion_latitud?: SortOrder
    direccion_longitud?: SortOrder
    categoria_id?: SortOrder
    creado_por?: SortOrder
    created_at?: SortOrder
    update_at?: SortOrder
  }

  export type locacionesMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
    ciudad?: SortOrder
    jurisdiccion?: SortOrder
    direccion?: SortOrder
    instagram?: SortOrder
    facebook?: SortOrder
    sitio_web?: SortOrder
    telefono?: SortOrder
    email?: SortOrder
    imagen_perfil?: SortOrder
    direccion_latitud?: SortOrder
    direccion_longitud?: SortOrder
    categoria_id?: SortOrder
    creado_por?: SortOrder
    created_at?: SortOrder
    update_at?: SortOrder
  }

  export type locacionesSumOrderByAggregateInput = {
    id?: SortOrder
    telefono?: SortOrder
    imagen_perfil?: SortOrder
    direccion_latitud?: SortOrder
    direccion_longitud?: SortOrder
    categoria_id?: SortOrder
    creado_por?: SortOrder
  }

  export type Enumlocaciones_ciudadNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.locaciones_ciudad | Enumlocaciones_ciudadFieldRefInput<$PrismaModel> | null
    in?: $Enums.locaciones_ciudad[] | null
    notIn?: $Enums.locaciones_ciudad[] | null
    not?: NestedEnumlocaciones_ciudadNullableWithAggregatesFilter<$PrismaModel> | $Enums.locaciones_ciudad | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumlocaciones_ciudadNullableFilter<$PrismaModel>
    _max?: NestedEnumlocaciones_ciudadNullableFilter<$PrismaModel>
  }

  export type Enumlocaciones_jurisdiccionNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.locaciones_jurisdiccion | Enumlocaciones_jurisdiccionFieldRefInput<$PrismaModel> | null
    in?: $Enums.locaciones_jurisdiccion[] | null
    notIn?: $Enums.locaciones_jurisdiccion[] | null
    not?: NestedEnumlocaciones_jurisdiccionNullableWithAggregatesFilter<$PrismaModel> | $Enums.locaciones_jurisdiccion | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumlocaciones_jurisdiccionNullableFilter<$PrismaModel>
    _max?: NestedEnumlocaciones_jurisdiccionNullableFilter<$PrismaModel>
  }

  export type FloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type Enumperfil_perfilNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.perfil_perfil | Enumperfil_perfilFieldRefInput<$PrismaModel> | null
    in?: $Enums.perfil_perfil[] | null
    notIn?: $Enums.perfil_perfil[] | null
    not?: NestedEnumperfil_perfilNullableFilter<$PrismaModel> | $Enums.perfil_perfil | null
  }

  export type Enumperfil_area_coberturaNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.perfil_area_cobertura | Enumperfil_area_coberturaFieldRefInput<$PrismaModel> | null
    in?: $Enums.perfil_area_cobertura[] | null
    notIn?: $Enums.perfil_area_cobertura[] | null
    not?: NestedEnumperfil_area_coberturaNullableFilter<$PrismaModel> | $Enums.perfil_area_cobertura | null
  }

  export type Enumperfil_idiomaNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.perfil_idioma | Enumperfil_idiomaFieldRefInput<$PrismaModel> | null
    in?: $Enums.perfil_idioma[] | null
    notIn?: $Enums.perfil_idioma[] | null
    not?: NestedEnumperfil_idiomaNullableFilter<$PrismaModel> | $Enums.perfil_idioma | null
  }

  export type perfilCountOrderByAggregateInput = {
    id?: SortOrder
    perfil?: SortOrder
    descripcion?: SortOrder
    user_id?: SortOrder
    nombre_entidad?: SortOrder
    imagen_perfil?: SortOrder
    experiencia_laboral?: SortOrder
    area_cobertura?: SortOrder
    email?: SortOrder
    telefono?: SortOrder
    instagram?: SortOrder
    facebook?: SortOrder
    sitio_web?: SortOrder
    tipo_productora_id?: SortOrder
    areas_desempenio_id?: SortOrder
    tipo_servicio_id?: SortOrder
    tipo_actividad_id?: SortOrder
    idioma?: SortOrder
    created_at?: SortOrder
    update_at?: SortOrder
  }

  export type perfilAvgOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    imagen_perfil?: SortOrder
    telefono?: SortOrder
    tipo_productora_id?: SortOrder
    areas_desempenio_id?: SortOrder
    tipo_servicio_id?: SortOrder
    tipo_actividad_id?: SortOrder
  }

  export type perfilMaxOrderByAggregateInput = {
    id?: SortOrder
    perfil?: SortOrder
    descripcion?: SortOrder
    user_id?: SortOrder
    nombre_entidad?: SortOrder
    imagen_perfil?: SortOrder
    experiencia_laboral?: SortOrder
    area_cobertura?: SortOrder
    email?: SortOrder
    telefono?: SortOrder
    instagram?: SortOrder
    facebook?: SortOrder
    sitio_web?: SortOrder
    tipo_productora_id?: SortOrder
    areas_desempenio_id?: SortOrder
    tipo_servicio_id?: SortOrder
    tipo_actividad_id?: SortOrder
    idioma?: SortOrder
    created_at?: SortOrder
    update_at?: SortOrder
  }

  export type perfilMinOrderByAggregateInput = {
    id?: SortOrder
    perfil?: SortOrder
    descripcion?: SortOrder
    user_id?: SortOrder
    nombre_entidad?: SortOrder
    imagen_perfil?: SortOrder
    experiencia_laboral?: SortOrder
    area_cobertura?: SortOrder
    email?: SortOrder
    telefono?: SortOrder
    instagram?: SortOrder
    facebook?: SortOrder
    sitio_web?: SortOrder
    tipo_productora_id?: SortOrder
    areas_desempenio_id?: SortOrder
    tipo_servicio_id?: SortOrder
    tipo_actividad_id?: SortOrder
    idioma?: SortOrder
    created_at?: SortOrder
    update_at?: SortOrder
  }

  export type perfilSumOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    imagen_perfil?: SortOrder
    telefono?: SortOrder
    tipo_productora_id?: SortOrder
    areas_desempenio_id?: SortOrder
    tipo_servicio_id?: SortOrder
    tipo_actividad_id?: SortOrder
  }

  export type Enumperfil_perfilNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.perfil_perfil | Enumperfil_perfilFieldRefInput<$PrismaModel> | null
    in?: $Enums.perfil_perfil[] | null
    notIn?: $Enums.perfil_perfil[] | null
    not?: NestedEnumperfil_perfilNullableWithAggregatesFilter<$PrismaModel> | $Enums.perfil_perfil | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumperfil_perfilNullableFilter<$PrismaModel>
    _max?: NestedEnumperfil_perfilNullableFilter<$PrismaModel>
  }

  export type Enumperfil_area_coberturaNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.perfil_area_cobertura | Enumperfil_area_coberturaFieldRefInput<$PrismaModel> | null
    in?: $Enums.perfil_area_cobertura[] | null
    notIn?: $Enums.perfil_area_cobertura[] | null
    not?: NestedEnumperfil_area_coberturaNullableWithAggregatesFilter<$PrismaModel> | $Enums.perfil_area_cobertura | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumperfil_area_coberturaNullableFilter<$PrismaModel>
    _max?: NestedEnumperfil_area_coberturaNullableFilter<$PrismaModel>
  }

  export type Enumperfil_idiomaNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.perfil_idioma | Enumperfil_idiomaFieldRefInput<$PrismaModel> | null
    in?: $Enums.perfil_idioma[] | null
    notIn?: $Enums.perfil_idioma[] | null
    not?: NestedEnumperfil_idiomaNullableWithAggregatesFilter<$PrismaModel> | $Enums.perfil_idioma | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumperfil_idiomaNullableFilter<$PrismaModel>
    _max?: NestedEnumperfil_idiomaNullableFilter<$PrismaModel>
  }

  export type permisosCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
    link?: SortOrder
    creado_por?: SortOrder
    created_at?: SortOrder
    update_at?: SortOrder
  }

  export type permisosAvgOrderByAggregateInput = {
    id?: SortOrder
    creado_por?: SortOrder
  }

  export type permisosMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
    link?: SortOrder
    creado_por?: SortOrder
    created_at?: SortOrder
    update_at?: SortOrder
  }

  export type permisosMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    descripcion?: SortOrder
    link?: SortOrder
    creado_por?: SortOrder
    created_at?: SortOrder
    update_at?: SortOrder
  }

  export type permisosSumOrderByAggregateInput = {
    id?: SortOrder
    creado_por?: SortOrder
  }

  export type tipo_actividadCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    tipo_padre_id?: SortOrder
    perfil_id?: SortOrder
    creado_por?: SortOrder
    created_at?: SortOrder
    update_at?: SortOrder
  }

  export type tipo_actividadAvgOrderByAggregateInput = {
    id?: SortOrder
    tipo_padre_id?: SortOrder
    perfil_id?: SortOrder
    creado_por?: SortOrder
  }

  export type tipo_actividadMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    tipo_padre_id?: SortOrder
    perfil_id?: SortOrder
    creado_por?: SortOrder
    created_at?: SortOrder
    update_at?: SortOrder
  }

  export type tipo_actividadMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    tipo_padre_id?: SortOrder
    perfil_id?: SortOrder
    creado_por?: SortOrder
    created_at?: SortOrder
    update_at?: SortOrder
  }

  export type tipo_actividadSumOrderByAggregateInput = {
    id?: SortOrder
    tipo_padre_id?: SortOrder
    perfil_id?: SortOrder
    creado_por?: SortOrder
  }

  export type tipo_productoraCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    tipo_padre_id?: SortOrder
    perfil_id?: SortOrder
    creado_por?: SortOrder
    created_at?: SortOrder
    update_at?: SortOrder
  }

  export type tipo_productoraAvgOrderByAggregateInput = {
    id?: SortOrder
    tipo_padre_id?: SortOrder
    perfil_id?: SortOrder
    creado_por?: SortOrder
  }

  export type tipo_productoraMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    tipo_padre_id?: SortOrder
    perfil_id?: SortOrder
    creado_por?: SortOrder
    created_at?: SortOrder
    update_at?: SortOrder
  }

  export type tipo_productoraMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    tipo_padre_id?: SortOrder
    perfil_id?: SortOrder
    creado_por?: SortOrder
    created_at?: SortOrder
    update_at?: SortOrder
  }

  export type tipo_productoraSumOrderByAggregateInput = {
    id?: SortOrder
    tipo_padre_id?: SortOrder
    perfil_id?: SortOrder
    creado_por?: SortOrder
  }

  export type tipo_servicioCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    tipo_padre_id?: SortOrder
    perfil_id?: SortOrder
    creado_por?: SortOrder
    created_at?: SortOrder
    update_at?: SortOrder
  }

  export type tipo_servicioAvgOrderByAggregateInput = {
    id?: SortOrder
    tipo_padre_id?: SortOrder
    perfil_id?: SortOrder
    creado_por?: SortOrder
  }

  export type tipo_servicioMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    tipo_padre_id?: SortOrder
    perfil_id?: SortOrder
    creado_por?: SortOrder
    created_at?: SortOrder
    update_at?: SortOrder
  }

  export type tipo_servicioMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    tipo_padre_id?: SortOrder
    perfil_id?: SortOrder
    creado_por?: SortOrder
    created_at?: SortOrder
    update_at?: SortOrder
  }

  export type tipo_servicioSumOrderByAggregateInput = {
    id?: SortOrder
    tipo_padre_id?: SortOrder
    perfil_id?: SortOrder
    creado_por?: SortOrder
  }

  export type Enumuser_rolFilter<$PrismaModel = never> = {
    equals?: $Enums.user_rol | Enumuser_rolFieldRefInput<$PrismaModel>
    in?: $Enums.user_rol[]
    notIn?: $Enums.user_rol[]
    not?: NestedEnumuser_rolFilter<$PrismaModel> | $Enums.user_rol
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type userCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    apellido?: SortOrder
    email?: SortOrder
    password?: SortOrder
    rol?: SortOrder
    created_at?: SortOrder
    update_at?: SortOrder
  }

  export type userAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type userMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    apellido?: SortOrder
    email?: SortOrder
    password?: SortOrder
    rol?: SortOrder
    created_at?: SortOrder
    update_at?: SortOrder
  }

  export type userMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    apellido?: SortOrder
    email?: SortOrder
    password?: SortOrder
    rol?: SortOrder
    created_at?: SortOrder
    update_at?: SortOrder
  }

  export type userSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type Enumuser_rolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.user_rol | Enumuser_rolFieldRefInput<$PrismaModel>
    in?: $Enums.user_rol[]
    notIn?: $Enums.user_rol[]
    not?: NestedEnumuser_rolWithAggregatesFilter<$PrismaModel> | $Enums.user_rol
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumuser_rolFilter<$PrismaModel>
    _max?: NestedEnumuser_rolFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type Enumusers_rolNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.users_rol | Enumusers_rolFieldRefInput<$PrismaModel> | null
    in?: $Enums.users_rol[] | null
    notIn?: $Enums.users_rol[] | null
    not?: NestedEnumusers_rolNullableFilter<$PrismaModel> | $Enums.users_rol | null
  }

  export type usersCountOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    apellido?: SortOrder
    email?: SortOrder
    password?: SortOrder
    rol?: SortOrder
    created_at?: SortOrder
    update_at?: SortOrder
  }

  export type usersAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type usersMaxOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    apellido?: SortOrder
    email?: SortOrder
    password?: SortOrder
    rol?: SortOrder
    created_at?: SortOrder
    update_at?: SortOrder
  }

  export type usersMinOrderByAggregateInput = {
    id?: SortOrder
    nombre?: SortOrder
    apellido?: SortOrder
    email?: SortOrder
    password?: SortOrder
    rol?: SortOrder
    created_at?: SortOrder
    update_at?: SortOrder
  }

  export type usersSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type Enumusers_rolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.users_rol | Enumusers_rolFieldRefInput<$PrismaModel> | null
    in?: $Enums.users_rol[] | null
    notIn?: $Enums.users_rol[] | null
    not?: NestedEnumusers_rolNullableWithAggregatesFilter<$PrismaModel> | $Enums.users_rol | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumusers_rolNullableFilter<$PrismaModel>
    _max?: NestedEnumusers_rolNullableFilter<$PrismaModel>
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type NullableEnumlocaciones_ciudadFieldUpdateOperationsInput = {
    set?: $Enums.locaciones_ciudad | null
  }

  export type NullableEnumlocaciones_jurisdiccionFieldUpdateOperationsInput = {
    set?: $Enums.locaciones_jurisdiccion | null
  }

  export type NullableFloatFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableEnumperfil_perfilFieldUpdateOperationsInput = {
    set?: $Enums.perfil_perfil | null
  }

  export type NullableEnumperfil_area_coberturaFieldUpdateOperationsInput = {
    set?: $Enums.perfil_area_cobertura | null
  }

  export type NullableEnumperfil_idiomaFieldUpdateOperationsInput = {
    set?: $Enums.perfil_idioma | null
  }

  export type Enumuser_rolFieldUpdateOperationsInput = {
    set?: $Enums.user_rol
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type NullableEnumusers_rolFieldUpdateOperationsInput = {
    set?: $Enums.users_rol | null
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedEnumlocaciones_ciudadNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.locaciones_ciudad | Enumlocaciones_ciudadFieldRefInput<$PrismaModel> | null
    in?: $Enums.locaciones_ciudad[] | null
    notIn?: $Enums.locaciones_ciudad[] | null
    not?: NestedEnumlocaciones_ciudadNullableFilter<$PrismaModel> | $Enums.locaciones_ciudad | null
  }

  export type NestedEnumlocaciones_jurisdiccionNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.locaciones_jurisdiccion | Enumlocaciones_jurisdiccionFieldRefInput<$PrismaModel> | null
    in?: $Enums.locaciones_jurisdiccion[] | null
    notIn?: $Enums.locaciones_jurisdiccion[] | null
    not?: NestedEnumlocaciones_jurisdiccionNullableFilter<$PrismaModel> | $Enums.locaciones_jurisdiccion | null
  }

  export type NestedEnumlocaciones_ciudadNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.locaciones_ciudad | Enumlocaciones_ciudadFieldRefInput<$PrismaModel> | null
    in?: $Enums.locaciones_ciudad[] | null
    notIn?: $Enums.locaciones_ciudad[] | null
    not?: NestedEnumlocaciones_ciudadNullableWithAggregatesFilter<$PrismaModel> | $Enums.locaciones_ciudad | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumlocaciones_ciudadNullableFilter<$PrismaModel>
    _max?: NestedEnumlocaciones_ciudadNullableFilter<$PrismaModel>
  }

  export type NestedEnumlocaciones_jurisdiccionNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.locaciones_jurisdiccion | Enumlocaciones_jurisdiccionFieldRefInput<$PrismaModel> | null
    in?: $Enums.locaciones_jurisdiccion[] | null
    notIn?: $Enums.locaciones_jurisdiccion[] | null
    not?: NestedEnumlocaciones_jurisdiccionNullableWithAggregatesFilter<$PrismaModel> | $Enums.locaciones_jurisdiccion | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumlocaciones_jurisdiccionNullableFilter<$PrismaModel>
    _max?: NestedEnumlocaciones_jurisdiccionNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type NestedEnumperfil_perfilNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.perfil_perfil | Enumperfil_perfilFieldRefInput<$PrismaModel> | null
    in?: $Enums.perfil_perfil[] | null
    notIn?: $Enums.perfil_perfil[] | null
    not?: NestedEnumperfil_perfilNullableFilter<$PrismaModel> | $Enums.perfil_perfil | null
  }

  export type NestedEnumperfil_area_coberturaNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.perfil_area_cobertura | Enumperfil_area_coberturaFieldRefInput<$PrismaModel> | null
    in?: $Enums.perfil_area_cobertura[] | null
    notIn?: $Enums.perfil_area_cobertura[] | null
    not?: NestedEnumperfil_area_coberturaNullableFilter<$PrismaModel> | $Enums.perfil_area_cobertura | null
  }

  export type NestedEnumperfil_idiomaNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.perfil_idioma | Enumperfil_idiomaFieldRefInput<$PrismaModel> | null
    in?: $Enums.perfil_idioma[] | null
    notIn?: $Enums.perfil_idioma[] | null
    not?: NestedEnumperfil_idiomaNullableFilter<$PrismaModel> | $Enums.perfil_idioma | null
  }

  export type NestedEnumperfil_perfilNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.perfil_perfil | Enumperfil_perfilFieldRefInput<$PrismaModel> | null
    in?: $Enums.perfil_perfil[] | null
    notIn?: $Enums.perfil_perfil[] | null
    not?: NestedEnumperfil_perfilNullableWithAggregatesFilter<$PrismaModel> | $Enums.perfil_perfil | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumperfil_perfilNullableFilter<$PrismaModel>
    _max?: NestedEnumperfil_perfilNullableFilter<$PrismaModel>
  }

  export type NestedEnumperfil_area_coberturaNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.perfil_area_cobertura | Enumperfil_area_coberturaFieldRefInput<$PrismaModel> | null
    in?: $Enums.perfil_area_cobertura[] | null
    notIn?: $Enums.perfil_area_cobertura[] | null
    not?: NestedEnumperfil_area_coberturaNullableWithAggregatesFilter<$PrismaModel> | $Enums.perfil_area_cobertura | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumperfil_area_coberturaNullableFilter<$PrismaModel>
    _max?: NestedEnumperfil_area_coberturaNullableFilter<$PrismaModel>
  }

  export type NestedEnumperfil_idiomaNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.perfil_idioma | Enumperfil_idiomaFieldRefInput<$PrismaModel> | null
    in?: $Enums.perfil_idioma[] | null
    notIn?: $Enums.perfil_idioma[] | null
    not?: NestedEnumperfil_idiomaNullableWithAggregatesFilter<$PrismaModel> | $Enums.perfil_idioma | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumperfil_idiomaNullableFilter<$PrismaModel>
    _max?: NestedEnumperfil_idiomaNullableFilter<$PrismaModel>
  }

  export type NestedEnumuser_rolFilter<$PrismaModel = never> = {
    equals?: $Enums.user_rol | Enumuser_rolFieldRefInput<$PrismaModel>
    in?: $Enums.user_rol[]
    notIn?: $Enums.user_rol[]
    not?: NestedEnumuser_rolFilter<$PrismaModel> | $Enums.user_rol
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedEnumuser_rolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.user_rol | Enumuser_rolFieldRefInput<$PrismaModel>
    in?: $Enums.user_rol[]
    notIn?: $Enums.user_rol[]
    not?: NestedEnumuser_rolWithAggregatesFilter<$PrismaModel> | $Enums.user_rol
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumuser_rolFilter<$PrismaModel>
    _max?: NestedEnumuser_rolFilter<$PrismaModel>
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedEnumusers_rolNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.users_rol | Enumusers_rolFieldRefInput<$PrismaModel> | null
    in?: $Enums.users_rol[] | null
    notIn?: $Enums.users_rol[] | null
    not?: NestedEnumusers_rolNullableFilter<$PrismaModel> | $Enums.users_rol | null
  }

  export type NestedEnumusers_rolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.users_rol | Enumusers_rolFieldRefInput<$PrismaModel> | null
    in?: $Enums.users_rol[] | null
    notIn?: $Enums.users_rol[] | null
    not?: NestedEnumusers_rolNullableWithAggregatesFilter<$PrismaModel> | $Enums.users_rol | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumusers_rolNullableFilter<$PrismaModel>
    _max?: NestedEnumusers_rolNullableFilter<$PrismaModel>
  }



  /**
   * Aliases for legacy arg types
   */
    /**
     * @deprecated Use areas_desempenioDefaultArgs instead
     */
    export type areas_desempenioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = areas_desempenioDefaultArgs<ExtArgs>
    /**
     * @deprecated Use categoria_locacionesDefaultArgs instead
     */
    export type categoria_locacionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = categoria_locacionesDefaultArgs<ExtArgs>
    /**
     * @deprecated Use imagenes_locacionesDefaultArgs instead
     */
    export type imagenes_locacionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = imagenes_locacionesDefaultArgs<ExtArgs>
    /**
     * @deprecated Use imagenes_prestadoresDefaultArgs instead
     */
    export type imagenes_prestadoresArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = imagenes_prestadoresDefaultArgs<ExtArgs>
    /**
     * @deprecated Use locacionesDefaultArgs instead
     */
    export type locacionesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = locacionesDefaultArgs<ExtArgs>
    /**
     * @deprecated Use perfilDefaultArgs instead
     */
    export type perfilArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = perfilDefaultArgs<ExtArgs>
    /**
     * @deprecated Use permisosDefaultArgs instead
     */
    export type permisosArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = permisosDefaultArgs<ExtArgs>
    /**
     * @deprecated Use tipo_actividadDefaultArgs instead
     */
    export type tipo_actividadArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = tipo_actividadDefaultArgs<ExtArgs>
    /**
     * @deprecated Use tipo_productoraDefaultArgs instead
     */
    export type tipo_productoraArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = tipo_productoraDefaultArgs<ExtArgs>
    /**
     * @deprecated Use tipo_servicioDefaultArgs instead
     */
    export type tipo_servicioArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = tipo_servicioDefaultArgs<ExtArgs>
    /**
     * @deprecated Use userDefaultArgs instead
     */
    export type userArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = userDefaultArgs<ExtArgs>
    /**
     * @deprecated Use usersDefaultArgs instead
     */
    export type usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = usersDefaultArgs<ExtArgs>

  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}